/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./ohio-sdk/sdk/api/Accounts.ts":
/*!**************************************!*\
  !*** ./ohio-sdk/sdk/api/Accounts.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Accounts\": () => (/* binding */ Accounts)\n/* harmony export */ });\n/* eslint-disable */ /* tslint:disable */ /*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */ class Accounts {\n    constructor(http){\n        this.http = http;\n    }\n    /**\n   * No description\n   *\n   * @tags accounts, state\n   * @name GetAccount\n   * @summary Get account\n   * @request GET:/accounts/{address}\n   */ getAccount = (address, params = {})=>this.http.request({\n            path: `/accounts/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params\n        });\n    /**\n   * No description\n   *\n   * @tags accounts, state\n   * @name GetAccountResources\n   * @summary Get account resources\n   * @request GET:/accounts/{address}/resources\n   */ getAccountResources = (address, query, params = {})=>this.http.request({\n            path: `/accounts/${address}/resources`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description This API renders a resource identified by the owner account `address` and the `resource_type`, at a ledger version (AKA transaction version) specified as a query param, otherwise the latest version is used.\n   *\n   * @tags accounts, state\n   * @name GetAccountResource\n   * @summary Get resource by account address and resource type.\n   * @request GET:/accounts/{address}/resource/{resource_type}\n   */ getAccountResource = (address, resourceType, query, params = {})=>this.http.request({\n            path: `/accounts/${address}/resource/${resourceType}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * No description\n   *\n   * @tags accounts, state\n   * @name GetAccountModules\n   * @summary Get account modules\n   * @request GET:/accounts/{address}/modules\n   */ getAccountModules = (address, query, params = {})=>this.http.request({\n            path: `/accounts/${address}/modules`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description This API renders a Move module identified by the module id. A module id consists of the module owner `address` and the `module_name`. The module is rendered at a ledger version (AKA transaction version) specified as a query param, otherwise the latest version is used.\n   *\n   * @tags accounts, state\n   * @name GetAccountModule\n   * @summary Get module by module id.\n   * @request GET:/accounts/{address}/module/{module_name}\n   */ getAccountModule = (address, moduleName, query, params = {})=>this.http.request({\n            path: `/accounts/${address}/module/${moduleName}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * No description\n   *\n   * @tags transactions\n   * @name GetAccountTransactions\n   * @summary Get account transactions\n   * @request GET:/accounts/{address}/transactions\n   */ getAccountTransactions = (address, query, params = {})=>this.http.request({\n            path: `/accounts/${address}/transactions`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description This API extracts event key from the account resource identified by the `event_handle_struct` and `field_name`, then returns events identified by the event key.\n   *\n   * @tags events\n   * @name GetEventsByEventHandle\n   * @summary Get events by event handle\n   * @request GET:/accounts/{address}/events/{event_handle_struct}/{field_name}\n   */ getEventsByEventHandle = (address, eventHandleStruct, fieldName, query, params = {})=>this.http.request({\n            path: `/accounts/${address}/events/${eventHandleStruct}/${fieldName}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvYXBpL0FjY291bnRzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7O0NBT0MsR0FlTSxNQUFNQSxRQUFRO0lBR25CQyxZQUFZQyxJQUFrQyxDQUFFO1FBQzlDLElBQUksQ0FBQ0EsSUFBSSxHQUFHQSxJQUFJLENBQUM7S0FDbEI7SUFFRDs7Ozs7OztHQU9DLEdBQ0RDLFVBQVUsR0FBRyxDQUFDQyxPQUFnQixFQUFFQyxNQUFxQixHQUFHLEVBQUUsR0FDeEQsSUFBSSxDQUFDSCxJQUFJLENBQUNJLE9BQU8sQ0FBc0I7WUFDckNDLElBQUksRUFBRSxDQUFDLFVBQVUsRUFBRUgsT0FBTyxDQUFDLENBQUM7WUFDNUJJLE1BQU0sRUFBRSxLQUFLO1lBQ2JDLE1BQU0sRUFBRSxNQUFNO1lBQ2QsR0FBR0osTUFBTTtTQUNWLENBQUMsQ0FBQztJQUNMOzs7Ozs7O0dBT0MsR0FDREssbUJBQW1CLEdBQUcsQ0FBQ04sT0FBZ0IsRUFBRU8sS0FBbUMsRUFBRU4sTUFBcUIsR0FBRyxFQUFFLEdBQ3RHLElBQUksQ0FBQ0gsSUFBSSxDQUFDSSxPQUFPLENBQWdDO1lBQy9DQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLEVBQUVILE9BQU8sQ0FBQyxVQUFVLENBQUM7WUFDdENJLE1BQU0sRUFBRSxLQUFLO1lBQ2JHLEtBQUssRUFBRUEsS0FBSztZQUNaRixNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUdKLE1BQU07U0FDVixDQUFDLENBQUM7SUFDTDs7Ozs7OztHQU9DLEdBQ0RPLGtCQUFrQixHQUFHLENBQ25CUixPQUFnQixFQUNoQlMsWUFBNkIsRUFDN0JGLEtBQW1DLEVBQ25DTixNQUFxQixHQUFHLEVBQUUsR0FFMUIsSUFBSSxDQUFDSCxJQUFJLENBQUNJLE9BQU8sQ0FBOEI7WUFDN0NDLElBQUksRUFBRSxDQUFDLFVBQVUsRUFBRUgsT0FBTyxDQUFDLFVBQVUsRUFBRVMsWUFBWSxDQUFDLENBQUM7WUFDckRMLE1BQU0sRUFBRSxLQUFLO1lBQ2JHLEtBQUssRUFBRUEsS0FBSztZQUNaRixNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUdKLE1BQU07U0FDVixDQUFDLENBQUM7SUFDTDs7Ozs7OztHQU9DLEdBQ0RTLGlCQUFpQixHQUFHLENBQUNWLE9BQWdCLEVBQUVPLEtBQW1DLEVBQUVOLE1BQXFCLEdBQUcsRUFBRSxHQUNwRyxJQUFJLENBQUNILElBQUksQ0FBQ0ksT0FBTyxDQUEyQjtZQUMxQ0MsSUFBSSxFQUFFLENBQUMsVUFBVSxFQUFFSCxPQUFPLENBQUMsUUFBUSxDQUFDO1lBQ3BDSSxNQUFNLEVBQUUsS0FBSztZQUNiRyxLQUFLLEVBQUVBLEtBQUs7WUFDWkYsTUFBTSxFQUFFLE1BQU07WUFDZCxHQUFHSixNQUFNO1NBQ1YsQ0FBQyxDQUFDO0lBQ0w7Ozs7Ozs7R0FPQyxHQUNEVSxnQkFBZ0IsR0FBRyxDQUNqQlgsT0FBZ0IsRUFDaEJZLFVBQWtCLEVBQ2xCTCxLQUFtQyxFQUNuQ04sTUFBcUIsR0FBRyxFQUFFLEdBRTFCLElBQUksQ0FBQ0gsSUFBSSxDQUFDSSxPQUFPLENBQXlCO1lBQ3hDQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLEVBQUVILE9BQU8sQ0FBQyxRQUFRLEVBQUVZLFVBQVUsQ0FBQyxDQUFDO1lBQ2pEUixNQUFNLEVBQUUsS0FBSztZQUNiRyxLQUFLLEVBQUVBLEtBQUs7WUFDWkYsTUFBTSxFQUFFLE1BQU07WUFDZCxHQUFHSixNQUFNO1NBQ1YsQ0FBQyxDQUFDO0lBQ0w7Ozs7Ozs7R0FPQyxHQUNEWSxzQkFBc0IsR0FBRyxDQUFDYixPQUFnQixFQUFFTyxLQUEwQyxFQUFFTixNQUFxQixHQUFHLEVBQUUsR0FDaEgsSUFBSSxDQUFDSCxJQUFJLENBQUNJLE9BQU8sQ0FBbUM7WUFDbERDLElBQUksRUFBRSxDQUFDLFVBQVUsRUFBRUgsT0FBTyxDQUFDLGFBQWEsQ0FBQztZQUN6Q0ksTUFBTSxFQUFFLEtBQUs7WUFDYkcsS0FBSyxFQUFFQSxLQUFLO1lBQ1pGLE1BQU0sRUFBRSxNQUFNO1lBQ2QsR0FBR0osTUFBTTtTQUNWLENBQUMsQ0FBQztJQUNMOzs7Ozs7O0dBT0MsR0FDRGEsc0JBQXNCLEdBQUcsQ0FDdkJkLE9BQWdCLEVBQ2hCZSxpQkFBa0MsRUFDbENDLFNBQWlCLEVBQ2pCVCxLQUEwQyxFQUMxQ04sTUFBcUIsR0FBRyxFQUFFLEdBRTFCLElBQUksQ0FBQ0gsSUFBSSxDQUFDSSxPQUFPLENBQXNCO1lBQ3JDQyxJQUFJLEVBQUUsQ0FBQyxVQUFVLEVBQUVILE9BQU8sQ0FBQyxRQUFRLEVBQUVlLGlCQUFpQixDQUFDLENBQUMsRUFBRUMsU0FBUyxDQUFDLENBQUM7WUFDckVaLE1BQU0sRUFBRSxLQUFLO1lBQ2JHLEtBQUssRUFBRUEsS0FBSztZQUNaRixNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUdKLE1BQU07U0FDVixDQUFDLENBQUM7Q0FDTiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay9hcGkvQWNjb3VudHMudHM/MDU0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICMjIFRISVMgRklMRSBXQVMgR0VORVJBVEVEIFZJQSBTV0FHR0VSLVRZUEVTQ1JJUFQtQVBJICAgICAgICAjI1xuICogIyMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMjXG4gKiAjIyBBVVRIT1I6IGFjYWNvZGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyNcbiAqICMjIFNPVVJDRTogaHR0cHM6Ly9naXRodWIuY29tL2FjYWNvZGUvc3dhZ2dlci10eXBlc2NyaXB0LWFwaSAjI1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuaW1wb3J0IHtcbiAgQWNjb3VudCxcbiAgQWNjb3VudFJlc291cmNlLFxuICBBZGRyZXNzLFxuICBBcHRvc0Vycm9yLFxuICBFdmVudCxcbiAgTGVkZ2VyVmVyc2lvbixcbiAgTW92ZU1vZHVsZSxcbiAgTW92ZVN0cnVjdFRhZ0lkLFxuICBPbkNoYWluVHJhbnNhY3Rpb24sXG59IGZyb20gXCIuL2RhdGEtY29udHJhY3RzXCI7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBSZXF1ZXN0UGFyYW1zIH0gZnJvbSBcIi4vaHR0cC1jbGllbnRcIjtcblxuZXhwb3J0IGNsYXNzIEFjY291bnRzPFNlY3VyaXR5RGF0YVR5cGUgPSB1bmtub3duPiB7XG4gIGh0dHA6IEh0dHBDbGllbnQ8U2VjdXJpdHlEYXRhVHlwZT47XG5cbiAgY29uc3RydWN0b3IoaHR0cDogSHR0cENsaWVudDxTZWN1cml0eURhdGFUeXBlPikge1xuICAgIHRoaXMuaHR0cCA9IGh0dHA7XG4gIH1cblxuICAvKipcbiAgICogTm8gZGVzY3JpcHRpb25cbiAgICpcbiAgICogQHRhZ3MgYWNjb3VudHMsIHN0YXRlXG4gICAqIEBuYW1lIEdldEFjY291bnRcbiAgICogQHN1bW1hcnkgR2V0IGFjY291bnRcbiAgICogQHJlcXVlc3QgR0VUOi9hY2NvdW50cy97YWRkcmVzc31cbiAgICovXG4gIGdldEFjY291bnQgPSAoYWRkcmVzczogQWRkcmVzcywgcGFyYW1zOiBSZXF1ZXN0UGFyYW1zID0ge30pID0+XG4gICAgdGhpcy5odHRwLnJlcXVlc3Q8QWNjb3VudCwgQXB0b3NFcnJvcj4oe1xuICAgICAgcGF0aDogYC9hY2NvdW50cy8ke2FkZHJlc3N9YCxcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIGZvcm1hdDogXCJqc29uXCIsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfSk7XG4gIC8qKlxuICAgKiBObyBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBAdGFncyBhY2NvdW50cywgc3RhdGVcbiAgICogQG5hbWUgR2V0QWNjb3VudFJlc291cmNlc1xuICAgKiBAc3VtbWFyeSBHZXQgYWNjb3VudCByZXNvdXJjZXNcbiAgICogQHJlcXVlc3QgR0VUOi9hY2NvdW50cy97YWRkcmVzc30vcmVzb3VyY2VzXG4gICAqL1xuICBnZXRBY2NvdW50UmVzb3VyY2VzID0gKGFkZHJlc3M6IEFkZHJlc3MsIHF1ZXJ5PzogeyB2ZXJzaW9uPzogTGVkZ2VyVmVyc2lvbiB9LCBwYXJhbXM6IFJlcXVlc3RQYXJhbXMgPSB7fSkgPT5cbiAgICB0aGlzLmh0dHAucmVxdWVzdDxBY2NvdW50UmVzb3VyY2VbXSwgQXB0b3NFcnJvcj4oe1xuICAgICAgcGF0aDogYC9hY2NvdW50cy8ke2FkZHJlc3N9L3Jlc291cmNlc2AsXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBxdWVyeTogcXVlcnksXG4gICAgICBmb3JtYXQ6IFwianNvblwiLFxuICAgICAgLi4ucGFyYW1zLFxuICAgIH0pO1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoaXMgQVBJIHJlbmRlcnMgYSByZXNvdXJjZSBpZGVudGlmaWVkIGJ5IHRoZSBvd25lciBhY2NvdW50IGBhZGRyZXNzYCBhbmQgdGhlIGByZXNvdXJjZV90eXBlYCwgYXQgYSBsZWRnZXIgdmVyc2lvbiAoQUtBIHRyYW5zYWN0aW9uIHZlcnNpb24pIHNwZWNpZmllZCBhcyBhIHF1ZXJ5IHBhcmFtLCBvdGhlcndpc2UgdGhlIGxhdGVzdCB2ZXJzaW9uIGlzIHVzZWQuXG4gICAqXG4gICAqIEB0YWdzIGFjY291bnRzLCBzdGF0ZVxuICAgKiBAbmFtZSBHZXRBY2NvdW50UmVzb3VyY2VcbiAgICogQHN1bW1hcnkgR2V0IHJlc291cmNlIGJ5IGFjY291bnQgYWRkcmVzcyBhbmQgcmVzb3VyY2UgdHlwZS5cbiAgICogQHJlcXVlc3QgR0VUOi9hY2NvdW50cy97YWRkcmVzc30vcmVzb3VyY2Uve3Jlc291cmNlX3R5cGV9XG4gICAqL1xuICBnZXRBY2NvdW50UmVzb3VyY2UgPSAoXG4gICAgYWRkcmVzczogQWRkcmVzcyxcbiAgICByZXNvdXJjZVR5cGU6IE1vdmVTdHJ1Y3RUYWdJZCxcbiAgICBxdWVyeT86IHsgdmVyc2lvbj86IExlZGdlclZlcnNpb24gfSxcbiAgICBwYXJhbXM6IFJlcXVlc3RQYXJhbXMgPSB7fSxcbiAgKSA9PlxuICAgIHRoaXMuaHR0cC5yZXF1ZXN0PEFjY291bnRSZXNvdXJjZSwgQXB0b3NFcnJvcj4oe1xuICAgICAgcGF0aDogYC9hY2NvdW50cy8ke2FkZHJlc3N9L3Jlc291cmNlLyR7cmVzb3VyY2VUeXBlfWAsXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBxdWVyeTogcXVlcnksXG4gICAgICBmb3JtYXQ6IFwianNvblwiLFxuICAgICAgLi4ucGFyYW1zLFxuICAgIH0pO1xuICAvKipcbiAgICogTm8gZGVzY3JpcHRpb25cbiAgICpcbiAgICogQHRhZ3MgYWNjb3VudHMsIHN0YXRlXG4gICAqIEBuYW1lIEdldEFjY291bnRNb2R1bGVzXG4gICAqIEBzdW1tYXJ5IEdldCBhY2NvdW50IG1vZHVsZXNcbiAgICogQHJlcXVlc3QgR0VUOi9hY2NvdW50cy97YWRkcmVzc30vbW9kdWxlc1xuICAgKi9cbiAgZ2V0QWNjb3VudE1vZHVsZXMgPSAoYWRkcmVzczogQWRkcmVzcywgcXVlcnk/OiB7IHZlcnNpb24/OiBMZWRnZXJWZXJzaW9uIH0sIHBhcmFtczogUmVxdWVzdFBhcmFtcyA9IHt9KSA9PlxuICAgIHRoaXMuaHR0cC5yZXF1ZXN0PE1vdmVNb2R1bGVbXSwgQXB0b3NFcnJvcj4oe1xuICAgICAgcGF0aDogYC9hY2NvdW50cy8ke2FkZHJlc3N9L21vZHVsZXNgLFxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgZm9ybWF0OiBcImpzb25cIixcbiAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBUaGlzIEFQSSByZW5kZXJzIGEgTW92ZSBtb2R1bGUgaWRlbnRpZmllZCBieSB0aGUgbW9kdWxlIGlkLiBBIG1vZHVsZSBpZCBjb25zaXN0cyBvZiB0aGUgbW9kdWxlIG93bmVyIGBhZGRyZXNzYCBhbmQgdGhlIGBtb2R1bGVfbmFtZWAuIFRoZSBtb2R1bGUgaXMgcmVuZGVyZWQgYXQgYSBsZWRnZXIgdmVyc2lvbiAoQUtBIHRyYW5zYWN0aW9uIHZlcnNpb24pIHNwZWNpZmllZCBhcyBhIHF1ZXJ5IHBhcmFtLCBvdGhlcndpc2UgdGhlIGxhdGVzdCB2ZXJzaW9uIGlzIHVzZWQuXG4gICAqXG4gICAqIEB0YWdzIGFjY291bnRzLCBzdGF0ZVxuICAgKiBAbmFtZSBHZXRBY2NvdW50TW9kdWxlXG4gICAqIEBzdW1tYXJ5IEdldCBtb2R1bGUgYnkgbW9kdWxlIGlkLlxuICAgKiBAcmVxdWVzdCBHRVQ6L2FjY291bnRzL3thZGRyZXNzfS9tb2R1bGUve21vZHVsZV9uYW1lfVxuICAgKi9cbiAgZ2V0QWNjb3VudE1vZHVsZSA9IChcbiAgICBhZGRyZXNzOiBBZGRyZXNzLFxuICAgIG1vZHVsZU5hbWU6IHN0cmluZyxcbiAgICBxdWVyeT86IHsgdmVyc2lvbj86IExlZGdlclZlcnNpb24gfSxcbiAgICBwYXJhbXM6IFJlcXVlc3RQYXJhbXMgPSB7fSxcbiAgKSA9PlxuICAgIHRoaXMuaHR0cC5yZXF1ZXN0PE1vdmVNb2R1bGUsIEFwdG9zRXJyb3I+KHtcbiAgICAgIHBhdGg6IGAvYWNjb3VudHMvJHthZGRyZXNzfS9tb2R1bGUvJHttb2R1bGVOYW1lfWAsXG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBxdWVyeTogcXVlcnksXG4gICAgICBmb3JtYXQ6IFwianNvblwiLFxuICAgICAgLi4ucGFyYW1zLFxuICAgIH0pO1xuICAvKipcbiAgICogTm8gZGVzY3JpcHRpb25cbiAgICpcbiAgICogQHRhZ3MgdHJhbnNhY3Rpb25zXG4gICAqIEBuYW1lIEdldEFjY291bnRUcmFuc2FjdGlvbnNcbiAgICogQHN1bW1hcnkgR2V0IGFjY291bnQgdHJhbnNhY3Rpb25zXG4gICAqIEByZXF1ZXN0IEdFVDovYWNjb3VudHMve2FkZHJlc3N9L3RyYW5zYWN0aW9uc1xuICAgKi9cbiAgZ2V0QWNjb3VudFRyYW5zYWN0aW9ucyA9IChhZGRyZXNzOiBBZGRyZXNzLCBxdWVyeT86IHsgc3RhcnQ/OiBudW1iZXI7IGxpbWl0PzogbnVtYmVyIH0sIHBhcmFtczogUmVxdWVzdFBhcmFtcyA9IHt9KSA9PlxuICAgIHRoaXMuaHR0cC5yZXF1ZXN0PE9uQ2hhaW5UcmFuc2FjdGlvbltdLCBBcHRvc0Vycm9yPih7XG4gICAgICBwYXRoOiBgL2FjY291bnRzLyR7YWRkcmVzc30vdHJhbnNhY3Rpb25zYCxcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIHF1ZXJ5OiBxdWVyeSxcbiAgICAgIGZvcm1hdDogXCJqc29uXCIsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfSk7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gVGhpcyBBUEkgZXh0cmFjdHMgZXZlbnQga2V5IGZyb20gdGhlIGFjY291bnQgcmVzb3VyY2UgaWRlbnRpZmllZCBieSB0aGUgYGV2ZW50X2hhbmRsZV9zdHJ1Y3RgIGFuZCBgZmllbGRfbmFtZWAsIHRoZW4gcmV0dXJucyBldmVudHMgaWRlbnRpZmllZCBieSB0aGUgZXZlbnQga2V5LlxuICAgKlxuICAgKiBAdGFncyBldmVudHNcbiAgICogQG5hbWUgR2V0RXZlbnRzQnlFdmVudEhhbmRsZVxuICAgKiBAc3VtbWFyeSBHZXQgZXZlbnRzIGJ5IGV2ZW50IGhhbmRsZVxuICAgKiBAcmVxdWVzdCBHRVQ6L2FjY291bnRzL3thZGRyZXNzfS9ldmVudHMve2V2ZW50X2hhbmRsZV9zdHJ1Y3R9L3tmaWVsZF9uYW1lfVxuICAgKi9cbiAgZ2V0RXZlbnRzQnlFdmVudEhhbmRsZSA9IChcbiAgICBhZGRyZXNzOiBBZGRyZXNzLFxuICAgIGV2ZW50SGFuZGxlU3RydWN0OiBNb3ZlU3RydWN0VGFnSWQsXG4gICAgZmllbGROYW1lOiBzdHJpbmcsXG4gICAgcXVlcnk/OiB7IHN0YXJ0PzogbnVtYmVyOyBsaW1pdD86IG51bWJlciB9LFxuICAgIHBhcmFtczogUmVxdWVzdFBhcmFtcyA9IHt9LFxuICApID0+XG4gICAgdGhpcy5odHRwLnJlcXVlc3Q8RXZlbnRbXSwgQXB0b3NFcnJvcj4oe1xuICAgICAgcGF0aDogYC9hY2NvdW50cy8ke2FkZHJlc3N9L2V2ZW50cy8ke2V2ZW50SGFuZGxlU3RydWN0fS8ke2ZpZWxkTmFtZX1gLFxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgZm9ybWF0OiBcImpzb25cIixcbiAgICAgIC4uLnBhcmFtcyxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJBY2NvdW50cyIsImNvbnN0cnVjdG9yIiwiaHR0cCIsImdldEFjY291bnQiLCJhZGRyZXNzIiwicGFyYW1zIiwicmVxdWVzdCIsInBhdGgiLCJtZXRob2QiLCJmb3JtYXQiLCJnZXRBY2NvdW50UmVzb3VyY2VzIiwicXVlcnkiLCJnZXRBY2NvdW50UmVzb3VyY2UiLCJyZXNvdXJjZVR5cGUiLCJnZXRBY2NvdW50TW9kdWxlcyIsImdldEFjY291bnRNb2R1bGUiLCJtb2R1bGVOYW1lIiwiZ2V0QWNjb3VudFRyYW5zYWN0aW9ucyIsImdldEV2ZW50c0J5RXZlbnRIYW5kbGUiLCJldmVudEhhbmRsZVN0cnVjdCIsImZpZWxkTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/api/Accounts.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/api/Events.ts":
/*!************************************!*\
  !*** ./ohio-sdk/sdk/api/Events.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Events\": () => (/* binding */ Events)\n/* harmony export */ });\n/* eslint-disable */ /* tslint:disable */ /*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */ class Events {\n    constructor(http){\n        this.http = http;\n    }\n    /**\n   * No description\n   *\n   * @tags events\n   * @name GetEventsByEventKey\n   * @summary Get events by event key\n   * @request GET:/events/{event_key}\n   */ getEventsByEventKey = (eventKey, params = {})=>this.http.request({\n            path: `/events/${eventKey}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params\n        });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvYXBpL0V2ZW50cy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsa0JBQWtCLEdBQ2xCLGtCQUFrQixHQUNsQjs7Ozs7OztDQU9DLEdBS00sTUFBTUEsTUFBTTtJQUdqQkMsWUFBWUMsSUFBa0MsQ0FBRTtRQUM5QyxJQUFJLENBQUNBLElBQUksR0FBR0EsSUFBSSxDQUFDO0tBQ2xCO0lBRUQ7Ozs7Ozs7R0FPQyxHQUNEQyxtQkFBbUIsR0FBRyxDQUFDQyxRQUF5QixFQUFFQyxNQUFxQixHQUFHLEVBQUUsR0FDMUUsSUFBSSxDQUFDSCxJQUFJLENBQUNJLE9BQU8sQ0FBc0I7WUFDckNDLElBQUksRUFBRSxDQUFDLFFBQVEsRUFBRUgsUUFBUSxDQUFDLENBQUM7WUFDM0JJLE1BQU0sRUFBRSxLQUFLO1lBQ2JDLE1BQU0sRUFBRSxNQUFNO1lBQ2QsR0FBR0osTUFBTTtTQUNWLENBQUMsQ0FBQztDQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvc2RrL2FwaS9FdmVudHMudHM/N2U3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICMjIFRISVMgRklMRSBXQVMgR0VORVJBVEVEIFZJQSBTV0FHR0VSLVRZUEVTQ1JJUFQtQVBJICAgICAgICAjI1xuICogIyMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMjXG4gKiAjIyBBVVRIT1I6IGFjYWNvZGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyNcbiAqICMjIFNPVVJDRTogaHR0cHM6Ly9naXRodWIuY29tL2FjYWNvZGUvc3dhZ2dlci10eXBlc2NyaXB0LWFwaSAjI1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuaW1wb3J0IHsgQXB0b3NFcnJvciwgRXZlbnQsIEhleEVuY29kZWRCeXRlcyB9IGZyb20gXCIuL2RhdGEtY29udHJhY3RzXCI7XG5pbXBvcnQgeyBIdHRwQ2xpZW50LCBSZXF1ZXN0UGFyYW1zIH0gZnJvbSBcIi4vaHR0cC1jbGllbnRcIjtcblxuZXhwb3J0IGNsYXNzIEV2ZW50czxTZWN1cml0eURhdGFUeXBlID0gdW5rbm93bj4ge1xuICBodHRwOiBIdHRwQ2xpZW50PFNlY3VyaXR5RGF0YVR5cGU+O1xuXG4gIGNvbnN0cnVjdG9yKGh0dHA6IEh0dHBDbGllbnQ8U2VjdXJpdHlEYXRhVHlwZT4pIHtcbiAgICB0aGlzLmh0dHAgPSBodHRwO1xuICB9XG5cbiAgLyoqXG4gICAqIE5vIGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEB0YWdzIGV2ZW50c1xuICAgKiBAbmFtZSBHZXRFdmVudHNCeUV2ZW50S2V5XG4gICAqIEBzdW1tYXJ5IEdldCBldmVudHMgYnkgZXZlbnQga2V5XG4gICAqIEByZXF1ZXN0IEdFVDovZXZlbnRzL3tldmVudF9rZXl9XG4gICAqL1xuICBnZXRFdmVudHNCeUV2ZW50S2V5ID0gKGV2ZW50S2V5OiBIZXhFbmNvZGVkQnl0ZXMsIHBhcmFtczogUmVxdWVzdFBhcmFtcyA9IHt9KSA9PlxuICAgIHRoaXMuaHR0cC5yZXF1ZXN0PEV2ZW50W10sIEFwdG9zRXJyb3I+KHtcbiAgICAgIHBhdGg6IGAvZXZlbnRzLyR7ZXZlbnRLZXl9YCxcbiAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgIGZvcm1hdDogXCJqc29uXCIsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsiRXZlbnRzIiwiY29uc3RydWN0b3IiLCJodHRwIiwiZ2V0RXZlbnRzQnlFdmVudEtleSIsImV2ZW50S2V5IiwicGFyYW1zIiwicmVxdWVzdCIsInBhdGgiLCJtZXRob2QiLCJmb3JtYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/api/Events.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/api/Tables.ts":
/*!************************************!*\
  !*** ./ohio-sdk/sdk/api/Tables.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tables\": () => (/* binding */ Tables)\n/* harmony export */ });\n/* harmony import */ var _http_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http-client */ \"./ohio-sdk/sdk/api/http-client.ts\");\n/* eslint-disable */ /* tslint:disable */ /*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */ \nclass Tables {\n    constructor(http){\n        this.http = http;\n    }\n    /**\n   * @description Gets a table item for a table identified by the handle and the key for the item. Key and value types need to be passed in to help with key serialization and value deserialization.\n   *\n   * @tags state, table\n   * @name GetTableItem\n   * @summary Get table item by handle and key.\n   * @request POST:/tables/{table_handle}/item\n   */ getTableItem = (tableHandle, data, params = {})=>this.http.request({\n            path: `/tables/${tableHandle}/item`,\n            method: \"POST\",\n            body: data,\n            type: _http_client__WEBPACK_IMPORTED_MODULE_0__.ContentType.Json,\n            format: \"json\",\n            ...params\n        });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvYXBpL1RhYmxlcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGtCQUFrQixHQUNsQixrQkFBa0IsR0FDbEI7Ozs7Ozs7Q0FPQyxHQUdzRTtBQUVoRSxNQUFNQyxNQUFNO0lBR2pCQyxZQUFZQyxJQUFrQyxDQUFFO1FBQzlDLElBQUksQ0FBQ0EsSUFBSSxHQUFHQSxJQUFJLENBQUM7S0FDbEI7SUFFRDs7Ozs7OztHQU9DLEdBQ0RDLFlBQVksR0FBRyxDQUFDQyxXQUFtQixFQUFFQyxJQUFzQixFQUFFQyxNQUFxQixHQUFHLEVBQUUsR0FDckYsSUFBSSxDQUFDSixJQUFJLENBQUNLLE9BQU8sQ0FBcUI7WUFDcENDLElBQUksRUFBRSxDQUFDLFFBQVEsRUFBRUosV0FBVyxDQUFDLEtBQUssQ0FBQztZQUNuQ0ssTUFBTSxFQUFFLE1BQU07WUFDZEMsSUFBSSxFQUFFTCxJQUFJO1lBQ1ZNLElBQUksRUFBRVosMERBQWdCO1lBQ3RCYyxNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUdQLE1BQU07U0FDVixDQUFDLENBQUM7Q0FDTiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay9hcGkvVGFibGVzLnRzP2ZhMzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbi8qIHRzbGludDpkaXNhYmxlICovXG4vKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAjIyBUSElTIEZJTEUgV0FTIEdFTkVSQVRFRCBWSUEgU1dBR0dFUi1UWVBFU0NSSVBULUFQSSAgICAgICAgIyNcbiAqICMjICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjI1xuICogIyMgQVVUSE9SOiBhY2Fjb2RlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMjXG4gKiAjIyBTT1VSQ0U6IGh0dHBzOi8vZ2l0aHViLmNvbS9hY2Fjb2RlL3N3YWdnZXItdHlwZXNjcmlwdC1hcGkgIyNcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICovXG5cbmltcG9ydCB7IEFwdG9zRXJyb3IsIFRhYmxlSXRlbVJlcXVlc3QgfSBmcm9tIFwiLi9kYXRhLWNvbnRyYWN0c1wiO1xuaW1wb3J0IHsgQ29udGVudFR5cGUsIEh0dHBDbGllbnQsIFJlcXVlc3RQYXJhbXMgfSBmcm9tIFwiLi9odHRwLWNsaWVudFwiO1xuXG5leHBvcnQgY2xhc3MgVGFibGVzPFNlY3VyaXR5RGF0YVR5cGUgPSB1bmtub3duPiB7XG4gIGh0dHA6IEh0dHBDbGllbnQ8U2VjdXJpdHlEYXRhVHlwZT47XG5cbiAgY29uc3RydWN0b3IoaHR0cDogSHR0cENsaWVudDxTZWN1cml0eURhdGFUeXBlPikge1xuICAgIHRoaXMuaHR0cCA9IGh0dHA7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIEdldHMgYSB0YWJsZSBpdGVtIGZvciBhIHRhYmxlIGlkZW50aWZpZWQgYnkgdGhlIGhhbmRsZSBhbmQgdGhlIGtleSBmb3IgdGhlIGl0ZW0uIEtleSBhbmQgdmFsdWUgdHlwZXMgbmVlZCB0byBiZSBwYXNzZWQgaW4gdG8gaGVscCB3aXRoIGtleSBzZXJpYWxpemF0aW9uIGFuZCB2YWx1ZSBkZXNlcmlhbGl6YXRpb24uXG4gICAqXG4gICAqIEB0YWdzIHN0YXRlLCB0YWJsZVxuICAgKiBAbmFtZSBHZXRUYWJsZUl0ZW1cbiAgICogQHN1bW1hcnkgR2V0IHRhYmxlIGl0ZW0gYnkgaGFuZGxlIGFuZCBrZXkuXG4gICAqIEByZXF1ZXN0IFBPU1Q6L3RhYmxlcy97dGFibGVfaGFuZGxlfS9pdGVtXG4gICAqL1xuICBnZXRUYWJsZUl0ZW0gPSAodGFibGVIYW5kbGU6IHN0cmluZywgZGF0YTogVGFibGVJdGVtUmVxdWVzdCwgcGFyYW1zOiBSZXF1ZXN0UGFyYW1zID0ge30pID0+XG4gICAgdGhpcy5odHRwLnJlcXVlc3Q8b2JqZWN0LCBBcHRvc0Vycm9yPih7XG4gICAgICBwYXRoOiBgL3RhYmxlcy8ke3RhYmxlSGFuZGxlfS9pdGVtYCxcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBib2R5OiBkYXRhLFxuICAgICAgdHlwZTogQ29udGVudFR5cGUuSnNvbixcbiAgICAgIGZvcm1hdDogXCJqc29uXCIsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOlsiQ29udGVudFR5cGUiLCJUYWJsZXMiLCJjb25zdHJ1Y3RvciIsImh0dHAiLCJnZXRUYWJsZUl0ZW0iLCJ0YWJsZUhhbmRsZSIsImRhdGEiLCJwYXJhbXMiLCJyZXF1ZXN0IiwicGF0aCIsIm1ldGhvZCIsImJvZHkiLCJ0eXBlIiwiSnNvbiIsImZvcm1hdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/api/Tables.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/api/Transactions.ts":
/*!******************************************!*\
  !*** ./ohio-sdk/sdk/api/Transactions.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Transactions\": () => (/* binding */ Transactions)\n/* harmony export */ });\n/* harmony import */ var _http_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http-client */ \"./ohio-sdk/sdk/api/http-client.ts\");\n/* eslint-disable */ /* tslint:disable */ /*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */ \nclass Transactions {\n    constructor(http){\n        this.http = http;\n    }\n    /**\n   * No description\n   *\n   * @tags transactions\n   * @name GetTransactions\n   * @summary Get transactions\n   * @request GET:/transactions\n   */ getTransactions = (query, params = {})=>this.http.request({\n            path: `/transactions`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description **Submit transaction using JSON without additional tools** * Send [POST /transactions/signing_message](#operation/create-signing-message) to create transaction signing message. * Sign the transaction signing message and create transaction signature. * Submit the user transaction request with the transaction siganture. The request header \"Content-Type\" must set to \"application/json\".\n   *\n   * @tags transactions\n   * @name SubmitTransaction\n   * @summary Submit transaction\n   * @request POST:/transactions\n   */ submitTransaction = (data, params = {})=>this.http.request({\n            path: `/transactions`,\n            method: \"POST\",\n            body: data,\n            type: _http_client__WEBPACK_IMPORTED_MODULE_0__.ContentType.Json,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description **Submit transaction for simulation result using JSON ** * Create a SignedTransaction with zero-padded signature * Submit the user transaction request with the zero-padded siganture. * The request header \"Content-Type\" must set to \"application/json\".\n   *\n   * @tags transactions\n   * @name SimulateTransaction\n   * @summary Simulate transaction\n   * @request POST:/transactions/simulate\n   */ simulateTransaction = (data, params = {})=>this.http.request({\n            path: `/transactions/simulate`,\n            method: \"POST\",\n            body: data,\n            type: _http_client__WEBPACK_IMPORTED_MODULE_0__.ContentType.Json,\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description There are two types of transaction identifiers: 1. Transaction hash: included in any transaction JSON respond from server. 2. Transaction version: included in on-chain transaction JSON respond from server. When given transaction hash, server first looks up on-chain transaction by hash; if no on-chain transaction found, then look up transaction by hash in the mempool (pending) transactions. When given a transaction version, server looks up the transaction on-chain by version. To create a transaction hash: 1. Create hash message bytes: \"APTOS::RawTransaction\" bytes + BCS bytes of [Transaction](https://aptos-labs.github.io/aptos-core/aptos_types/transaction/enum.Transaction.html). 2. Apply hash algorithm `SHA3-256` to the hash message bytes. 3. Hex-encode the hash bytes with `0x` prefix.\n   *\n   * @tags transactions\n   * @name GetTransaction\n   * @summary Get transaction\n   * @request GET:/transactions/{txn_hash_or_version}\n   */ getTransaction = (txnHashOrVersion, params = {})=>this.http.request({\n            path: `/transactions/${txnHashOrVersion}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params\n        });\n    /**\n   * @description This API creates transaction signing message for client to create transaction signature. The success response contains hex-encoded signing message bytes. **To sign the message** 1. Client first needs to HEX decode the `message` into bytes. 2. Then sign the bytes to create signature.\n   *\n   * @tags transactions\n   * @name CreateSigningMessage\n   * @summary Create transaction signing message\n   * @request POST:/transactions/signing_message\n   */ createSigningMessage = (data, params = {})=>this.http.request({\n            path: `/transactions/signing_message`,\n            method: \"POST\",\n            body: data,\n            type: _http_client__WEBPACK_IMPORTED_MODULE_0__.ContentType.Json,\n            format: \"json\",\n            ...params\n        });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/api/Transactions.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/api/data-contracts.ts":
/*!********************************************!*\
  !*** ./ohio-sdk/sdk/api/data-contracts.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MoveAbility\": () => (/* binding */ MoveAbility)\n/* harmony export */ });\n/* eslint-disable */ /* tslint:disable */ /*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */ var MoveAbility;\n(function(MoveAbility) {\n    MoveAbility[\"Copy\"] = \"copy\";\n    MoveAbility[\"Drop\"] = \"drop\";\n    MoveAbility[\"Store\"] = \"store\";\n    MoveAbility[\"Key\"] = \"key\";\n})(MoveAbility || (MoveAbility = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/api/data-contracts.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/api/http-client.ts":
/*!*****************************************!*\
  !*** ./ohio-sdk/sdk/api/http-client.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ContentType\": () => (/* binding */ ContentType),\n/* harmony export */   \"HttpClient\": () => (/* binding */ HttpClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./ohio-sdk/node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-disable */ /* tslint:disable */ /*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */ \nvar ContentType;\n(function(ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nclass HttpClient {\n    securityData = null;\n    constructor({ securityWorker , secure , format , ...axiosConfig } = {}){\n        this.instance = axios__WEBPACK_IMPORTED_MODULE_0___default().create({\n            ...axiosConfig,\n            baseURL: axiosConfig.baseURL || \"\"\n        });\n        this.secure = secure;\n        this.format = format;\n        this.securityWorker = securityWorker;\n    }\n    setSecurityData = (data)=>{\n        this.securityData = data;\n    };\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.instance.defaults,\n            ...params1,\n            ...params2 || {},\n            // @ts-ignore\n            headers: {\n                ...this.instance.defaults.headers || {},\n                ...params1.headers || {},\n                ...params2 && params2.headers || {}\n            }\n        };\n    }\n    createFormData(input) {\n        return Object.keys(input || {}).reduce((formData, key)=>{\n            const property = input[key];\n            formData.append(key, property instanceof Blob ? property : typeof property === \"object\" && property !== null ? JSON.stringify(property) : `${property}`);\n            return formData;\n        }, new FormData());\n    }\n    request = async ({ secure , path , type , query , format , body , ...params })=>{\n        const secureParams = (typeof secure === \"boolean\" ? secure : this.secure) && this.securityWorker && await this.securityWorker(this.securityData) || {};\n        const requestParams = this.mergeRequestParams(params, secureParams);\n        const responseFormat = format && this.format || void 0;\n        if (type === ContentType.FormData && body && body !== null && typeof body === \"object\") {\n            // @ts-ignore\n            requestParams.headers.common = {\n                Accept: \"*/*\"\n            };\n            // @ts-ignore\n            requestParams.headers.post = {};\n            // @ts-ignore\n            requestParams.headers.put = {};\n            body = this.createFormData(body);\n        }\n        return this.instance.request({\n            ...requestParams,\n            headers: {\n                ...type && type !== ContentType.FormData ? {\n                    \"Content-Type\": type\n                } : {},\n                ...requestParams.headers || {}\n            },\n            params: query,\n            responseType: responseFormat,\n            data: body,\n            url: path\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvYXBpL2h0dHAtY2xpZW50LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxrQkFBa0IsR0FDbEIsa0JBQWtCLEdBQ2xCOzs7Ozs7O0NBT0MsR0FFNkY7SUE2QnZGLFdBSU47VUFKV0MsV0FBVztJQUFYQSxXQUFXLENBQ3JCQyxNQUFJLElBQUcsa0JBQWtCO0lBRGZELFdBQVcsQ0FFckJFLFVBQVEsSUFBRyxxQkFBcUI7SUFGdEJGLFdBQVcsQ0FHckJHLFlBQVUsSUFBRyxtQ0FBbUM7R0FIdENILFdBQVcsS0FBWEEsV0FBVztBQU1oQixNQUFNSSxVQUFVO0lBRXJCLFlBQW9CLEdBQTRCLElBQUksQ0FBQztJQUtyREUsWUFBWSxFQUFFQyxjQUFjLEdBQUVDLE1BQU0sR0FBRUMsTUFBTSxHQUFFLEdBQUdDLFdBQVcsRUFBK0IsR0FBRyxFQUFFLENBQUU7UUFDaEcsSUFBSSxDQUFDQyxRQUFRLEdBQUdaLG1EQUFZLENBQUM7WUFBRSxHQUFHVyxXQUFXO1lBQUVHLE9BQU8sRUFBRUgsV0FBVyxDQUFDRyxPQUFPLElBQUksRUFBRTtTQUFFLENBQUMsQ0FBQztRQUNyRixJQUFJLENBQUNMLE1BQU0sR0FBR0EsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDRixjQUFjLEdBQUdBLGNBQWMsQ0FBQztLQUN0QztJQUVELGVBQXNCLEdBQUcsQ0FBQ1EsSUFBNkIsR0FBSztRQUMxRCxJQUFJLENBQUNWLFlBQVksR0FBR1UsSUFBSSxDQUFDO0tBQzFCLENBQUM7SUFFRixrQkFBMEIsQ0FBQ0UsT0FBMkIsRUFBRUMsT0FBNEIsRUFBc0I7UUFDeEcsT0FBTztZQUNMLEdBQUcsSUFBSSxDQUFDUCxRQUFRLENBQUNRLFFBQVE7WUFDekIsR0FBR0YsT0FBTztZQUNWLEdBQUlDLE9BQU8sSUFBSSxFQUFFO1lBQ2pCLGFBQWE7WUFDYkUsT0FBTyxFQUFFO2dCQUNQLEdBQUksSUFBSSxDQUFDVCxRQUFRLENBQUNRLFFBQVEsQ0FBQ0MsT0FBTyxJQUFJLEVBQUU7Z0JBQ3hDLEdBQUlILE9BQU8sQ0FBQ0csT0FBTyxJQUFJLEVBQUU7Z0JBQ3pCLEdBQUksT0FBUSxJQUFJRixPQUFPLENBQUNFLE9BQU8sSUFBSyxFQUFFO2FBQ3ZDO1NBQ0YsQ0FBQztLQUNIO0lBRUQsY0FBc0IsQ0FBQ0UsS0FBOEIsRUFBWTtRQUMvRCxPQUFPQyxNQUFNLENBQUNDLElBQUksQ0FBQ0YsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDRyxNQUFNLENBQUMsQ0FBQ0MsUUFBUSxFQUFFQyxHQUFHLEdBQUs7WUFDeEQsTUFBTUMsUUFBUSxHQUFHTixLQUFLLENBQUNLLEdBQUcsQ0FBQztZQUMzQkQsUUFBUSxDQUFDRyxNQUFNLENBQ2JGLEdBQUcsRUFDSEMsUUFBUSxZQUFZRSxJQUFJLEdBQ3BCRixRQUFRLEdBQ1IsT0FBT0EsUUFBUSxLQUFLLFFBQVEsSUFBSUEsUUFBUSxLQUFLLElBQUksR0FDakRHLElBQUksQ0FBQ0MsU0FBUyxDQUFDSixRQUFRLENBQUMsR0FDeEIsQ0FBQyxFQUFFQSxRQUFRLENBQUMsQ0FBQyxDQUNsQixDQUFDO1lBQ0YsT0FBT0YsUUFBUSxDQUFDO1NBQ2pCLEVBQUUsSUFBSXhCLFFBQVEsRUFBRSxDQUFDLENBQUM7S0FDcEI7SUFFRCxPQUFjLEdBQUcsT0FBMEIsRUFDekNNLE1BQU0sR0FDTjBCLElBQUksR0FDSkMsSUFBSSxHQUNKQyxLQUFLLEdBQ0wzQixNQUFNLEdBQ040QixJQUFJLEdBQ0osR0FBR0MsTUFBTSxFQUNTLEdBQWdDO1FBQ2xELE1BQU1DLFlBQVksR0FDaEIsQ0FBRSxPQUFPL0IsTUFBTSxLQUFLLFNBQVMsR0FBR0EsTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTSxDQUFDLElBQ25ELElBQUksQ0FBQ0QsY0FBYyxJQUNsQixNQUFNLElBQUksQ0FBQ0EsY0FBYyxDQUFDLElBQUksQ0FBQ0YsWUFBWSxDQUFDLElBQy9DLEVBQUU7UUFDSixNQUFNbUMsYUFBYSxHQUFHLElBQUksQ0FBQ3hCLGtCQUFrQixDQUFDc0IsTUFBTSxFQUFFQyxZQUFZLENBQUM7UUFDbkUsTUFBTUUsY0FBYyxHQUFHLE1BQU8sSUFBSSxJQUFJLENBQUNoQyxNQUFNLElBQUssS0FBSyxDQUFDO1FBRXhELElBQUkwQixJQUFJLEtBQUtuQyxXQUFXLENBQUNFLFFBQVEsSUFBSW1DLElBQUksSUFBSUEsSUFBSSxLQUFLLElBQUksSUFBSSxPQUFPQSxJQUFJLEtBQUssUUFBUSxFQUFFO1lBQ3RGLGFBQWE7WUFDYkcsYUFBYSxDQUFDcEIsT0FBTyxDQUFDc0IsTUFBTSxHQUFHO2dCQUFFQyxNQUFNLEVBQUUsS0FBSzthQUFFLENBQUM7WUFDakQsYUFBYTtZQUNiSCxhQUFhLENBQUNwQixPQUFPLENBQUN3QixJQUFJLEdBQUcsRUFBRSxDQUFDO1lBQ2hDLGFBQWE7WUFDYkosYUFBYSxDQUFDcEIsT0FBTyxDQUFDeUIsR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUUvQlIsSUFBSSxHQUFHLElBQUksQ0FBQ2hCLGNBQWMsQ0FBQ2dCLElBQUksQ0FBNEIsQ0FBQztTQUM3RDtRQUVELE9BQU8sSUFBSSxDQUFDMUIsUUFBUSxDQUFDc0IsT0FBTyxDQUFDO1lBQzNCLEdBQUdPLGFBQWE7WUFDaEJwQixPQUFPLEVBQUU7Z0JBQ1AsR0FBSWUsSUFBSSxJQUFJQSxJQUFJLEtBQUtuQyxXQUFXLENBQUNFLFFBQVEsR0FBRztvQkFBRSxjQUFjLEVBQUVpQyxJQUFJO2lCQUFFLEdBQUcsRUFBRTtnQkFDekUsR0FBSUssYUFBYSxDQUFDcEIsT0FBTyxJQUFJLEVBQUU7YUFDaEM7WUFDRGtCLE1BQU0sRUFBRUYsS0FBSztZQUNiVSxZQUFZLEVBQUVMLGNBQWM7WUFDNUIxQixJQUFJLEVBQUVzQixJQUFJO1lBQ1ZVLEdBQUcsRUFBRWIsSUFBSTtTQUNWLENBQUMsQ0FBQztLQUNKLENBQUM7Q0FDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay9hcGkvaHR0cC1jbGllbnQudHM/ZjI5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICMjIFRISVMgRklMRSBXQVMgR0VORVJBVEVEIFZJQSBTV0FHR0VSLVRZUEVTQ1JJUFQtQVBJICAgICAgICAjI1xuICogIyMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMjXG4gKiAjIyBBVVRIT1I6IGFjYWNvZGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyNcbiAqICMjIFNPVVJDRTogaHR0cHM6Ly9naXRodWIuY29tL2FjYWNvZGUvc3dhZ2dlci10eXBlc2NyaXB0LWFwaSAjI1xuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKi9cblxuaW1wb3J0IGF4aW9zLCB7IEF4aW9zSW5zdGFuY2UsIEF4aW9zUmVxdWVzdENvbmZpZywgQXhpb3NSZXNwb25zZSwgUmVzcG9uc2VUeXBlIH0gZnJvbSBcImF4aW9zXCI7XG5cbmV4cG9ydCB0eXBlIFF1ZXJ5UGFyYW1zVHlwZSA9IFJlY29yZDxzdHJpbmcgfCBudW1iZXIsIGFueT47XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnVsbFJlcXVlc3RQYXJhbXMgZXh0ZW5kcyBPbWl0PEF4aW9zUmVxdWVzdENvbmZpZywgXCJkYXRhXCIgfCBcInBhcmFtc1wiIHwgXCJ1cmxcIiB8IFwicmVzcG9uc2VUeXBlXCI+IHtcbiAgLyoqIHNldCBwYXJhbWV0ZXIgdG8gYHRydWVgIGZvciBjYWxsIGBzZWN1cml0eVdvcmtlcmAgZm9yIHRoaXMgcmVxdWVzdCAqL1xuICBzZWN1cmU/OiBib29sZWFuO1xuICAvKiogcmVxdWVzdCBwYXRoICovXG4gIHBhdGg6IHN0cmluZztcbiAgLyoqIGNvbnRlbnQgdHlwZSBvZiByZXF1ZXN0IGJvZHkgKi9cbiAgdHlwZT86IENvbnRlbnRUeXBlO1xuICAvKiogcXVlcnkgcGFyYW1zICovXG4gIHF1ZXJ5PzogUXVlcnlQYXJhbXNUeXBlO1xuICAvKiogZm9ybWF0IG9mIHJlc3BvbnNlIChpLmUuIHJlc3BvbnNlLmpzb24oKSAtPiBmb3JtYXQ6IFwianNvblwiKSAqL1xuICBmb3JtYXQ/OiBSZXNwb25zZVR5cGU7XG4gIC8qKiByZXF1ZXN0IGJvZHkgKi9cbiAgYm9keT86IHVua25vd247XG59XG5cbmV4cG9ydCB0eXBlIFJlcXVlc3RQYXJhbXMgPSBPbWl0PEZ1bGxSZXF1ZXN0UGFyYW1zLCBcImJvZHlcIiB8IFwibWV0aG9kXCIgfCBcInF1ZXJ5XCIgfCBcInBhdGhcIj47XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBpQ29uZmlnPFNlY3VyaXR5RGF0YVR5cGUgPSB1bmtub3duPiBleHRlbmRzIE9taXQ8QXhpb3NSZXF1ZXN0Q29uZmlnLCBcImRhdGFcIiB8IFwiY2FuY2VsVG9rZW5cIj4ge1xuICBzZWN1cml0eVdvcmtlcj86IChcbiAgICBzZWN1cml0eURhdGE6IFNlY3VyaXR5RGF0YVR5cGUgfCBudWxsLFxuICApID0+IFByb21pc2U8QXhpb3NSZXF1ZXN0Q29uZmlnIHwgdm9pZD4gfCBBeGlvc1JlcXVlc3RDb25maWcgfCB2b2lkO1xuICBzZWN1cmU/OiBib29sZWFuO1xuICBmb3JtYXQ/OiBSZXNwb25zZVR5cGU7XG59XG5cbmV4cG9ydCBlbnVtIENvbnRlbnRUeXBlIHtcbiAgSnNvbiA9IFwiYXBwbGljYXRpb24vanNvblwiLFxuICBGb3JtRGF0YSA9IFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiLFxuICBVcmxFbmNvZGVkID0gXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcbn1cblxuZXhwb3J0IGNsYXNzIEh0dHBDbGllbnQ8U2VjdXJpdHlEYXRhVHlwZSA9IHVua25vd24+IHtcbiAgcHVibGljIGluc3RhbmNlOiBBeGlvc0luc3RhbmNlO1xuICBwcml2YXRlIHNlY3VyaXR5RGF0YTogU2VjdXJpdHlEYXRhVHlwZSB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIHNlY3VyaXR5V29ya2VyPzogQXBpQ29uZmlnPFNlY3VyaXR5RGF0YVR5cGU+W1wic2VjdXJpdHlXb3JrZXJcIl07XG4gIHByaXZhdGUgc2VjdXJlPzogYm9vbGVhbjtcbiAgcHJpdmF0ZSBmb3JtYXQ/OiBSZXNwb25zZVR5cGU7XG5cbiAgY29uc3RydWN0b3IoeyBzZWN1cml0eVdvcmtlciwgc2VjdXJlLCBmb3JtYXQsIC4uLmF4aW9zQ29uZmlnIH06IEFwaUNvbmZpZzxTZWN1cml0eURhdGFUeXBlPiA9IHt9KSB7XG4gICAgdGhpcy5pbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7IC4uLmF4aW9zQ29uZmlnLCBiYXNlVVJMOiBheGlvc0NvbmZpZy5iYXNlVVJMIHx8IFwiXCIgfSk7XG4gICAgdGhpcy5zZWN1cmUgPSBzZWN1cmU7XG4gICAgdGhpcy5mb3JtYXQgPSBmb3JtYXQ7XG4gICAgdGhpcy5zZWN1cml0eVdvcmtlciA9IHNlY3VyaXR5V29ya2VyO1xuICB9XG5cbiAgcHVibGljIHNldFNlY3VyaXR5RGF0YSA9IChkYXRhOiBTZWN1cml0eURhdGFUeXBlIHwgbnVsbCkgPT4ge1xuICAgIHRoaXMuc2VjdXJpdHlEYXRhID0gZGF0YTtcbiAgfTtcblxuICBwcml2YXRlIG1lcmdlUmVxdWVzdFBhcmFtcyhwYXJhbXMxOiBBeGlvc1JlcXVlc3RDb25maWcsIHBhcmFtczI/OiBBeGlvc1JlcXVlc3RDb25maWcpOiBBeGlvc1JlcXVlc3RDb25maWcge1xuICAgIHJldHVybiB7XG4gICAgICAuLi50aGlzLmluc3RhbmNlLmRlZmF1bHRzLFxuICAgICAgLi4ucGFyYW1zMSxcbiAgICAgIC4uLihwYXJhbXMyIHx8IHt9KSxcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgLi4uKHRoaXMuaW5zdGFuY2UuZGVmYXVsdHMuaGVhZGVycyB8fCB7fSksXG4gICAgICAgIC4uLihwYXJhbXMxLmhlYWRlcnMgfHwge30pLFxuICAgICAgICAuLi4oKHBhcmFtczIgJiYgcGFyYW1zMi5oZWFkZXJzKSB8fCB7fSksXG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICBwcml2YXRlIGNyZWF0ZUZvcm1EYXRhKGlucHV0OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IEZvcm1EYXRhIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoaW5wdXQgfHwge30pLnJlZHVjZSgoZm9ybURhdGEsIGtleSkgPT4ge1xuICAgICAgY29uc3QgcHJvcGVydHkgPSBpbnB1dFtrZXldO1xuICAgICAgZm9ybURhdGEuYXBwZW5kKFxuICAgICAgICBrZXksXG4gICAgICAgIHByb3BlcnR5IGluc3RhbmNlb2YgQmxvYlxuICAgICAgICAgID8gcHJvcGVydHlcbiAgICAgICAgICA6IHR5cGVvZiBwcm9wZXJ0eSA9PT0gXCJvYmplY3RcIiAmJiBwcm9wZXJ0eSAhPT0gbnVsbFxuICAgICAgICAgID8gSlNPTi5zdHJpbmdpZnkocHJvcGVydHkpXG4gICAgICAgICAgOiBgJHtwcm9wZXJ0eX1gLFxuICAgICAgKTtcbiAgICAgIHJldHVybiBmb3JtRGF0YTtcbiAgICB9LCBuZXcgRm9ybURhdGEoKSk7XG4gIH1cblxuICBwdWJsaWMgcmVxdWVzdCA9IGFzeW5jIDxUID0gYW55LCBfRSA9IGFueT4oe1xuICAgIHNlY3VyZSxcbiAgICBwYXRoLFxuICAgIHR5cGUsXG4gICAgcXVlcnksXG4gICAgZm9ybWF0LFxuICAgIGJvZHksXG4gICAgLi4ucGFyYW1zXG4gIH06IEZ1bGxSZXF1ZXN0UGFyYW1zKTogUHJvbWlzZTxBeGlvc1Jlc3BvbnNlPFQ+PiA9PiB7XG4gICAgY29uc3Qgc2VjdXJlUGFyYW1zID1cbiAgICAgICgodHlwZW9mIHNlY3VyZSA9PT0gXCJib29sZWFuXCIgPyBzZWN1cmUgOiB0aGlzLnNlY3VyZSkgJiZcbiAgICAgICAgdGhpcy5zZWN1cml0eVdvcmtlciAmJlxuICAgICAgICAoYXdhaXQgdGhpcy5zZWN1cml0eVdvcmtlcih0aGlzLnNlY3VyaXR5RGF0YSkpKSB8fFxuICAgICAge307XG4gICAgY29uc3QgcmVxdWVzdFBhcmFtcyA9IHRoaXMubWVyZ2VSZXF1ZXN0UGFyYW1zKHBhcmFtcywgc2VjdXJlUGFyYW1zKTtcbiAgICBjb25zdCByZXNwb25zZUZvcm1hdCA9IChmb3JtYXQgJiYgdGhpcy5mb3JtYXQpIHx8IHZvaWQgMDtcblxuICAgIGlmICh0eXBlID09PSBDb250ZW50VHlwZS5Gb3JtRGF0YSAmJiBib2R5ICYmIGJvZHkgIT09IG51bGwgJiYgdHlwZW9mIGJvZHkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJlcXVlc3RQYXJhbXMuaGVhZGVycy5jb21tb24gPSB7IEFjY2VwdDogXCIqLypcIiB9O1xuICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgcmVxdWVzdFBhcmFtcy5oZWFkZXJzLnBvc3QgPSB7fTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIHJlcXVlc3RQYXJhbXMuaGVhZGVycy5wdXQgPSB7fTtcblxuICAgICAgYm9keSA9IHRoaXMuY3JlYXRlRm9ybURhdGEoYm9keSBhcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuaW5zdGFuY2UucmVxdWVzdCh7XG4gICAgICAuLi5yZXF1ZXN0UGFyYW1zLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAuLi4odHlwZSAmJiB0eXBlICE9PSBDb250ZW50VHlwZS5Gb3JtRGF0YSA/IHsgXCJDb250ZW50LVR5cGVcIjogdHlwZSB9IDoge30pLFxuICAgICAgICAuLi4ocmVxdWVzdFBhcmFtcy5oZWFkZXJzIHx8IHt9KSxcbiAgICAgIH0sXG4gICAgICBwYXJhbXM6IHF1ZXJ5LFxuICAgICAgcmVzcG9uc2VUeXBlOiByZXNwb25zZUZvcm1hdCxcbiAgICAgIGRhdGE6IGJvZHksXG4gICAgICB1cmw6IHBhdGgsXG4gICAgfSk7XG4gIH07XG59XG4iXSwibmFtZXMiOlsiYXhpb3MiLCJDb250ZW50VHlwZSIsIkpzb24iLCJGb3JtRGF0YSIsIlVybEVuY29kZWQiLCJIdHRwQ2xpZW50Iiwic2VjdXJpdHlEYXRhIiwiY29uc3RydWN0b3IiLCJzZWN1cml0eVdvcmtlciIsInNlY3VyZSIsImZvcm1hdCIsImF4aW9zQ29uZmlnIiwiaW5zdGFuY2UiLCJjcmVhdGUiLCJiYXNlVVJMIiwic2V0U2VjdXJpdHlEYXRhIiwiZGF0YSIsIm1lcmdlUmVxdWVzdFBhcmFtcyIsInBhcmFtczEiLCJwYXJhbXMyIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY3JlYXRlRm9ybURhdGEiLCJpbnB1dCIsIk9iamVjdCIsImtleXMiLCJyZWR1Y2UiLCJmb3JtRGF0YSIsImtleSIsInByb3BlcnR5IiwiYXBwZW5kIiwiQmxvYiIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXF1ZXN0IiwicGF0aCIsInR5cGUiLCJxdWVyeSIsImJvZHkiLCJwYXJhbXMiLCJzZWN1cmVQYXJhbXMiLCJyZXF1ZXN0UGFyYW1zIiwicmVzcG9uc2VGb3JtYXQiLCJjb21tb24iLCJBY2NlcHQiLCJwb3N0IiwicHV0IiwicmVzcG9uc2VUeXBlIiwidXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/api/http-client.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/aptos_account.ts":
/*!***************************************!*\
  !*** ./ohio-sdk/sdk/aptos_account.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AptosAccount\": () => (/* binding */ AptosAccount)\n/* harmony export */ });\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl */ \"./ohio-sdk/node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tweetnacl__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-sha3 */ \"./ohio-sdk/node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var buffer___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! buffer/ */ \"./ohio-sdk/node_modules/buffer/index.js\");\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n\n\n // the trailing slash is important!\n\n/**\n * Class for creating and managing Aptos account\n */ class AptosAccount {\n    static fromAptosAccountObject(obj) {\n        return new AptosAccount(_hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString.ensure(obj.privateKeyHex).toUint8Array(), obj.address);\n    }\n    /**\n   * Creates new account instance. Constructor allows passing in an address,\n   * to handle account key rotation, where auth_key != public_key\n   * @param privateKeyBytes  Private key from which account key pair will be generated.\n   * If not specified, new key pair is going to be created.\n   * @param address Account address (e.g. 0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591).\n   * If not specified, a new one will be generated from public key\n   */ constructor(privateKeyBytes, address){\n        if (privateKeyBytes) {\n            this.signingKey = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(privateKeyBytes.slice(0, 32));\n        } else {\n            this.signingKey = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair();\n        }\n        this.accountAddress = _hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString.ensure(address || this.authKey().hex());\n    }\n    /**\n   * This is the key by which Aptos account is referenced.\n   * It is the 32-byte of the SHA-3 256 cryptographic hash\n   * of the public key(s) concatenated with a signature scheme identifier byte\n   * @returns Address associated with the given account\n   */ address() {\n        return this.accountAddress;\n    }\n    /**\n   * This key enables account owners to rotate their private key(s)\n   * associated with the account without changing the address that hosts their account.\n   * See here for more info: {@link https://aptos.dev/basics/basics-accounts#single-signer-authentication}\n   * @returns Authentication key for the associated account\n   */ authKey() {\n        if (!this.authKeyCached) {\n            const hash = js_sha3__WEBPACK_IMPORTED_MODULE_1__.sha3_256.create();\n            hash.update(buffer___WEBPACK_IMPORTED_MODULE_2__.Buffer.from(this.signingKey.publicKey));\n            hash.update(\"\\0\");\n            this.authKeyCached = new _hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString(hash.hex());\n        }\n        return this.authKeyCached;\n    }\n    /**\n   * This key is generated with Ed25519 scheme.\n   * Public key is used to check a signature of transaction, signed by given account\n   * @returns The public key for the associated account\n   */ pubKey() {\n        return _hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString.ensure(buffer___WEBPACK_IMPORTED_MODULE_2__.Buffer.from(this.signingKey.publicKey).toString(\"hex\"));\n    }\n    /**\n   * Signs specified `buffer` with account's private key\n   * @param buffer A buffer to sign\n   * @returns A signature HexString\n   */ signBuffer(buffer) {\n        const signature = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign(buffer, this.signingKey.secretKey);\n        return _hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString.ensure(buffer___WEBPACK_IMPORTED_MODULE_2__.Buffer.from(signature).toString(\"hex\").slice(0, 128));\n    }\n    /**\n   * Signs specified `hexString` with account's private key\n   * @param hexString A regular string or HexString to sign\n   * @returns A signature HexString\n   */ signHexString(hexString) {\n        const toSign = _hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString.ensure(hexString).toBuffer();\n        return this.signBuffer(toSign);\n    }\n    /**\n   * Derives account address, public key and private key\n   * @returns AptosAccountObject instance.\n   * @example An example of the returned AptosAccountObject object\n   * ```\n   * {\n   *    address: \"0xe8012714cd17606cee7188a2a365eef3fe760be598750678c8c5954eb548a591\",\n   *    publicKeyHex: \"0xf56d8524faf79fbc0f48c13aeed3b0ce5dd376b4db93b8130a107c0a5e04ba04\",\n   *    privateKeyHex: `0x009c9f7c992a06cfafe916f125d8adb7a395fca243e264a8e56a4b3e6accf940\n   *      d2b11e9ece3049ce60e3c7b4a1c58aebfa9298e29a30a58a67f1998646135204`\n   * }\n   * ```\n   */ toPrivateKeyObject() {\n        return {\n            address: this.address().hex(),\n            publicKeyHex: this.pubKey().hex(),\n            privateKeyHex: _hex_string__WEBPACK_IMPORTED_MODULE_3__.HexString.fromUint8Array(this.signingKey.secretKey.slice(0, 32)).hex()\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/aptos_account.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/aptos_client.ts":
/*!**************************************!*\
  !*** ./ohio-sdk/sdk/aptos_client.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AptosClient\": () => (/* binding */ AptosClient),\n/* harmony export */   \"RequestError\": () => (/* binding */ RequestError),\n/* harmony export */   \"raiseForStatus\": () => (/* binding */ raiseForStatus)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @swc/helpers/src/_ts_decorate.mjs */ \"./node_modules/@swc/helpers/src/_ts_decorate.mjs\");\n/* harmony import */ var typescript_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! typescript-memoize */ \"./ohio-sdk/node_modules/typescript-memoize/dist/memoize-decorator.js\");\n/* harmony import */ var typescript_memoize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(typescript_memoize__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _api_Accounts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api/Accounts */ \"./ohio-sdk/sdk/api/Accounts.ts\");\n/* harmony import */ var _api_Events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./api/Events */ \"./ohio-sdk/sdk/api/Events.ts\");\n/* harmony import */ var _api_Transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api/Transactions */ \"./ohio-sdk/sdk/api/Transactions.ts\");\n/* harmony import */ var _api_http_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api/http-client */ \"./ohio-sdk/sdk/api/http-client.ts\");\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./util */ \"./ohio-sdk/sdk/util.ts\");\n/* harmony import */ var _api_Tables__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./api/Tables */ \"./ohio-sdk/sdk/api/Tables.ts\");\n/* harmony import */ var _transaction_builder__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transaction_builder */ \"./ohio-sdk/sdk/transaction_builder/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_transaction_builder__WEBPACK_IMPORTED_MODULE_8__, _swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_9__]);\n([_transaction_builder__WEBPACK_IMPORTED_MODULE_8__, _swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\nclass RequestError extends Error {\n    constructor(message, response, requestBody){\n        const data = JSON.stringify(response?.data);\n        const hostAndPath = [\n            response?.request?.host,\n            response?.request?.path\n        ].filter((e)=>!!e).join(\"\");\n        super(`${message} - ${data}${hostAndPath ? ` @ ${hostAndPath}` : \"\"}${requestBody ? ` : ${requestBody}` : \"\"}`);\n        this.response = response;\n        this.requestBody = requestBody;\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\nfunction raiseForStatus(expectedStatus, response, requestContent) {\n    if (response.status !== expectedStatus) {\n        if (requestContent) {\n            throw new RequestError(response.statusText, response, JSON.stringify(requestContent));\n        }\n        throw new RequestError(response.statusText, response);\n    }\n}\n/**\n * Provides methods for retrieving data from Aptos node.\n * For more detailed API specification see {@link https://fullnode.devnet.aptoslabs.com/spec.html#/}\n */ class AptosClient {\n    /**\n   * Establishes a connection to Aptos node\n   * @param nodeUrl A url of the Aptos Node API endpoint\n   * @param config An optional config for inner axios instance.\n   * Detailed `config` description: {@link https://github.com/axios/axios#request-config}\n   */ constructor(nodeUrl, config, extraConfig){\n        this.nodeUrl = nodeUrl;\n        // `withCredentials` ensures cookie handling\n        this.client = new _api_http_client__WEBPACK_IMPORTED_MODULE_4__.HttpClient({\n            withCredentials: false,\n            baseURL: nodeUrl,\n            validateStatus: ()=>true,\n            ...config || {}\n        });\n        // Initialize routes\n        this.accounts = new _api_Accounts__WEBPACK_IMPORTED_MODULE_1__.Accounts(this.client);\n        this.tables = new _api_Tables__WEBPACK_IMPORTED_MODULE_7__.Tables(this.client);\n        this.events = new _api_Events__WEBPACK_IMPORTED_MODULE_2__.Events(this.client);\n        this.transactions = new _api_Transactions__WEBPACK_IMPORTED_MODULE_3__.Transactions(this.client);\n        this.abis = extraConfig?.abis;\n    }\n    /**\n   * Queries an Aptos account by address\n   * @param accountAddress Hex-encoded 16 bytes Aptos account address\n   * @returns Core account resource, used for identifying account and transaction execution\n   * @example An example of the returned account\n   * ```\n   * {\n   *    sequence_number: \"1\",\n   *    authentication_key: \"0x5307b5f4bc67829097a8ba9b43dba3b88261eeccd1f709d9bde240fc100fbb69\"\n   * }\n   * ```\n   */ async getAccount(accountAddress) {\n        const response = await this.accounts.getAccount(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(accountAddress).hex());\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /**\n   * Queries transactions sent by given account\n   * @param accountAddress Hex-encoded 16 bytes Aptos account address\n   * @param query Optional pagination object\n   * @param query.start The start transaction version of the page. Default is the latest ledger version\n   * @param query.limit The max number of transactions should be returned for the page. Default is 25.\n   * @returns An array of on-chain transactions, sent by account\n   */ async getAccountTransactions(accountAddress, query) {\n        const response = await this.accounts.getAccountTransactions(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(accountAddress).hex(), query);\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /**\n   * Queries modules associated with given account\n   * @param accountAddress Hex-encoded 16 bytes Aptos account address\n   * @param query.version Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account modules array for a specific ledger version.\n   * Module is represented by MoveModule interface. It contains module `bytecode` and `abi`,\n   * which is JSON representation of a module\n   */ async getAccountModules(accountAddress, query) {\n        const response = await this.accounts.getAccountModules(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(accountAddress).hex(), query);\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /**\n   * Queries module associated with given account by module name\n   * @param accountAddress Hex-encoded 16 bytes Aptos account address\n   * @param moduleName The name of the module\n   * @param query.version Specifies ledger version of transactions. By default latest version will be used\n   * @returns Specified module.\n   * Module is represented by MoveModule interface. It contains module `bytecode` and `abi`,\n   * which JSON representation of a module\n   */ async getAccountModule(accountAddress, moduleName, query) {\n        const response = await this.accounts.getAccountModule(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(accountAddress).hex(), moduleName, query);\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /**\n   * Queries all resources associated with given account\n   * @param accountAddress Hex-encoded 16 bytes Aptos account address\n   * @param query.version Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account resources for a specific ledger version\n   * @example An example of an account resource\n   * ```\n   * {\n   *    type: \"0x1::account::Coin\",\n   *    data: { value: 6 }\n   * }\n   * ```\n   */ async getAccountResources(accountAddress, query) {\n        const response = await this.accounts.getAccountResources(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(accountAddress).hex(), query);\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /**\n   * Queries resource associated with given account by resource type\n   * @param accountAddress Hex-encoded 16 bytes Aptos account address\n   * @param resourceType String representation of an on-chain Move struct type\n   * @param query.version Specifies ledger version of transactions. By default latest version will be used\n   * @returns Account resource of specified type and ledger version\n   * @example An example of an account resource\n   * ```\n   * {\n   *    type: \"0x1::account::Coin\",\n   *    data: { value: 6 }\n   * }\n   * ```\n   */ async getAccountResource(accountAddress, resourceType, query) {\n        const response = await this.accounts.getAccountResource(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(accountAddress).hex(), resourceType, query);\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /** Generates a signed transaction that can be submitted to the chain for execution. */ static generateBCSTransaction(accountFrom, rawTxn) {\n        const txnBuilder = new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TransactionBuilderEd25519((signingMessage)=>{\n            // @ts-ignore\n            const sigHexStr = accountFrom.signBuffer(signingMessage);\n            return new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TxnBuilderTypes.Ed25519Signature(sigHexStr.toUint8Array());\n        }, accountFrom.pubKey().toUint8Array());\n        return txnBuilder.sign(rawTxn);\n    }\n    /** Generates a BCS transaction that can be submitted to the chain for simulation. */ static generateBCSSimulation(accountFrom, rawTxn) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const txnBuilder = new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TransactionBuilderEd25519((_signingMessage)=>{\n            // @ts-ignore\n            const invalidSigBytes = new Uint8Array(64);\n            return new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TxnBuilderTypes.Ed25519Signature(invalidSigBytes);\n        }, accountFrom.pubKey().toUint8Array());\n        return txnBuilder.sign(rawTxn);\n    }\n    /** Generates a transaction request that can be submitted to produce a raw transaction that\n   * can be signed, which upon being signed can be submitted to the blockchain\n   * @param sender Hex-encoded 16 bytes Aptos account address of transaction sender\n   * @param payload Transaction payload. It depends on transaction type you want to send\n   * @param options Options allow to overwrite default transaction options.\n   * Defaults are:\n   * ```bash\n   *   {\n   *     sender: senderAddress.hex(),\n   *     sequence_number: account.sequence_number,\n   *     max_gas_amount: \"1000\",\n   *     gas_unit_price: \"1\",\n   *     gas_currency_code: \"XUS\",\n   *     // Unix timestamp, in seconds + 10 seconds\n   *     expiration_timestamp_secs: (Math.floor(Date.now() / 1000) + 10).toString(),\n   *   }\n   * ```\n   * @returns A transaction object\n   */ async generateTransaction(sender, payload, options) {\n        const senderAddress = _hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(sender);\n        const account = await this.getAccount(senderAddress);\n        return {\n            sender: senderAddress.hex(),\n            sequence_number: account.sequence_number,\n            max_gas_amount: \"1000\",\n            gas_unit_price: \"1\",\n            gas_currency_code: \"XUS\",\n            // Unix timestamp, in seconds + 10 seconds\n            expiration_timestamp_secs: (Math.floor(Date.now() / 1000) + 10).toString(),\n            payload,\n            ...options || {}\n        };\n    }\n    /**\n   * Converts a transaction request by `generate_transaction` into it's binary hex BCS representation, ready for\n   * signing and submitting.\n   * Generally you may want to use `signTransaction`, as it takes care of this step + signing\n   * @param txnRequest A raw transaction generated by `generateTransaction` method\n   * @returns A hex-encoded string prefixed with `0x` and fulfilled with two hex digits per byte\n   */ async createSigningMessage(txnRequest) {\n        const response = await this.transactions.createSigningMessage(txnRequest);\n        raiseForStatus(200, response, txnRequest);\n        const { message  } = response.data;\n        return message;\n    }\n    /** Converts a transaction request produced by `generate_transaction` into a properly signed\n   * transaction, which can then be submitted to the blockchain\n   * @param accountFrom AptosAccount of transaction sender\n   * @param txnRequest A raw transaction generated by `generateTransaction` method\n   * @returns A transaction, signed with sender account\n   */ async signTransaction(accountFrom, txnRequest) {\n        const message = await this.createSigningMessage(txnRequest);\n        const signatureHex = accountFrom.signHexString(message.substring(2));\n        const transactionSignature = {\n            type: \"ed25519_signature\",\n            public_key: accountFrom.pubKey().hex(),\n            signature: signatureHex.hex()\n        };\n        return {\n            signature: transactionSignature,\n            ...txnRequest\n        };\n    }\n    /**\n   * Queries events by event key\n   * @param eventKey Event key for an event stream. It is BCS serialized bytes\n   * of `guid` field in the Move struct `EventHandle`\n   * @returns Array of events assotiated with given key\n   */ async getEventsByEventKey(eventKey) {\n        const response = await this.events.getEventsByEventKey(eventKey);\n        raiseForStatus(200, response, `eventKey: ${eventKey}`);\n        return response.data;\n    }\n    /**\n   * Extracts event key from the account resource identified by the\n   * `event_handle_struct` and `field_name`, then returns events identified by the event key\n   * @param address Hex-encoded 16 bytes Aptos account from which events are queried\n   * @param eventHandleStruct String representation of an on-chain Move struct type.\n   * (e.g. `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`)\n   * @param fieldName The field name of the EventHandle in the struct\n   * @param query Optional query object\n   * @param query.start The start sequence number in the EVENT STREAM, defaulting to the latest event.\n   * The events are returned in the reverse order of sequence number\n   * @param query.limit The number of events to be returned for the page default is 5\n   * @returns Array of events\n   */ async getEventsByEventHandle(address, eventHandleStruct, fieldName, query) {\n        const response = await this.accounts.getEventsByEventHandle(_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.ensure(address).hex(), eventHandleStruct, fieldName, query);\n        raiseForStatus(200, response, {\n            address,\n            eventHandleStruct,\n            fieldName\n        });\n        return response.data;\n    }\n    /**\n   * Submits a signed transaction to the transaction endpoint that takes JSON payload\n   * @param signedTxnRequest A transaction, signed by `signTransaction` method\n   * @returns Transaction that is accepted and submitted to mempool\n   */ async submitTransaction(signedTxnRequest) {\n        const response = await this.transactions.submitTransaction(signedTxnRequest);\n        raiseForStatus(202, response, signedTxnRequest);\n        return response.data;\n    }\n    /** Submits a transaction with fake signature to the transaction simulation endpoint that takes JSON payload. */ async simulateTransaction(accountFrom, txnRequest) {\n        const transactionSignature = {\n            type: \"ed25519_signature\",\n            public_key: accountFrom.pubKey().hex(),\n            // use invalid signature for simulation\n            signature: _hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.fromUint8Array(new Uint8Array(64)).hex()\n        };\n        const request = {\n            signature: transactionSignature,\n            ...txnRequest\n        };\n        const response = await this.transactions.simulateTransaction(request);\n        raiseForStatus(200, response, request);\n        return response.data[0];\n    }\n    /**\n   * Submits a signed transaction to the the endpoint that takes BCS payload\n   * @param signedTxn A BCS transaction representation\n   * @returns Transaction that is accepted and submitted to mempool\n   */ async submitSignedBCSTransaction(signedTxn) {\n        // Need to construct a customized post request for transactions in BCS payload\n        const httpClient = this.transactions.http;\n        const response = await httpClient.request({\n            path: \"/transactions\",\n            method: \"POST\",\n            body: signedTxn,\n            // @ts-ignore\n            type: \"application/x.aptos.signed_transaction+bcs\",\n            format: \"json\"\n        });\n        raiseForStatus(202, response, signedTxn);\n        return response.data;\n    }\n    /**\n   * Submits a signed transaction to the the endpoint that takes BCS payload\n   * @param signedTxn output of generateBCSSimulation()\n   * @returns Simulation result in the form of OnChainTransaction\n   */ async submitBCSSimulation(bcsBody) {\n        // Need to construct a customized post request for transactions in BCS payload\n        const httpClient = this.transactions.http;\n        const response = await httpClient.request({\n            path: \"/transactions/simulate\",\n            method: \"POST\",\n            body: bcsBody,\n            // @ts-ignore\n            type: \"application/x.aptos.signed_transaction+bcs\",\n            format: \"json\"\n        });\n        raiseForStatus(200, response, bcsBody);\n        return response.data[0];\n    }\n    /**\n   * Queries on-chain transactions\n   * @param query Optional pagination object\n   * @param query.start The start transaction version of the page. Default is the latest ledger version\n   * @param query.limit The max number of transactions should be returned for the page. Default is 25\n   * @returns Array of on-chain transactions\n   */ async getTransactions(query) {\n        const response = await this.transactions.getTransactions(query);\n        raiseForStatus(200, response);\n        return response.data;\n    }\n    /**\n   * Queries transaction by hash or version. When given transaction hash, server first looks up\n   * on-chain transaction by hash; if no on-chain transaction found, then look up transaction\n   * by hash in the mempool (pending) transactions.\n   * When given a transaction version, server looks up the transaction on-chain by version\n   * @param txnHashOrVersion - Transaction hash should be hex-encoded bytes string with 0x prefix.\n   * Transaction version is an uint64 number.\n   * @returns Transaction from mempool or on-chain transaction\n   */ async getTransaction(txnHashOrVersion) {\n        const response = await this.transactions.getTransaction(txnHashOrVersion);\n        raiseForStatus(200, response, {\n            txnHashOrVersion\n        });\n        return response.data;\n    }\n    /**\n   * Defines if specified transaction is currently in pending state\n   * @param txnHash A hash of transaction\n   *\n   * To create a transaction hash:\n   *\n   * 1. Create hash message bytes: \"APTOS::RawTransaction\" bytes + BCS bytes of Transaction.\n   * 2. Apply hash algorithm SHA3-256 to the hash message bytes.\n   * 3. Hex-encode the hash bytes with 0x prefix.\n   *\n   * @returns `true` if transaction is in pending state and `false` otherwise\n   */ async transactionPending(txnHash) {\n        const response = await this.transactions.getTransaction(txnHash);\n        if (response.status === 404) {\n            return true;\n        }\n        raiseForStatus(200, response, txnHash);\n        return response.data.type === \"pending_transaction\";\n    }\n    /**\n   * Waits up to 10 seconds for a transaction to move past pending state\n   * @param txnHash A hash of transaction\n   * @returns A Promise, that will resolve if transaction is accepted to the blockchain,\n   * and reject if more then 10 seconds passed\n   * @example\n   * ```\n   * const signedTxn = await this.aptosClient.signTransaction(account, txnRequest);\n   * const res = await this.aptosClient.submitTransaction(signedTxn);\n   * await this.aptosClient.waitForTransaction(res.hash);\n   * // do smth after transaction is accepted into blockchain\n   * ```\n   */ async waitForTransaction(txnHash, pingSleepTime = 100) {\n        let count = 0;\n        // eslint-disable-next-line no-await-in-loop\n        while(await this.transactionPending(txnHash)){\n            // eslint-disable-next-line no-await-in-loop\n            await (0,_util__WEBPACK_IMPORTED_MODULE_6__.sleep)(pingSleepTime);\n            count += 1;\n            if (count >= 10000 / pingSleepTime) {\n                throw new Error(`Waiting for transaction ${txnHash} timed out!`);\n            }\n        }\n    }\n    /**\n   * Queries the latest ledger information\n   * @param params Request params\n   * @returns Latest ledger information\n   * @example Example of returned data\n   * ```\n   * {\n   *   chain_id: 15,\n   *   epoch: 6,\n   *   ledger_version: \"2235883\",\n   *   ledger_timestamp:\"1654580922321826\"\n   * }\n   * ```\n   */ async getLedgerInfo(params = {}) {\n        const result = await this.client.request({\n            path: \"/\",\n            method: \"GET\",\n            format: \"json\",\n            ...params\n        });\n        return result.data;\n    }\n    /**\n   * @param params Request params\n   * @returns Current chain id\n   */ async getChainId(params = {}) {\n        const result = await this.getLedgerInfo(params);\n        return result.chain_id;\n    }\n    /**\n   * Gets a table item for a table identified by the handle and the key for the item.\n   * Key and value types need to be passed in to help with key serialization and value deserialization.\n   * @param handle A pointer to where that table is stored\n   * @param data Object, that describes table item\n   * @param data.key_type Move type of table key (e.g. `vector<u8>`)\n   * @param data.value_type Move type of table value (e.g. `u64`)\n   * @param data.key Value of table key\n   * @param params Request params\n   * @returns Table item value rendered in JSON\n   */ async getTableItem(handle, data, params) {\n        const tableItem = await this.tables.getTableItem(handle, data, params);\n        return tableItem;\n    }\n    // Only cache for a short period to avoid excessive amount of memory usage\n    async getTxnBuilderWithABI(accountFrom) {\n        if (this?.abis?.length === 0) {\n            throw new Error(\"ABIs are not provided.\");\n        }\n        const [{ sequence_number: sequenceNumber  }, chainId] = await Promise.all([\n            this.getAccount(accountFrom.address()),\n            this.getChainId(), \n        ]);\n        const rawTxnBuilder = new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TransactionBuilderABI(this.abis, {\n            sender: accountFrom.address(),\n            sequenceNumber,\n            chainId\n        });\n        return new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TransactionBuilderEd25519((signingMessage)=>{\n            const sigHexStr = accountFrom.signBuffer(signingMessage);\n            return new _transaction_builder__WEBPACK_IMPORTED_MODULE_8__.TxnBuilderTypes.Ed25519Signature(sigHexStr.toUint8Array());\n        }, accountFrom.pubKey().toUint8Array(), rawTxnBuilder);\n    }\n    async sendABITransaction(accountFrom, func, ty_tags, args) {\n        const [txnBuilder, { sequence_number: sequenceNumber  }] = await Promise.all([\n            this.getTxnBuilderWithABI(accountFrom),\n            this.getAccount(accountFrom.address()), \n        ]);\n        txnBuilder.rawTxnBuilder?.setSequenceNumber(sequenceNumber);\n        const rawTxn = txnBuilder.build(func, ty_tags, args);\n        return this.submitSignedBCSTransaction(txnBuilder.sign(rawTxn));\n    }\n}\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_9__[\"default\"])([\n    (0,typescript_memoize__WEBPACK_IMPORTED_MODULE_0__.Memoize)()\n], AptosClient.prototype, \"getChainId\", null);\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_9__[\"default\"])([\n    (0,typescript_memoize__WEBPACK_IMPORTED_MODULE_0__.MemoizeExpiring)(2 * 60 * 1000) // Cache for 2min\n], AptosClient.prototype, \"getTxnBuilderWithABI\", null);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/aptos_client.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/faucet_client.ts":
/*!***************************************!*\
  !*** ./ohio-sdk/sdk/faucet_client.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FaucetClient\": () => (/* binding */ FaucetClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./ohio-sdk/node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _aptos_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aptos_client */ \"./ohio-sdk/sdk/aptos_client.ts\");\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_aptos_client__WEBPACK_IMPORTED_MODULE_1__]);\n_aptos_client__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/** Faucet creates and funds accounts. This is a thin wrapper around that. */ \n\n\n/**\n * Class for requsting tokens from faucet\n */ class FaucetClient extends _aptos_client__WEBPACK_IMPORTED_MODULE_1__.AptosClient {\n    /**\n   * Establishes a connection to Aptos node\n   * @param nodeUrl A url of the Aptos Node API endpoint\n   * @param faucetUrl A faucet url\n   * @param config An optional config for inner axios instance\n   * Detailed config description: {@link https://github.com/axios/axios#request-config}\n   */ constructor(nodeUrl, faucetUrl, config){\n        super(nodeUrl, config);\n        this.faucetUrl = faucetUrl;\n    }\n    /**\n   * This creates an account if it does not exist and mints the specified amount of\n   * coins into that account\n   * @param address Hex-encoded 16 bytes Aptos account address wich mints tokens\n   * @param amount Amount of tokens to mint\n   * @returns Hashes of submitted transactions\n   */ async fundAccount(address, amount) {\n        const url = `${this.faucetUrl}/mint?amount=${amount}&address=${_hex_string__WEBPACK_IMPORTED_MODULE_2__.HexString.ensure(address).noPrefix()}`;\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().post(url, {}, {\n            validateStatus: ()=>true\n        });\n        (0,_aptos_client__WEBPACK_IMPORTED_MODULE_1__.raiseForStatus)(200, response);\n        const tnxHashes = response.data;\n        const promises = [];\n        for(let i = 0; i < tnxHashes.length; i += 1){\n            const tnxHash = tnxHashes[i];\n            promises.push(this.waitForTransaction(tnxHash));\n        }\n        await Promise.all(promises);\n        return tnxHashes;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvZmF1Y2V0X2NsaWVudC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLDJFQUEyRSxHQUNqRDtBQUNzRDtBQUV2QjtBQUV6RDs7Q0FFQyxHQUNNLE1BQU1JLFlBQVksU0FBU0gsc0RBQVc7SUFHM0M7Ozs7OztHQU1DLEdBQ0RJLFlBQVlDLE9BQWUsRUFBRUMsU0FBaUIsRUFBRUMsTUFBMEIsQ0FBRTtRQUMxRSxLQUFLLENBQUNGLE9BQU8sRUFBRUUsTUFBTSxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDRCxTQUFTLEdBQUdBLFNBQVMsQ0FBQztLQUM1QjtJQUVEOzs7Ozs7R0FNQyxHQUNELE1BQU1FLFdBQVcsQ0FBQ0MsT0FBdUIsRUFBRUMsTUFBYyxFQUFvQztRQUMzRixNQUFNQyxHQUFHLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQ0wsU0FBUyxDQUFDLGFBQWEsRUFBRUksTUFBTSxDQUFDLFNBQVMsRUFBRVIseURBQWdCLENBQUNPLE9BQU8sQ0FBQyxDQUFDSSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ3JHLE1BQU1DLFFBQVEsR0FBRyxNQUFNZixpREFBVSxDQUFnQlksR0FBRyxFQUFFLEVBQUUsRUFBRTtZQUFFSyxjQUFjLEVBQUUsSUFBTSxJQUFJO1NBQUUsQ0FBQztRQUN6RmYsNkRBQWMsQ0FBQyxHQUFHLEVBQUVhLFFBQVEsQ0FBQyxDQUFDO1FBRTlCLE1BQU1HLFNBQVMsR0FBR0gsUUFBUSxDQUFDSSxJQUFJO1FBQy9CLE1BQU1DLFFBQVEsR0FBRyxFQUFFO1FBQ25CLElBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSCxTQUFTLENBQUNJLE1BQU0sRUFBRUQsQ0FBQyxJQUFJLENBQUMsQ0FBRTtZQUM1QyxNQUFNRSxPQUFPLEdBQUdMLFNBQVMsQ0FBQ0csQ0FBQyxDQUFDO1lBQzVCRCxRQUFRLENBQUNJLElBQUksQ0FBQyxJQUFJLENBQUNDLGtCQUFrQixDQUFDRixPQUFPLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO1FBQ0QsTUFBTUcsT0FBTyxDQUFDQyxHQUFHLENBQUNQLFFBQVEsQ0FBQyxDQUFDO1FBQzVCLE9BQU9GLFNBQVMsQ0FBQztLQUNsQjtDQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvc2RrL2ZhdWNldF9jbGllbnQudHM/ZWUwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogRmF1Y2V0IGNyZWF0ZXMgYW5kIGZ1bmRzIGFjY291bnRzLiBUaGlzIGlzIGEgdGhpbiB3cmFwcGVyIGFyb3VuZCB0aGF0LiAqL1xuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xuaW1wb3J0IHsgQXB0b3NDbGllbnQsIEFwdG9zQ2xpZW50Q29uZmlnLCByYWlzZUZvclN0YXR1cyB9IGZyb20gXCIuL2FwdG9zX2NsaWVudFwiO1xuaW1wb3J0IHsgVHlwZXMgfSBmcm9tIFwiLi90eXBlc1wiO1xuaW1wb3J0IHsgSGV4U3RyaW5nLCBNYXliZUhleFN0cmluZyB9IGZyb20gXCIuL2hleF9zdHJpbmdcIjtcblxuLyoqXG4gKiBDbGFzcyBmb3IgcmVxdXN0aW5nIHRva2VucyBmcm9tIGZhdWNldFxuICovXG5leHBvcnQgY2xhc3MgRmF1Y2V0Q2xpZW50IGV4dGVuZHMgQXB0b3NDbGllbnQge1xuICBmYXVjZXRVcmw6IHN0cmluZztcblxuICAvKipcbiAgICogRXN0YWJsaXNoZXMgYSBjb25uZWN0aW9uIHRvIEFwdG9zIG5vZGVcbiAgICogQHBhcmFtIG5vZGVVcmwgQSB1cmwgb2YgdGhlIEFwdG9zIE5vZGUgQVBJIGVuZHBvaW50XG4gICAqIEBwYXJhbSBmYXVjZXRVcmwgQSBmYXVjZXQgdXJsXG4gICAqIEBwYXJhbSBjb25maWcgQW4gb3B0aW9uYWwgY29uZmlnIGZvciBpbm5lciBheGlvcyBpbnN0YW5jZVxuICAgKiBEZXRhaWxlZCBjb25maWcgZGVzY3JpcHRpb246IHtAbGluayBodHRwczovL2dpdGh1Yi5jb20vYXhpb3MvYXhpb3MjcmVxdWVzdC1jb25maWd9XG4gICAqL1xuICBjb25zdHJ1Y3Rvcihub2RlVXJsOiBzdHJpbmcsIGZhdWNldFVybDogc3RyaW5nLCBjb25maWc/OiBBcHRvc0NsaWVudENvbmZpZykge1xuICAgIHN1cGVyKG5vZGVVcmwsIGNvbmZpZyk7XG4gICAgdGhpcy5mYXVjZXRVcmwgPSBmYXVjZXRVcmw7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBjcmVhdGVzIGFuIGFjY291bnQgaWYgaXQgZG9lcyBub3QgZXhpc3QgYW5kIG1pbnRzIHRoZSBzcGVjaWZpZWQgYW1vdW50IG9mXG4gICAqIGNvaW5zIGludG8gdGhhdCBhY2NvdW50XG4gICAqIEBwYXJhbSBhZGRyZXNzIEhleC1lbmNvZGVkIDE2IGJ5dGVzIEFwdG9zIGFjY291bnQgYWRkcmVzcyB3aWNoIG1pbnRzIHRva2Vuc1xuICAgKiBAcGFyYW0gYW1vdW50IEFtb3VudCBvZiB0b2tlbnMgdG8gbWludFxuICAgKiBAcmV0dXJucyBIYXNoZXMgb2Ygc3VibWl0dGVkIHRyYW5zYWN0aW9uc1xuICAgKi9cbiAgYXN5bmMgZnVuZEFjY291bnQoYWRkcmVzczogTWF5YmVIZXhTdHJpbmcsIGFtb3VudDogbnVtYmVyKTogUHJvbWlzZTxUeXBlcy5IZXhFbmNvZGVkQnl0ZXNbXT4ge1xuICAgIGNvbnN0IHVybCA9IGAke3RoaXMuZmF1Y2V0VXJsfS9taW50P2Ftb3VudD0ke2Ftb3VudH0mYWRkcmVzcz0ke0hleFN0cmluZy5lbnN1cmUoYWRkcmVzcykubm9QcmVmaXgoKX1gO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdDxBcnJheTxzdHJpbmc+Pih1cmwsIHt9LCB7IHZhbGlkYXRlU3RhdHVzOiAoKSA9PiB0cnVlIH0pO1xuICAgIHJhaXNlRm9yU3RhdHVzKDIwMCwgcmVzcG9uc2UpO1xuXG4gICAgY29uc3QgdG54SGFzaGVzID0gcmVzcG9uc2UuZGF0YTtcbiAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG54SGFzaGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCB0bnhIYXNoID0gdG54SGFzaGVzW2ldO1xuICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLndhaXRGb3JUcmFuc2FjdGlvbih0bnhIYXNoKSk7XG4gICAgfVxuICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICByZXR1cm4gdG54SGFzaGVzO1xuICB9XG59XG4iXSwibmFtZXMiOlsiYXhpb3MiLCJBcHRvc0NsaWVudCIsInJhaXNlRm9yU3RhdHVzIiwiSGV4U3RyaW5nIiwiRmF1Y2V0Q2xpZW50IiwiY29uc3RydWN0b3IiLCJub2RlVXJsIiwiZmF1Y2V0VXJsIiwiY29uZmlnIiwiZnVuZEFjY291bnQiLCJhZGRyZXNzIiwiYW1vdW50IiwidXJsIiwiZW5zdXJlIiwibm9QcmVmaXgiLCJyZXNwb25zZSIsInBvc3QiLCJ2YWxpZGF0ZVN0YXR1cyIsInRueEhhc2hlcyIsImRhdGEiLCJwcm9taXNlcyIsImkiLCJsZW5ndGgiLCJ0bnhIYXNoIiwicHVzaCIsIndhaXRGb3JUcmFuc2FjdGlvbiIsIlByb21pc2UiLCJhbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/faucet_client.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/hex_string.ts":
/*!************************************!*\
  !*** ./ohio-sdk/sdk/hex_string.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HexString\": () => (/* binding */ HexString)\n/* harmony export */ });\n/* harmony import */ var buffer___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer/ */ \"./ohio-sdk/node_modules/buffer/index.js\");\n // the trailing slash is important!\n/**\n * A util class for working with hex strings.\n * Hex strings are strings that are prefixed with `0x`\n */ class HexString {\n    /**\n   * Creates new hex string from Buffer\n   * @param buffer A buffer to convert\n   * @returns New HexString\n   */ static fromBuffer(buffer) {\n        return new HexString(buffer.toString(\"hex\"));\n    }\n    /**\n   * Creates new hex string from Uint8Array\n   * @param arr Uint8Array to convert\n   * @returns New HexString\n   */ static fromUint8Array(arr) {\n        return HexString.fromBuffer(buffer___WEBPACK_IMPORTED_MODULE_0__.Buffer.from(arr));\n    }\n    /**\n   * Ensures `hexString` is instance of `HexString` class\n   * @param hexString String to check\n   * @returns New HexString if `hexString` is regular string or `hexString` if it is HexString instance\n   * @example\n   * ```\n   *  const regularString = \"string\";\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  HexString.ensure(regularString); // \"0xstring\"\n   *  HexString.ensure(hexString); // \"0xstring\"\n   * ```\n   */ static ensure(hexString) {\n        if (typeof hexString === \"string\") {\n            return new HexString(hexString);\n        }\n        return hexString;\n    }\n    /**\n   * Creates new HexString instance from regular string. If specified string already starts with \"0x\" prefix,\n   * it will not add another one\n   * @param hexString String to convert\n   * @example\n   * ```\n   *  const string = \"string\";\n   *  new HexString(string); // \"0xstring\"\n   * ```\n   */ constructor(hexString){\n        if (hexString.startsWith(\"0x\")) {\n            this.hexString = hexString;\n        } else {\n            this.hexString = `0x${hexString}`;\n        }\n    }\n    /**\n   * Getter for inner hexString\n   * @returns Inner hex string\n   */ hex() {\n        return this.hexString;\n    }\n    /**\n   * Getter for inner hexString without prefix\n   * @returns Inner hex string without prefix\n   * @example\n   * ```\n   *  const hexString = new HexString(\"string\"); // \"0xstring\"\n   *  hexString.noPrefix(); // \"string\"\n   * ```\n   */ noPrefix() {\n        return this.hexString.slice(2);\n    }\n    /**\n   * Overrides default `toString` method\n   * @returns Inner hex string\n   */ toString() {\n        return this.hex();\n    }\n    /**\n   * Trimmes extra zeroes in the begining of a string\n   * @returns Inner hexString without leading zeroes\n   * @example\n   * ```\n   *  new HexString(\"0x000000string\").toShortString(); // result = \"0xstring\"\n   * ```\n   */ toShortString() {\n        const trimmed = this.hexString.replace(/^0x0*/, \"\");\n        return `0x${trimmed}`;\n    }\n    /**\n   * Converts hex string to a Buffer in hex encoding\n   * @returns Buffer from inner hexString without prefix\n   */ toBuffer() {\n        return buffer___WEBPACK_IMPORTED_MODULE_0__.Buffer.from(this.noPrefix(), \"hex\");\n    }\n    /**\n   * Converts hex string to a Uint8Array\n   * @returns Uint8Array from inner hexString without prefix\n   */ toUint8Array() {\n        return Uint8Array.from(this.toBuffer());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvaGV4X3N0cmluZy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpQyxDQUFDLG1DQUFtQztBQU1yRTs7O0NBR0MsR0FDTSxNQUFNQyxTQUFTO0lBSXBCOzs7O0dBSUMsR0FDRCxPQUFPQyxVQUFVLENBQUNDLE1BQWMsRUFBYTtRQUMzQyxPQUFPLElBQUlGLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztLQUM5QztJQUVEOzs7O0dBSUMsR0FDRCxPQUFPQyxjQUFjLENBQUNDLEdBQWUsRUFBYTtRQUNoRCxPQUFPTCxTQUFTLENBQUNDLFVBQVUsQ0FBQ0YsZ0RBQVcsQ0FBQ00sR0FBRyxDQUFDLENBQUMsQ0FBQztLQUMvQztJQUVEOzs7Ozs7Ozs7OztHQVdDLEdBQ0QsT0FBT0UsTUFBTSxDQUFDQyxTQUF5QixFQUFhO1FBQ2xELElBQUksT0FBT0EsU0FBUyxLQUFLLFFBQVEsRUFBRTtZQUNqQyxPQUFPLElBQUlSLFNBQVMsQ0FBQ1EsU0FBUyxDQUFDLENBQUM7U0FDakM7UUFDRCxPQUFPQSxTQUFTLENBQUM7S0FDbEI7SUFFRDs7Ozs7Ozs7O0dBU0MsR0FDREMsWUFBWUQsU0FBeUMsQ0FBRTtRQUNyRCxJQUFJQSxTQUFTLENBQUNFLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5QixJQUFJLENBQUNGLFNBQVMsR0FBR0EsU0FBUyxDQUFDO1NBQzVCLE1BQU07WUFDTCxJQUFJLENBQUNBLFNBQVMsR0FBRyxDQUFDLEVBQUUsRUFBRUEsU0FBUyxDQUFDLENBQUMsQ0FBQztTQUNuQztLQUNGO0lBRUQ7OztHQUdDLEdBQ0RHLEdBQUcsR0FBVztRQUNaLE9BQU8sSUFBSSxDQUFDSCxTQUFTLENBQUM7S0FDdkI7SUFFRDs7Ozs7Ozs7R0FRQyxHQUNESSxRQUFRLEdBQVc7UUFDakIsT0FBTyxJQUFJLENBQUNKLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2hDO0lBRUQ7OztHQUdDLEdBQ0RWLFFBQVEsR0FBVztRQUNqQixPQUFPLElBQUksQ0FBQ1EsR0FBRyxFQUFFLENBQUM7S0FDbkI7SUFFRDs7Ozs7OztHQU9DLEdBQ0RHLGFBQWEsR0FBVztRQUN0QixNQUFNQyxPQUFPLEdBQUcsSUFBSSxDQUFDUCxTQUFTLENBQUNRLE9BQU8sVUFBVSxFQUFFLENBQUM7UUFDbkQsT0FBTyxDQUFDLEVBQUUsRUFBRUQsT0FBTyxDQUFDLENBQUMsQ0FBQztLQUN2QjtJQUVEOzs7R0FHQyxHQUNERSxRQUFRLEdBQVc7UUFDakIsT0FBT2xCLGdEQUFXLENBQUMsSUFBSSxDQUFDYSxRQUFRLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztLQUM1QztJQUVEOzs7R0FHQyxHQUNETSxZQUFZLEdBQWU7UUFDekIsT0FBT0MsVUFBVSxDQUFDYixJQUFJLENBQUMsSUFBSSxDQUFDVyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0tBQ3pDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvaGV4X3N0cmluZy50cz9hOWE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXIvXCI7IC8vIHRoZSB0cmFpbGluZyBzbGFzaCBpcyBpbXBvcnRhbnQhXG5pbXBvcnQgeyBUeXBlcyB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11c2UtYmVmb3JlLWRlZmluZVxuZXhwb3J0IHR5cGUgTWF5YmVIZXhTdHJpbmcgPSBIZXhTdHJpbmcgfCBzdHJpbmcgfCBUeXBlcy5IZXhFbmNvZGVkQnl0ZXM7XG5cbi8qKlxuICogQSB1dGlsIGNsYXNzIGZvciB3b3JraW5nIHdpdGggaGV4IHN0cmluZ3MuXG4gKiBIZXggc3RyaW5ncyBhcmUgc3RyaW5ncyB0aGF0IGFyZSBwcmVmaXhlZCB3aXRoIGAweGBcbiAqL1xuZXhwb3J0IGNsYXNzIEhleFN0cmluZyB7XG4gIC8vLyBXZSB3YW50IHRvIG1ha2Ugc3VyZSB0aGlzIGhleFN0cmluZyBoYXMgdGhlIGAweGAgaGV4IHByZWZpeFxuICBwcml2YXRlIHJlYWRvbmx5IGhleFN0cmluZzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIG5ldyBoZXggc3RyaW5nIGZyb20gQnVmZmVyXG4gICAqIEBwYXJhbSBidWZmZXIgQSBidWZmZXIgdG8gY29udmVydFxuICAgKiBAcmV0dXJucyBOZXcgSGV4U3RyaW5nXG4gICAqL1xuICBzdGF0aWMgZnJvbUJ1ZmZlcihidWZmZXI6IEJ1ZmZlcik6IEhleFN0cmluZyB7XG4gICAgcmV0dXJuIG5ldyBIZXhTdHJpbmcoYnVmZmVyLnRvU3RyaW5nKFwiaGV4XCIpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIG5ldyBoZXggc3RyaW5nIGZyb20gVWludDhBcnJheVxuICAgKiBAcGFyYW0gYXJyIFVpbnQ4QXJyYXkgdG8gY29udmVydFxuICAgKiBAcmV0dXJucyBOZXcgSGV4U3RyaW5nXG4gICAqL1xuICBzdGF0aWMgZnJvbVVpbnQ4QXJyYXkoYXJyOiBVaW50OEFycmF5KTogSGV4U3RyaW5nIHtcbiAgICByZXR1cm4gSGV4U3RyaW5nLmZyb21CdWZmZXIoQnVmZmVyLmZyb20oYXJyKSk7XG4gIH1cblxuICAvKipcbiAgICogRW5zdXJlcyBgaGV4U3RyaW5nYCBpcyBpbnN0YW5jZSBvZiBgSGV4U3RyaW5nYCBjbGFzc1xuICAgKiBAcGFyYW0gaGV4U3RyaW5nIFN0cmluZyB0byBjaGVja1xuICAgKiBAcmV0dXJucyBOZXcgSGV4U3RyaW5nIGlmIGBoZXhTdHJpbmdgIGlzIHJlZ3VsYXIgc3RyaW5nIG9yIGBoZXhTdHJpbmdgIGlmIGl0IGlzIEhleFN0cmluZyBpbnN0YW5jZVxuICAgKiBAZXhhbXBsZVxuICAgKiBgYGBcbiAgICogIGNvbnN0IHJlZ3VsYXJTdHJpbmcgPSBcInN0cmluZ1wiO1xuICAgKiAgY29uc3QgaGV4U3RyaW5nID0gbmV3IEhleFN0cmluZyhcInN0cmluZ1wiKTsgLy8gXCIweHN0cmluZ1wiXG4gICAqICBIZXhTdHJpbmcuZW5zdXJlKHJlZ3VsYXJTdHJpbmcpOyAvLyBcIjB4c3RyaW5nXCJcbiAgICogIEhleFN0cmluZy5lbnN1cmUoaGV4U3RyaW5nKTsgLy8gXCIweHN0cmluZ1wiXG4gICAqIGBgYFxuICAgKi9cbiAgc3RhdGljIGVuc3VyZShoZXhTdHJpbmc6IE1heWJlSGV4U3RyaW5nKTogSGV4U3RyaW5nIHtcbiAgICBpZiAodHlwZW9mIGhleFN0cmluZyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG5ldyBIZXhTdHJpbmcoaGV4U3RyaW5nKTtcbiAgICB9XG4gICAgcmV0dXJuIGhleFN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIG5ldyBIZXhTdHJpbmcgaW5zdGFuY2UgZnJvbSByZWd1bGFyIHN0cmluZy4gSWYgc3BlY2lmaWVkIHN0cmluZyBhbHJlYWR5IHN0YXJ0cyB3aXRoIFwiMHhcIiBwcmVmaXgsXG4gICAqIGl0IHdpbGwgbm90IGFkZCBhbm90aGVyIG9uZVxuICAgKiBAcGFyYW0gaGV4U3RyaW5nIFN0cmluZyB0byBjb252ZXJ0XG4gICAqIEBleGFtcGxlXG4gICAqIGBgYFxuICAgKiAgY29uc3Qgc3RyaW5nID0gXCJzdHJpbmdcIjtcbiAgICogIG5ldyBIZXhTdHJpbmcoc3RyaW5nKTsgLy8gXCIweHN0cmluZ1wiXG4gICAqIGBgYFxuICAgKi9cbiAgY29uc3RydWN0b3IoaGV4U3RyaW5nOiBzdHJpbmcgfCBUeXBlcy5IZXhFbmNvZGVkQnl0ZXMpIHtcbiAgICBpZiAoaGV4U3RyaW5nLnN0YXJ0c1dpdGgoXCIweFwiKSkge1xuICAgICAgdGhpcy5oZXhTdHJpbmcgPSBoZXhTdHJpbmc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaGV4U3RyaW5nID0gYDB4JHtoZXhTdHJpbmd9YDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0dGVyIGZvciBpbm5lciBoZXhTdHJpbmdcbiAgICogQHJldHVybnMgSW5uZXIgaGV4IHN0cmluZ1xuICAgKi9cbiAgaGV4KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuaGV4U3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHRlciBmb3IgaW5uZXIgaGV4U3RyaW5nIHdpdGhvdXQgcHJlZml4XG4gICAqIEByZXR1cm5zIElubmVyIGhleCBzdHJpbmcgd2l0aG91dCBwcmVmaXhcbiAgICogQGV4YW1wbGVcbiAgICogYGBgXG4gICAqICBjb25zdCBoZXhTdHJpbmcgPSBuZXcgSGV4U3RyaW5nKFwic3RyaW5nXCIpOyAvLyBcIjB4c3RyaW5nXCJcbiAgICogIGhleFN0cmluZy5ub1ByZWZpeCgpOyAvLyBcInN0cmluZ1wiXG4gICAqIGBgYFxuICAgKi9cbiAgbm9QcmVmaXgoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5oZXhTdHJpbmcuc2xpY2UoMik7XG4gIH1cblxuICAvKipcbiAgICogT3ZlcnJpZGVzIGRlZmF1bHQgYHRvU3RyaW5nYCBtZXRob2RcbiAgICogQHJldHVybnMgSW5uZXIgaGV4IHN0cmluZ1xuICAgKi9cbiAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5oZXgoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmltbWVzIGV4dHJhIHplcm9lcyBpbiB0aGUgYmVnaW5pbmcgb2YgYSBzdHJpbmdcbiAgICogQHJldHVybnMgSW5uZXIgaGV4U3RyaW5nIHdpdGhvdXQgbGVhZGluZyB6ZXJvZXNcbiAgICogQGV4YW1wbGVcbiAgICogYGBgXG4gICAqICBuZXcgSGV4U3RyaW5nKFwiMHgwMDAwMDBzdHJpbmdcIikudG9TaG9ydFN0cmluZygpOyAvLyByZXN1bHQgPSBcIjB4c3RyaW5nXCJcbiAgICogYGBgXG4gICAqL1xuICB0b1Nob3J0U3RyaW5nKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdHJpbW1lZCA9IHRoaXMuaGV4U3RyaW5nLnJlcGxhY2UoL14weDAqLywgXCJcIik7XG4gICAgcmV0dXJuIGAweCR7dHJpbW1lZH1gO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGhleCBzdHJpbmcgdG8gYSBCdWZmZXIgaW4gaGV4IGVuY29kaW5nXG4gICAqIEByZXR1cm5zIEJ1ZmZlciBmcm9tIGlubmVyIGhleFN0cmluZyB3aXRob3V0IHByZWZpeFxuICAgKi9cbiAgdG9CdWZmZXIoKTogQnVmZmVyIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odGhpcy5ub1ByZWZpeCgpLCBcImhleFwiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyBoZXggc3RyaW5nIHRvIGEgVWludDhBcnJheVxuICAgKiBAcmV0dXJucyBVaW50OEFycmF5IGZyb20gaW5uZXIgaGV4U3RyaW5nIHdpdGhvdXQgcHJlZml4XG4gICAqL1xuICB0b1VpbnQ4QXJyYXkoKTogVWludDhBcnJheSB7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh0aGlzLnRvQnVmZmVyKCkpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiQnVmZmVyIiwiSGV4U3RyaW5nIiwiZnJvbUJ1ZmZlciIsImJ1ZmZlciIsInRvU3RyaW5nIiwiZnJvbVVpbnQ4QXJyYXkiLCJhcnIiLCJmcm9tIiwiZW5zdXJlIiwiaGV4U3RyaW5nIiwiY29uc3RydWN0b3IiLCJzdGFydHNXaXRoIiwiaGV4Iiwibm9QcmVmaXgiLCJzbGljZSIsInRvU2hvcnRTdHJpbmciLCJ0cmltbWVkIiwicmVwbGFjZSIsInRvQnVmZmVyIiwidG9VaW50OEFycmF5IiwiVWludDhBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/hex_string.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/index.ts":
/*!*******************************!*\
  !*** ./ohio-sdk/sdk/index.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _aptos_account__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aptos_account */ \"./ohio-sdk/sdk/aptos_account.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _aptos_account__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _aptos_account__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _hex_string__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _hex_string__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _aptos_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aptos_client */ \"./ohio-sdk/sdk/aptos_client.ts\");\n/* harmony import */ var _faucet_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./faucet_client */ \"./ohio-sdk/sdk/faucet_client.ts\");\n/* harmony import */ var _token_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./token_client */ \"./ohio-sdk/sdk/token_client.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _token_client__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _token_client__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"./ohio-sdk/sdk/types.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _transaction_builder__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transaction_builder */ \"./ohio-sdk/sdk/transaction_builder/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_aptos_client__WEBPACK_IMPORTED_MODULE_2__, _faucet_client__WEBPACK_IMPORTED_MODULE_3__, _transaction_builder__WEBPACK_IMPORTED_MODULE_6__]);\n([_aptos_client__WEBPACK_IMPORTED_MODULE_2__, _faucet_client__WEBPACK_IMPORTED_MODULE_3__, _transaction_builder__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _aptos_client__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _aptos_client__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _faucet_client__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _faucet_client__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _transaction_builder__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _transaction_builder__WEBPACK_IMPORTED_MODULE_6__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n// All parts of our package are accessible as imports, but we re-export our higher level API here for convenience\n\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxpSEFBaUg7QUFDakY7QUFDSDtBQUNFO0FBQ0M7QUFDRDtBQUNQO0FBQ2MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvaW5kZXgudHM/ODliMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbGwgcGFydHMgb2Ygb3VyIHBhY2thZ2UgYXJlIGFjY2Vzc2libGUgYXMgaW1wb3J0cywgYnV0IHdlIHJlLWV4cG9ydCBvdXIgaGlnaGVyIGxldmVsIEFQSSBoZXJlIGZvciBjb252ZW5pZW5jZVxuZXhwb3J0ICogZnJvbSBcIi4vYXB0b3NfYWNjb3VudFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaGV4X3N0cmluZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vYXB0b3NfY2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9mYXVjZXRfY2xpZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi90b2tlbl9jbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90cmFuc2FjdGlvbl9idWlsZGVyXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/index.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/token_client.ts":
/*!**************************************!*\
  !*** ./ohio-sdk/sdk/token_client.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TokenClient\": () => (/* binding */ TokenClient)\n/* harmony export */ });\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n\nconst NUMBER_MAX = 9007199254740991;\n/**\n * Class for creating, minting and managing minting NFT collections and tokens\n */ class TokenClient {\n    /**\n   * Creates new TokenClient instance\n   * @param aptosClient AptosClient instance\n   */ constructor(aptosClient){\n        this.aptosClient = aptosClient;\n    }\n    /**\n   * Brings together methods for generating, signing and submitting transaction\n   * @param account AptosAccount which will sign a transaction\n   * @param payload Transaction payload. It depends on transaction type you want to send\n   * @returns Promise that resolves to transaction hash\n   */ async submitTransactionHelper(account, payload) {\n        const txnRequest = await this.aptosClient.generateTransaction(account.address(), payload, {\n            max_gas_amount: \"4000\"\n        });\n        const signedTxn = await this.aptosClient.signTransaction(account, txnRequest);\n        const res = await this.aptosClient.submitTransaction(signedTxn);\n        await this.aptosClient.waitForTransaction(res.hash);\n        return Promise.resolve(res.hash);\n    }\n    /**\n   * Creates a new NFT collection within the specified account\n   * @param account AptosAccount where collection will be created\n   * @param name Collection name\n   * @param description Collection description\n   * @param uri URL to additional info about collection\n   * @returns A hash of transaction\n   */ async createCollection(account, name, description, uri) {\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token::create_collection_script\",\n            type_arguments: [],\n            arguments: [\n                Buffer.from(name).toString(\"hex\"),\n                Buffer.from(description).toString(\"hex\"),\n                Buffer.from(uri).toString(\"hex\"),\n                NUMBER_MAX.toString(),\n                [\n                    false,\n                    false,\n                    false\n                ], \n            ]\n        };\n        const transactionHash = await this.submitTransactionHelper(account, payload);\n        return transactionHash;\n    }\n    /**\n   * Creates a new NFT within the specified account\n   * @param account AptosAccount where token will be created\n   * @param collectionName Name of collection, that token belongs to\n   * @param name Token name\n   * @param description Token description\n   * @param supply Token supply\n   * @param uri URL to additional info about token\n   * @param royalty_payee_address the address to receive the royalty, the address can be a shared account address.\n   * @param royalty_points_denominator the denominator for calculating royalty\n   * @param royalty_points_nominator the nominator for calculating royalty\n   * @param property_keys the property keys for storing on-chain properties\n   * @param property_values the property values to be stored on-chain\n   * @param property_types the type of property values\n   * @returns A hash of transaction\n   */ async createToken(account, collectionName, name, description, supply, uri, royalty_payee_address = account.address(), royalty_points_denominator = 0, royalty_points_nominator = 0, property_keys = [], property_values = [], property_types = []) {\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token::create_token_script\",\n            type_arguments: [],\n            arguments: [\n                Buffer.from(collectionName).toString(\"hex\"),\n                Buffer.from(name).toString(\"hex\"),\n                Buffer.from(description).toString(\"hex\"),\n                supply.toString(),\n                NUMBER_MAX.toString(),\n                Buffer.from(uri).toString(\"hex\"),\n                royalty_payee_address.toString(),\n                royalty_points_denominator.toString(),\n                royalty_points_nominator.toString(),\n                [\n                    false,\n                    false,\n                    false,\n                    false,\n                    false\n                ],\n                property_keys.map((key)=>Buffer.from(key).toString(\"hex\")),\n                property_values.map((val)=>Buffer.from(val).toString(\"hex\")),\n                property_types.map((typ)=>Buffer.from(typ).toString(\"hex\")), \n            ]\n        };\n        const transactionHash = await this.submitTransactionHelper(account, payload);\n        return transactionHash;\n    }\n    /**\n   * Transfers specified amount of tokens from account to receiver\n   * @param account AptosAccount where token from which tokens will be transfered\n   * @param receiver  Hex-encoded 16 bytes Aptos account address to which tokens will be transfered\n   * @param creator Hex-encoded 16 bytes Aptos account address to which created tokens\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param amount Amount of tokens which will be transfered\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns A hash of transaction\n   */ async offerToken(account, receiver, creator, collectionName, name, amount, property_version = 0) {\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token_transfers::offer_script\",\n            type_arguments: [],\n            arguments: [\n                receiver,\n                creator,\n                Buffer.from(collectionName).toString(\"hex\"),\n                Buffer.from(name).toString(\"hex\"),\n                amount.toString(),\n                property_version.toString(), \n            ]\n        };\n        const transactionHash = await this.submitTransactionHelper(account, payload);\n        return transactionHash;\n    }\n    /**\n   * Claims a token on specified account\n   * @param account AptosAccount which will claim token\n   * @param sender Hex-encoded 16 bytes Aptos account address which holds a token\n   * @param creator Hex-encoded 16 bytes Aptos account address which created a token\n   * @param collectionName Name of collection where token is stored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns A hash of transaction\n   */ async claimToken(account, sender, creator, collectionName, name, property_version = 0) {\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token_transfers::claim_script\",\n            type_arguments: [],\n            arguments: [\n                sender,\n                creator,\n                Buffer.from(collectionName).toString(\"hex\"),\n                Buffer.from(name).toString(\"hex\"),\n                property_version.toString(), \n            ]\n        };\n        const transactionHash = await this.submitTransactionHelper(account, payload);\n        return transactionHash;\n    }\n    /**\n   * Removes a token from pending claims list\n   * @param account AptosAccount which will remove token from pending list\n   * @param receiver Hex-encoded 16 bytes Aptos account address which had to claim token\n   * @param creator Hex-encoded 16 bytes Aptos account address which created a token\n   * @param collectionName Name of collection where token is strored\n   * @param name Token name\n   * @param property_version the version of token PropertyMap with a default value 0.\n   * @returns A hash of transaction\n   */ async cancelTokenOffer(account, receiver, creator, collectionName, name, property_version = 0) {\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token_transfers::cancel_offer_script\",\n            type_arguments: [],\n            arguments: [\n                receiver,\n                creator,\n                Buffer.from(collectionName).toString(\"hex\"),\n                Buffer.from(name).toString(\"hex\"),\n                property_version.toString(), \n            ]\n        };\n        const transactionHash = await this.submitTransactionHelper(account, payload);\n        return transactionHash;\n    }\n    /**\n   * Queries collection data\n   * @param creator Hex-encoded 16 bytes Aptos account address which created a collection\n   * @param collectionName Collection name\n   * @returns Collection data in below format\n   * ```\n   *  Collection {\n   *    // Describes the collection\n   *    description: string,\n   *    // Unique name within this creators account for this collection\n   *    name: string,\n   *    // URL for additional information/media\n   *    uri: string,\n   *    // Total number of distinct Tokens tracked by the collection\n   *    count: number,\n   *    // Optional maximum number of tokens allowed within this collections\n   *    maximum: number\n   *  }\n   * ```\n   */ async getCollectionData(creator, collectionName) {\n        const resources = await this.aptosClient.getAccountResources(creator);\n        // @ts-ignore\n        const accountResource = resources.find((r)=>r.type === \"0x3::token::Collections\");\n        const { handle  } = accountResource.data.collection_data;\n        const getCollectionTableItemRequest = {\n            key_type: \"0x1::string::String\",\n            value_type: \"0x3::token::CollectionData\",\n            key: Buffer.from(collectionName).toString(\"hex\")\n        };\n        // eslint-disable-next-line no-unused-vars\n        const collectionTable = await this.aptosClient.getTableItem(handle, getCollectionTableItemRequest);\n        return collectionTable;\n    }\n    /**\n   * Queries token data from collection\n   * @param creator Hex-encoded 16 bytes Aptos account address which created a token\n   * @param collectionName Name of collection, which holds a token\n   * @param tokenName Token name\n   * @returns Token data in below format\n   * ```\n   * TokenData {\n   *     // Unique name within this creators account for this Token's collection\n   *     collection: string;\n   *     // Describes this Token\n   *     description: string;\n   *     // The name of this Token\n   *     name: string;\n   *     // Optional maximum number of this type of Token.\n   *     maximum: number;\n   *     // Total number of this type of Token\n   *     supply: number;\n   *     /// URL for additional information / media\n   *     uri: string;\n   *   }\n   * ```\n   */ async getTokenData(creator, collectionName, tokenName) {\n        const collection = await this.aptosClient.getAccountResource(creator, \"0x3::token::Collections\");\n        const { handle  } = collection.data.token_data;\n        const tokenDataId = {\n            creator,\n            collection: Buffer.from(collectionName).toString(\"hex\"),\n            name: Buffer.from(tokenName).toString(\"hex\")\n        };\n        const getTokenTableItemRequest = {\n            key_type: \"0x3::token::TokenDataId\",\n            value_type: \"0x3::token::TokenData\",\n            key: tokenDataId\n        };\n        const tableItem = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n        return tableItem.data;\n    }\n    /**\n   * Queries token balance for the token creator\n   */ async getTokenBalance(creator, collectionName, tokenName, property_version = \"0\") {\n        const tokenDataId = {\n            creator: creator instanceof _hex_string__WEBPACK_IMPORTED_MODULE_0__.HexString ? creator.hex() : creator,\n            collection: Buffer.from(collectionName).toString(\"hex\"),\n            name: Buffer.from(tokenName).toString(\"hex\")\n        };\n        return this.getTokenBalanceForAccount(creator, {\n            token_data_id: tokenDataId,\n            property_version\n        });\n    }\n    /**\n   * Queries token balance for a token account\n   * @param account Hex-encoded 16 bytes Aptos account address which created a token\n   * @param tokenId token id\n   *\n   * @example\n   * ```\n   * {\n   *   creator: '0x1',\n   *   collection: 'Some collection',\n   *   name: 'Awesome token'\n   * }\n   * ```\n   * @returns Token object in below format\n   * ```\n   * Token {\n   *   id: TokenId;\n   *   value: number;\n   * }\n   * ```\n   */ async getTokenBalanceForAccount(account, tokenId) {\n        const tokenStore = await this.aptosClient.getAccountResource(account, \"0x3::token::TokenStore\");\n        const { handle  } = tokenStore.data.tokens;\n        const getTokenTableItemRequest = {\n            key_type: \"0x3::token::TokenId\",\n            value_type: \"0x3::token::Token\",\n            key: tokenId\n        };\n        const tableItem = await this.aptosClient.getTableItem(handle, getTokenTableItemRequest);\n        return tableItem.data;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/token_client.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/abi.ts":
/*!*************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/abi.ts ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArgumentABI\": () => (/* binding */ ArgumentABI),\n/* harmony export */   \"ScriptABI\": () => (/* binding */ ScriptABI),\n/* harmony export */   \"ScriptFunctionABI\": () => (/* binding */ ScriptFunctionABI),\n/* harmony export */   \"TransactionScriptABI\": () => (/* binding */ TransactionScriptABI),\n/* harmony export */   \"TypeArgumentABI\": () => (/* binding */ TypeArgumentABI)\n/* harmony export */ });\n/* harmony import */ var _bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bcs */ \"./ohio-sdk/sdk/transaction_builder/bcs/index.ts\");\n/* harmony import */ var _transaction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/transaction.ts\");\n/* harmony import */ var _type_tag__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type_tag */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/type_tag.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bcs__WEBPACK_IMPORTED_MODULE_0__, _transaction__WEBPACK_IMPORTED_MODULE_1__, _type_tag__WEBPACK_IMPORTED_MODULE_2__]);\n([_bcs__WEBPACK_IMPORTED_MODULE_0__, _transaction__WEBPACK_IMPORTED_MODULE_1__, _type_tag__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass TypeArgumentABI {\n    /**\n   * Constructs a TypeArgumentABI instance.\n   * @param name\n   */ constructor(name){\n        this.name = name;\n    }\n    serialize(serializer) {\n        serializer.serializeStr(this.name);\n    }\n    static deserialize(deserializer) {\n        const name = deserializer.deserializeStr();\n        return new TypeArgumentABI(name);\n    }\n}\nclass ArgumentABI {\n    /**\n   * Constructs an ArgumentABI instance.\n   * @param name\n   * @param type_tag\n   */ constructor(name, type_tag){\n        this.name = name;\n        this.type_tag = type_tag;\n    }\n    serialize(serializer) {\n        serializer.serializeStr(this.name);\n        this.type_tag.serialize(serializer);\n    }\n    static deserialize(deserializer) {\n        const name = deserializer.deserializeStr();\n        const typeTag = _type_tag__WEBPACK_IMPORTED_MODULE_2__.TypeTag.deserialize(deserializer);\n        return new ArgumentABI(name, typeTag);\n    }\n}\nclass ScriptABI {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return TransactionScriptABI.load(deserializer);\n            case 1:\n                return ScriptFunctionABI.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n        }\n    }\n}\nclass TransactionScriptABI extends ScriptABI {\n    /**\n   * Constructs a TransactionScriptABI instance.\n   * @param name Entry function name\n   * @param doc\n   * @param code\n   * @param ty_args\n   * @param args\n   */ constructor(name, doc, code, ty_args, args){\n        super();\n        this.name = name;\n        this.doc = doc;\n        this.code = code;\n        this.ty_args = ty_args;\n        this.args = args;\n    }\n    serialize(serializer) {\n        serializer.serializeStr(this.name);\n        serializer.serializeStr(this.doc);\n        serializer.serializeBytes(this.code);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.ty_args, serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.args, serializer);\n    }\n    static load(deserializer) {\n        const name = deserializer.deserializeStr();\n        const doc = deserializer.deserializeStr();\n        const code = deserializer.deserializeBytes();\n        const tyArgs = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, TypeArgumentABI);\n        const args = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, ArgumentABI);\n        return new TransactionScriptABI(name, doc, code, tyArgs, args);\n    }\n}\nclass ScriptFunctionABI extends ScriptABI {\n    /**\n   * Constructs a ScriptFunctionABI instance\n   * @param name\n   * @param module_name Fully qualified module id\n   * @param doc\n   * @param ty_args\n   * @param args\n   */ constructor(name, module_name, doc, ty_args, args){\n        super();\n        this.name = name;\n        this.module_name = module_name;\n        this.doc = doc;\n        this.ty_args = ty_args;\n        this.args = args;\n    }\n    serialize(serializer) {\n        serializer.serializeStr(this.name);\n        this.module_name.serialize(serializer);\n        serializer.serializeStr(this.doc);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.ty_args, serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.args, serializer);\n    }\n    static load(deserializer) {\n        const name = deserializer.deserializeStr();\n        const moduleName = _transaction__WEBPACK_IMPORTED_MODULE_1__.ModuleId.deserialize(deserializer);\n        const doc = deserializer.deserializeStr();\n        const tyArgs = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, TypeArgumentABI);\n        const args = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, ArgumentABI);\n        return new ScriptFunctionABI(name, moduleName, doc, tyArgs, args);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9hYmkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBa0c7QUFFekQ7QUFFSjtBQUU5QixNQUFNSSxlQUFlO0lBQzFCOzs7R0FHQyxHQUNEQyxZQUE0QkMsSUFBWSxDQUFFO2FBQWRBLElBQVksR0FBWkEsSUFBWTtLQUFJO0lBRTVDQyxTQUFTLENBQUNDLFVBQXNCLEVBQVE7UUFDdENBLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDLElBQUksQ0FBQ0gsSUFBSSxDQUFDLENBQUM7S0FDcEM7SUFFRCxPQUFPSSxXQUFXLENBQUNDLFlBQTBCLEVBQW1CO1FBQzlELE1BQU1MLElBQUksR0FBR0ssWUFBWSxDQUFDQyxjQUFjLEVBQUU7UUFDMUMsT0FBTyxJQUFJUixlQUFlLENBQUNFLElBQUksQ0FBQyxDQUFDO0tBQ2xDO0NBQ0Y7QUFFTSxNQUFNTyxXQUFXO0lBQ3RCOzs7O0dBSUMsR0FDRFIsWUFBNEJDLElBQVksRUFBa0JRLFFBQWlCLENBQUU7YUFBakRSLElBQVksR0FBWkEsSUFBWTthQUFrQlEsUUFBaUIsR0FBakJBLFFBQWlCO0tBQUk7SUFFL0VQLFNBQVMsQ0FBQ0MsVUFBc0IsRUFBUTtRQUN0Q0EsVUFBVSxDQUFDQyxZQUFZLENBQUMsSUFBSSxDQUFDSCxJQUFJLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUNRLFFBQVEsQ0FBQ1AsU0FBUyxDQUFDQyxVQUFVLENBQUMsQ0FBQztLQUNyQztJQUVELE9BQU9FLFdBQVcsQ0FBQ0MsWUFBMEIsRUFBbUI7UUFDOUQsTUFBTUwsSUFBSSxHQUFHSyxZQUFZLENBQUNDLGNBQWMsRUFBRTtRQUMxQyxNQUFNRyxPQUFPLEdBQUdaLDBEQUFtQixDQUFDUSxZQUFZLENBQUM7UUFDakQsT0FBTyxJQUFJRSxXQUFXLENBQUNQLElBQUksRUFBRVMsT0FBTyxDQUFDLENBQUM7S0FDdkM7Q0FDRjtBQUVNLE1BQWVDLFNBQVM7SUFHN0IsT0FBT04sV0FBVyxDQUFDQyxZQUEwQixFQUFhO1FBQ3hELE1BQU1NLEtBQUssR0FBR04sWUFBWSxDQUFDTyx1QkFBdUIsRUFBRTtRQUNwRCxPQUFRRCxLQUFLO1lBQ1gsS0FBSyxDQUFDO2dCQUNKLE9BQU9FLG9CQUFvQixDQUFDQyxJQUFJLENBQUNULFlBQVksQ0FBQyxDQUFDO1lBQ2pELEtBQUssQ0FBQztnQkFDSixPQUFPVSxpQkFBaUIsQ0FBQ0QsSUFBSSxDQUFDVCxZQUFZLENBQUMsQ0FBQztZQUM5QztnQkFDRSxNQUFNLElBQUlXLEtBQUssQ0FBQyxDQUFDLDhDQUE4QyxFQUFFTCxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0U7S0FDRjtDQUNGO0FBRU0sTUFBTUUsb0JBQW9CLFNBQVNILFNBQVM7SUFDakQ7Ozs7Ozs7R0FPQyxHQUNEWCxZQUNrQkMsSUFBWSxFQUNaaUIsR0FBVyxFQUNYQyxJQUFXLEVBQ1hDLE9BQTZCLEVBQzdCQyxJQUFzQixDQUN0QztRQUNBLEtBQUssRUFBRSxDQUFDO2FBTlFwQixJQUFZLEdBQVpBLElBQVk7YUFDWmlCLEdBQVcsR0FBWEEsR0FBVzthQUNYQyxJQUFXLEdBQVhBLElBQVc7YUFDWEMsT0FBNkIsR0FBN0JBLE9BQTZCO2FBQzdCQyxJQUFzQixHQUF0QkEsSUFBc0I7S0FHdkM7SUFFRG5CLFNBQVMsQ0FBQ0MsVUFBc0IsRUFBUTtRQUN0Q0EsVUFBVSxDQUFDQyxZQUFZLENBQUMsSUFBSSxDQUFDSCxJQUFJLENBQUMsQ0FBQztRQUNuQ0UsVUFBVSxDQUFDQyxZQUFZLENBQUMsSUFBSSxDQUFDYyxHQUFHLENBQUMsQ0FBQztRQUNsQ2YsVUFBVSxDQUFDbUIsY0FBYyxDQUFDLElBQUksQ0FBQ0gsSUFBSSxDQUFDLENBQUM7UUFDckN2QixxREFBZSxDQUFrQixJQUFJLENBQUN3QixPQUFPLEVBQUVqQixVQUFVLENBQUMsQ0FBQztRQUMzRFAscURBQWUsQ0FBYyxJQUFJLENBQUN5QixJQUFJLEVBQUVsQixVQUFVLENBQUMsQ0FBQztLQUNyRDtJQUVELE9BQU9ZLElBQUksQ0FBQ1QsWUFBMEIsRUFBd0I7UUFDNUQsTUFBTUwsSUFBSSxHQUFHSyxZQUFZLENBQUNDLGNBQWMsRUFBRTtRQUMxQyxNQUFNVyxHQUFHLEdBQUdaLFlBQVksQ0FBQ0MsY0FBYyxFQUFFO1FBQ3pDLE1BQU1ZLElBQUksR0FBR2IsWUFBWSxDQUFDaUIsZ0JBQWdCLEVBQUU7UUFDNUMsTUFBTUMsTUFBTSxHQUFHN0IsdURBQWlCLENBQUNXLFlBQVksRUFBRVAsZUFBZSxDQUFDO1FBQy9ELE1BQU1zQixJQUFJLEdBQUcxQix1REFBaUIsQ0FBQ1csWUFBWSxFQUFFRSxXQUFXLENBQUM7UUFDekQsT0FBTyxJQUFJTSxvQkFBb0IsQ0FBQ2IsSUFBSSxFQUFFaUIsR0FBRyxFQUFFQyxJQUFJLEVBQUVLLE1BQU0sRUFBRUgsSUFBSSxDQUFDLENBQUM7S0FDaEU7Q0FDRjtBQUVNLE1BQU1MLGlCQUFpQixTQUFTTCxTQUFTO0lBQzlDOzs7Ozs7O0dBT0MsR0FDRFgsWUFDa0JDLElBQVksRUFDWndCLFdBQXFCLEVBQ3JCUCxHQUFXLEVBQ1hFLE9BQTZCLEVBQzdCQyxJQUFzQixDQUN0QztRQUNBLEtBQUssRUFBRSxDQUFDO2FBTlFwQixJQUFZLEdBQVpBLElBQVk7YUFDWndCLFdBQXFCLEdBQXJCQSxXQUFxQjthQUNyQlAsR0FBVyxHQUFYQSxHQUFXO2FBQ1hFLE9BQTZCLEdBQTdCQSxPQUE2QjthQUM3QkMsSUFBc0IsR0FBdEJBLElBQXNCO0tBR3ZDO0lBRURuQixTQUFTLENBQUNDLFVBQXNCLEVBQVE7UUFDdENBLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDLElBQUksQ0FBQ0gsSUFBSSxDQUFDLENBQUM7UUFDbkMsSUFBSSxDQUFDd0IsV0FBVyxDQUFDdkIsU0FBUyxDQUFDQyxVQUFVLENBQUMsQ0FBQztRQUN2Q0EsVUFBVSxDQUFDQyxZQUFZLENBQUMsSUFBSSxDQUFDYyxHQUFHLENBQUMsQ0FBQztRQUNsQ3RCLHFEQUFlLENBQWtCLElBQUksQ0FBQ3dCLE9BQU8sRUFBRWpCLFVBQVUsQ0FBQyxDQUFDO1FBQzNEUCxxREFBZSxDQUFjLElBQUksQ0FBQ3lCLElBQUksRUFBRWxCLFVBQVUsQ0FBQyxDQUFDO0tBQ3JEO0lBRUQsT0FBT1ksSUFBSSxDQUFDVCxZQUEwQixFQUFxQjtRQUN6RCxNQUFNTCxJQUFJLEdBQUdLLFlBQVksQ0FBQ0MsY0FBYyxFQUFFO1FBQzFDLE1BQU1tQixVQUFVLEdBQUc3Qiw4REFBb0IsQ0FBQ1MsWUFBWSxDQUFDO1FBQ3JELE1BQU1ZLEdBQUcsR0FBR1osWUFBWSxDQUFDQyxjQUFjLEVBQUU7UUFDekMsTUFBTWlCLE1BQU0sR0FBRzdCLHVEQUFpQixDQUFDVyxZQUFZLEVBQUVQLGVBQWUsQ0FBQztRQUMvRCxNQUFNc0IsSUFBSSxHQUFHMUIsdURBQWlCLENBQUNXLFlBQVksRUFBRUUsV0FBVyxDQUFDO1FBQ3pELE9BQU8sSUFBSVEsaUJBQWlCLENBQUNmLElBQUksRUFBRXlCLFVBQVUsRUFBRVIsR0FBRyxFQUFFTSxNQUFNLEVBQUVILElBQUksQ0FBQyxDQUFDO0tBQ25FO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9hYmkudHM/Yzk5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZXNlcmlhbGl6ZXIsIFNlcmlhbGl6ZXIsIEJ5dGVzLCBTZXEsIGRlc2VyaWFsaXplVmVjdG9yLCBzZXJpYWxpemVWZWN0b3IgfSBmcm9tIFwiLi4vYmNzXCI7XG5cbmltcG9ydCB7IE1vZHVsZUlkIH0gZnJvbSBcIi4vdHJhbnNhY3Rpb25cIjtcblxuaW1wb3J0IHsgVHlwZVRhZyB9IGZyb20gXCIuL3R5cGVfdGFnXCI7XG5cbmV4cG9ydCBjbGFzcyBUeXBlQXJndW1lbnRBQkkge1xuICAvKipcbiAgICogQ29uc3RydWN0cyBhIFR5cGVBcmd1bWVudEFCSSBpbnN0YW5jZS5cbiAgICogQHBhcmFtIG5hbWVcbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSBuYW1lOiBzdHJpbmcpIHt9XG5cbiAgc2VyaWFsaXplKHNlcmlhbGl6ZXI6IFNlcmlhbGl6ZXIpOiB2b2lkIHtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cih0aGlzLm5hbWUpO1xuICB9XG5cbiAgc3RhdGljIGRlc2VyaWFsaXplKGRlc2VyaWFsaXplcjogRGVzZXJpYWxpemVyKTogVHlwZUFyZ3VtZW50QUJJIHtcbiAgICBjb25zdCBuYW1lID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplU3RyKCk7XG4gICAgcmV0dXJuIG5ldyBUeXBlQXJndW1lbnRBQkkobmFtZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFyZ3VtZW50QUJJIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdHMgYW4gQXJndW1lbnRBQkkgaW5zdGFuY2UuXG4gICAqIEBwYXJhbSBuYW1lXG4gICAqIEBwYXJhbSB0eXBlX3RhZ1xuICAgKi9cbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZywgcHVibGljIHJlYWRvbmx5IHR5cGVfdGFnOiBUeXBlVGFnKSB7fVxuXG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyOiBTZXJpYWxpemVyKTogdm9pZCB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy5uYW1lKTtcbiAgICB0aGlzLnR5cGVfdGFnLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgfVxuXG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXI6IERlc2VyaWFsaXplcik6IFR5cGVBcmd1bWVudEFCSSB7XG4gICAgY29uc3QgbmFtZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpO1xuICAgIGNvbnN0IHR5cGVUYWcgPSBUeXBlVGFnLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcik7XG4gICAgcmV0dXJuIG5ldyBBcmd1bWVudEFCSShuYW1lLCB0eXBlVGFnKTtcbiAgfVxufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgU2NyaXB0QUJJIHtcbiAgYWJzdHJhY3Qgc2VyaWFsaXplKHNlcmlhbGl6ZXI6IFNlcmlhbGl6ZXIpOiB2b2lkO1xuXG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXI6IERlc2VyaWFsaXplcik6IFNjcmlwdEFCSSB7XG4gICAgY29uc3QgaW5kZXggPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVVbGViMTI4QXNVMzIoKTtcbiAgICBzd2l0Y2ggKGluZGV4KSB7XG4gICAgICBjYXNlIDA6XG4gICAgICAgIHJldHVybiBUcmFuc2FjdGlvblNjcmlwdEFCSS5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHJldHVybiBTY3JpcHRGdW5jdGlvbkFCSS5sb2FkKGRlc2VyaWFsaXplcik7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdmFyaWFudCBpbmRleCBmb3IgVHJhbnNhY3Rpb25QYXlsb2FkOiAke2luZGV4fWApO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVHJhbnNhY3Rpb25TY3JpcHRBQkkgZXh0ZW5kcyBTY3JpcHRBQkkge1xuICAvKipcbiAgICogQ29uc3RydWN0cyBhIFRyYW5zYWN0aW9uU2NyaXB0QUJJIGluc3RhbmNlLlxuICAgKiBAcGFyYW0gbmFtZSBFbnRyeSBmdW5jdGlvbiBuYW1lXG4gICAqIEBwYXJhbSBkb2NcbiAgICogQHBhcmFtIGNvZGVcbiAgICogQHBhcmFtIHR5X2FyZ3NcbiAgICogQHBhcmFtIGFyZ3NcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyByZWFkb25seSBuYW1lOiBzdHJpbmcsXG4gICAgcHVibGljIHJlYWRvbmx5IGRvYzogc3RyaW5nLFxuICAgIHB1YmxpYyByZWFkb25seSBjb2RlOiBCeXRlcyxcbiAgICBwdWJsaWMgcmVhZG9ubHkgdHlfYXJnczogU2VxPFR5cGVBcmd1bWVudEFCST4sXG4gICAgcHVibGljIHJlYWRvbmx5IGFyZ3M6IFNlcTxBcmd1bWVudEFCST4sXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBzZXJpYWxpemUoc2VyaWFsaXplcjogU2VyaWFsaXplcik6IHZvaWQge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplU3RyKHRoaXMubmFtZSk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy5kb2MpO1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplQnl0ZXModGhpcy5jb2RlKTtcbiAgICBzZXJpYWxpemVWZWN0b3I8VHlwZUFyZ3VtZW50QUJJPih0aGlzLnR5X2FyZ3MsIHNlcmlhbGl6ZXIpO1xuICAgIHNlcmlhbGl6ZVZlY3RvcjxBcmd1bWVudEFCST4odGhpcy5hcmdzLCBzZXJpYWxpemVyKTtcbiAgfVxuXG4gIHN0YXRpYyBsb2FkKGRlc2VyaWFsaXplcjogRGVzZXJpYWxpemVyKTogVHJhbnNhY3Rpb25TY3JpcHRBQkkge1xuICAgIGNvbnN0IG5hbWUgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVTdHIoKTtcbiAgICBjb25zdCBkb2MgPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVTdHIoKTtcbiAgICBjb25zdCBjb2RlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICBjb25zdCB0eUFyZ3MgPSBkZXNlcmlhbGl6ZVZlY3RvcihkZXNlcmlhbGl6ZXIsIFR5cGVBcmd1bWVudEFCSSk7XG4gICAgY29uc3QgYXJncyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgQXJndW1lbnRBQkkpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25TY3JpcHRBQkkobmFtZSwgZG9jLCBjb2RlLCB0eUFyZ3MsIGFyZ3MpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTY3JpcHRGdW5jdGlvbkFCSSBleHRlbmRzIFNjcmlwdEFCSSB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3RzIGEgU2NyaXB0RnVuY3Rpb25BQkkgaW5zdGFuY2VcbiAgICogQHBhcmFtIG5hbWVcbiAgICogQHBhcmFtIG1vZHVsZV9uYW1lIEZ1bGx5IHF1YWxpZmllZCBtb2R1bGUgaWRcbiAgICogQHBhcmFtIGRvY1xuICAgKiBAcGFyYW0gdHlfYXJnc1xuICAgKiBAcGFyYW0gYXJnc1xuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWRvbmx5IG5hbWU6IHN0cmluZyxcbiAgICBwdWJsaWMgcmVhZG9ubHkgbW9kdWxlX25hbWU6IE1vZHVsZUlkLFxuICAgIHB1YmxpYyByZWFkb25seSBkb2M6IHN0cmluZyxcbiAgICBwdWJsaWMgcmVhZG9ubHkgdHlfYXJnczogU2VxPFR5cGVBcmd1bWVudEFCST4sXG4gICAgcHVibGljIHJlYWRvbmx5IGFyZ3M6IFNlcTxBcmd1bWVudEFCST4sXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBzZXJpYWxpemUoc2VyaWFsaXplcjogU2VyaWFsaXplcik6IHZvaWQge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplU3RyKHRoaXMubmFtZSk7XG4gICAgdGhpcy5tb2R1bGVfbmFtZS5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy5kb2MpO1xuICAgIHNlcmlhbGl6ZVZlY3RvcjxUeXBlQXJndW1lbnRBQkk+KHRoaXMudHlfYXJncywgc2VyaWFsaXplcik7XG4gICAgc2VyaWFsaXplVmVjdG9yPEFyZ3VtZW50QUJJPih0aGlzLmFyZ3MsIHNlcmlhbGl6ZXIpO1xuICB9XG5cbiAgc3RhdGljIGxvYWQoZGVzZXJpYWxpemVyOiBEZXNlcmlhbGl6ZXIpOiBTY3JpcHRGdW5jdGlvbkFCSSB7XG4gICAgY29uc3QgbmFtZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpO1xuICAgIGNvbnN0IG1vZHVsZU5hbWUgPSBNb2R1bGVJZC5kZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXIpO1xuICAgIGNvbnN0IGRvYyA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpO1xuICAgIGNvbnN0IHR5QXJncyA9IGRlc2VyaWFsaXplVmVjdG9yKGRlc2VyaWFsaXplciwgVHlwZUFyZ3VtZW50QUJJKTtcbiAgICBjb25zdCBhcmdzID0gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyLCBBcmd1bWVudEFCSSk7XG4gICAgcmV0dXJuIG5ldyBTY3JpcHRGdW5jdGlvbkFCSShuYW1lLCBtb2R1bGVOYW1lLCBkb2MsIHR5QXJncywgYXJncyk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJkZXNlcmlhbGl6ZVZlY3RvciIsInNlcmlhbGl6ZVZlY3RvciIsIk1vZHVsZUlkIiwiVHlwZVRhZyIsIlR5cGVBcmd1bWVudEFCSSIsImNvbnN0cnVjdG9yIiwibmFtZSIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZXIiLCJzZXJpYWxpemVTdHIiLCJkZXNlcmlhbGl6ZSIsImRlc2VyaWFsaXplciIsImRlc2VyaWFsaXplU3RyIiwiQXJndW1lbnRBQkkiLCJ0eXBlX3RhZyIsInR5cGVUYWciLCJTY3JpcHRBQkkiLCJpbmRleCIsImRlc2VyaWFsaXplVWxlYjEyOEFzVTMyIiwiVHJhbnNhY3Rpb25TY3JpcHRBQkkiLCJsb2FkIiwiU2NyaXB0RnVuY3Rpb25BQkkiLCJFcnJvciIsImRvYyIsImNvZGUiLCJ0eV9hcmdzIiwiYXJncyIsInNlcmlhbGl6ZUJ5dGVzIiwiZGVzZXJpYWxpemVCeXRlcyIsInR5QXJncyIsIm1vZHVsZV9uYW1lIiwibW9kdWxlTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/abi.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts":
/*!*************************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountAddress\": () => (/* binding */ AccountAddress)\n/* harmony export */ });\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n\nclass AccountAddress {\n    static LENGTH = 32;\n    constructor(address){\n        if (address.length !== AccountAddress.LENGTH) {\n            throw new Error(\"Expected address of length 32\");\n        }\n        this.address = address;\n    }\n    /**\n   * Creates AccountAddress from a hex string.\n   * @param addr Hex string can be with a prefix or without a prefix,\n   *   e.g. '0x1aa' or '1aa'. Hex string will be left padded with 0s if too short.\n   */ static fromHex(addr) {\n        let address = _hex_string__WEBPACK_IMPORTED_MODULE_0__.HexString.ensure(addr);\n        // If an address hex has odd number of digits, padd the hex string with 0\n        // e.g. '1aa' would become '01aa'.\n        if (address.noPrefix().length % 2 !== 0) {\n            address = new _hex_string__WEBPACK_IMPORTED_MODULE_0__.HexString(`0${address.noPrefix()}`);\n        }\n        const addressBytes = address.toUint8Array();\n        if (addressBytes.length > AccountAddress.LENGTH) {\n            // eslint-disable-next-line quotes\n            throw new Error(\"Hex string is too long. Address's length is 32 bytes.\");\n        } else if (addressBytes.length === AccountAddress.LENGTH) {\n            return new AccountAddress(addressBytes);\n        }\n        const res = new Uint8Array(AccountAddress.LENGTH);\n        res.set(addressBytes, AccountAddress.LENGTH - addressBytes.length);\n        return new AccountAddress(res);\n    }\n    serialize(serializer) {\n        serializer.serializeFixedBytes(this.address);\n    }\n    static deserialize(deserializer) {\n        return new AccountAddress(deserializer.deserializeFixedBytes(AccountAddress.LENGTH));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9hY2NvdW50X2FkZHJlc3MudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkQ7QUFHdEQsTUFBTUMsY0FBYztJQUN6QixPQUFnQkMsTUFBTSxHQUFXLEVBQUUsQ0FBQztJQUlwQ0MsWUFBWUMsT0FBYyxDQUFFO1FBQzFCLElBQUlBLE9BQU8sQ0FBQ0MsTUFBTSxLQUFLSixjQUFjLENBQUNDLE1BQU0sRUFBRTtZQUM1QyxNQUFNLElBQUlJLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1NBQ2xEO1FBQ0QsSUFBSSxDQUFDRixPQUFPLEdBQUdBLE9BQU8sQ0FBQztLQUN4QjtJQUVEOzs7O0dBSUMsR0FDRCxPQUFPRyxPQUFPLENBQUNDLElBQW9CLEVBQWtCO1FBQ25ELElBQUlKLE9BQU8sR0FBR0oseURBQWdCLENBQUNRLElBQUksQ0FBQztRQUVwQyx5RUFBeUU7UUFDekUsa0NBQWtDO1FBQ2xDLElBQUlKLE9BQU8sQ0FBQ00sUUFBUSxFQUFFLENBQUNMLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZDRCxPQUFPLEdBQUcsSUFBSUosa0RBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRUksT0FBTyxDQUFDTSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNuRDtRQUVELE1BQU1DLFlBQVksR0FBR1AsT0FBTyxDQUFDUSxZQUFZLEVBQUU7UUFFM0MsSUFBSUQsWUFBWSxDQUFDTixNQUFNLEdBQUdKLGNBQWMsQ0FBQ0MsTUFBTSxFQUFFO1lBQy9DLGtDQUFrQztZQUNsQyxNQUFNLElBQUlJLEtBQUssQ0FBQyx1REFBdUQsQ0FBQyxDQUFDO1NBQzFFLE1BQU0sSUFBSUssWUFBWSxDQUFDTixNQUFNLEtBQUtKLGNBQWMsQ0FBQ0MsTUFBTSxFQUFFO1lBQ3hELE9BQU8sSUFBSUQsY0FBYyxDQUFDVSxZQUFZLENBQUMsQ0FBQztTQUN6QztRQUVELE1BQU1FLEdBQUcsR0FBVSxJQUFJQyxVQUFVLENBQUNiLGNBQWMsQ0FBQ0MsTUFBTSxDQUFDO1FBQ3hEVyxHQUFHLENBQUNFLEdBQUcsQ0FBQ0osWUFBWSxFQUFFVixjQUFjLENBQUNDLE1BQU0sR0FBR1MsWUFBWSxDQUFDTixNQUFNLENBQUMsQ0FBQztRQUVuRSxPQUFPLElBQUlKLGNBQWMsQ0FBQ1ksR0FBRyxDQUFDLENBQUM7S0FDaEM7SUFFREcsU0FBUyxDQUFDQyxVQUFzQixFQUFRO1FBQ3RDQSxVQUFVLENBQUNDLG1CQUFtQixDQUFDLElBQUksQ0FBQ2QsT0FBTyxDQUFDLENBQUM7S0FDOUM7SUFFRCxPQUFPZSxXQUFXLENBQUNDLFlBQTBCLEVBQWtCO1FBQzdELE9BQU8sSUFBSW5CLGNBQWMsQ0FBQ21CLFlBQVksQ0FBQ0MscUJBQXFCLENBQUNwQixjQUFjLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUM7S0FDdEY7Q0FDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay90cmFuc2FjdGlvbl9idWlsZGVyL2FwdG9zX3R5cGVzL2FjY291bnRfYWRkcmVzcy50cz8wN2I4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhleFN0cmluZywgTWF5YmVIZXhTdHJpbmcgfSBmcm9tIFwiLi4vLi4vaGV4X3N0cmluZ1wiO1xuaW1wb3J0IHsgU2VyaWFsaXplciwgRGVzZXJpYWxpemVyLCBCeXRlcyB9IGZyb20gXCIuLi9iY3NcIjtcblxuZXhwb3J0IGNsYXNzIEFjY291bnRBZGRyZXNzIHtcbiAgc3RhdGljIHJlYWRvbmx5IExFTkdUSDogbnVtYmVyID0gMzI7XG5cbiAgcmVhZG9ubHkgYWRkcmVzczogQnl0ZXM7XG5cbiAgY29uc3RydWN0b3IoYWRkcmVzczogQnl0ZXMpIHtcbiAgICBpZiAoYWRkcmVzcy5sZW5ndGggIT09IEFjY291bnRBZGRyZXNzLkxFTkdUSCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgYWRkcmVzcyBvZiBsZW5ndGggMzJcIik7XG4gICAgfVxuICAgIHRoaXMuYWRkcmVzcyA9IGFkZHJlc3M7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBBY2NvdW50QWRkcmVzcyBmcm9tIGEgaGV4IHN0cmluZy5cbiAgICogQHBhcmFtIGFkZHIgSGV4IHN0cmluZyBjYW4gYmUgd2l0aCBhIHByZWZpeCBvciB3aXRob3V0IGEgcHJlZml4LFxuICAgKiAgIGUuZy4gJzB4MWFhJyBvciAnMWFhJy4gSGV4IHN0cmluZyB3aWxsIGJlIGxlZnQgcGFkZGVkIHdpdGggMHMgaWYgdG9vIHNob3J0LlxuICAgKi9cbiAgc3RhdGljIGZyb21IZXgoYWRkcjogTWF5YmVIZXhTdHJpbmcpOiBBY2NvdW50QWRkcmVzcyB7XG4gICAgbGV0IGFkZHJlc3MgPSBIZXhTdHJpbmcuZW5zdXJlKGFkZHIpO1xuXG4gICAgLy8gSWYgYW4gYWRkcmVzcyBoZXggaGFzIG9kZCBudW1iZXIgb2YgZGlnaXRzLCBwYWRkIHRoZSBoZXggc3RyaW5nIHdpdGggMFxuICAgIC8vIGUuZy4gJzFhYScgd291bGQgYmVjb21lICcwMWFhJy5cbiAgICBpZiAoYWRkcmVzcy5ub1ByZWZpeCgpLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICAgIGFkZHJlc3MgPSBuZXcgSGV4U3RyaW5nKGAwJHthZGRyZXNzLm5vUHJlZml4KCl9YCk7XG4gICAgfVxuXG4gICAgY29uc3QgYWRkcmVzc0J5dGVzID0gYWRkcmVzcy50b1VpbnQ4QXJyYXkoKTtcblxuICAgIGlmIChhZGRyZXNzQnl0ZXMubGVuZ3RoID4gQWNjb3VudEFkZHJlc3MuTEVOR1RIKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcXVvdGVzXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZXggc3RyaW5nIGlzIHRvbyBsb25nLiBBZGRyZXNzJ3MgbGVuZ3RoIGlzIDMyIGJ5dGVzLlwiKTtcbiAgICB9IGVsc2UgaWYgKGFkZHJlc3NCeXRlcy5sZW5ndGggPT09IEFjY291bnRBZGRyZXNzLkxFTkdUSCkge1xuICAgICAgcmV0dXJuIG5ldyBBY2NvdW50QWRkcmVzcyhhZGRyZXNzQnl0ZXMpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlczogQnl0ZXMgPSBuZXcgVWludDhBcnJheShBY2NvdW50QWRkcmVzcy5MRU5HVEgpO1xuICAgIHJlcy5zZXQoYWRkcmVzc0J5dGVzLCBBY2NvdW50QWRkcmVzcy5MRU5HVEggLSBhZGRyZXNzQnl0ZXMubGVuZ3RoKTtcblxuICAgIHJldHVybiBuZXcgQWNjb3VudEFkZHJlc3MocmVzKTtcbiAgfVxuXG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyOiBTZXJpYWxpemVyKTogdm9pZCB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVGaXhlZEJ5dGVzKHRoaXMuYWRkcmVzcyk7XG4gIH1cblxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyOiBEZXNlcmlhbGl6ZXIpOiBBY2NvdW50QWRkcmVzcyB7XG4gICAgcmV0dXJuIG5ldyBBY2NvdW50QWRkcmVzcyhkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVGaXhlZEJ5dGVzKEFjY291bnRBZGRyZXNzLkxFTkdUSCkpO1xuICB9XG59XG4iXSwibmFtZXMiOlsiSGV4U3RyaW5nIiwiQWNjb3VudEFkZHJlc3MiLCJMRU5HVEgiLCJjb25zdHJ1Y3RvciIsImFkZHJlc3MiLCJsZW5ndGgiLCJFcnJvciIsImZyb21IZXgiLCJhZGRyIiwiZW5zdXJlIiwibm9QcmVmaXgiLCJhZGRyZXNzQnl0ZXMiLCJ0b1VpbnQ4QXJyYXkiLCJyZXMiLCJVaW50OEFycmF5Iiwic2V0Iiwic2VyaWFsaXplIiwic2VyaWFsaXplciIsInNlcmlhbGl6ZUZpeGVkQnl0ZXMiLCJkZXNlcmlhbGl6ZSIsImRlc2VyaWFsaXplciIsImRlc2VyaWFsaXplRml4ZWRCeXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/authentication_key.ts":
/*!****************************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/authentication_key.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AuthenticationKey\": () => (/* binding */ AuthenticationKey)\n/* harmony export */ });\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha3 */ \"./ohio-sdk/node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n\n\n/**\n * Each account stores an authentication key. Authentication key enables account owners to rotate\n * their private key(s) associated with the account without changing the address that hosts their account.\n * @see {@link * https://aptos.dev/basics/basics-accounts | Account Basics}\n *\n * Account addresses can be derived from AuthenticationKey\n */ class AuthenticationKey {\n    static LENGTH = 32;\n    static MULTI_ED25519_SCHEME = 1;\n    constructor(bytes){\n        if (bytes.length !== AuthenticationKey.LENGTH) {\n            throw new Error(\"Expected a byte array of length 32\");\n        }\n        this.bytes = bytes;\n    }\n    /**\n   * Converts a K-of-N MultiEd25519PublicKey to AuthenticationKey with:\n   * `auth_key = sha3-256(p_1 | … | p_n | K | 0x01)`. `K` represents the K-of-N required for\n   * authenticating the transaction. `0x01` is the 1-byte scheme for multisig.\n   */ static fromMultiEd25519PublicKey(publicKey) {\n        // @ts-ignore\n        const bytes = new Uint8Array([\n            ...publicKey.toBytes(),\n            AuthenticationKey.MULTI_ED25519_SCHEME\n        ]);\n        const hash = js_sha3__WEBPACK_IMPORTED_MODULE_0__.sha3_256.create();\n        hash.update(Buffer.from(bytes));\n        return new AuthenticationKey(new Uint8Array(hash.arrayBuffer()));\n    }\n    /**\n   * Derives an account address from AuthenticationKey. Since current AccountAddress is 32 bytes,\n   * AuthenticationKey bytes are directly translated to AccountAddress.\n   */ derivedAddress() {\n        return _hex_string__WEBPACK_IMPORTED_MODULE_1__.HexString.fromUint8Array(this.bytes);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9hdXRoZW50aWNhdGlvbl9rZXkudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNhO0FBSTdDOzs7Ozs7Q0FNQyxHQUNNLE1BQU1FLGlCQUFpQjtJQUM1QixPQUFnQkMsTUFBTSxHQUFXLEVBQUUsQ0FBQztJQUVwQyxPQUFnQkMsb0JBQW9CLEdBQVcsQ0FBQyxDQUFDO0lBSWpEQyxZQUFZQyxLQUFZLENBQUU7UUFDeEIsSUFBSUEsS0FBSyxDQUFDQyxNQUFNLEtBQUtMLGlCQUFpQixDQUFDQyxNQUFNLEVBQUU7WUFDN0MsTUFBTSxJQUFJSyxLQUFLLENBQUMsb0NBQW9DLENBQUMsQ0FBQztTQUN2RDtRQUNELElBQUksQ0FBQ0YsS0FBSyxHQUFHQSxLQUFLLENBQUM7S0FDcEI7SUFFRDs7OztHQUlDLEdBQ0QsT0FBT0cseUJBQXlCLENBQUNDLFNBQWdDLEVBQXFCO1FBQ3BGLGFBQWE7UUFDYixNQUFNSixLQUFLLEdBQUcsSUFBSUssVUFBVSxDQUFDO2VBQUlELFNBQVMsQ0FBQ0UsT0FBTyxFQUFFO1lBQUVWLGlCQUFpQixDQUFDRSxvQkFBb0I7U0FBQyxDQUFDO1FBQzlGLE1BQU1TLElBQUksR0FBR2Isb0RBQW9CLEVBQUU7UUFDbkNhLElBQUksQ0FBQ0csTUFBTSxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ1osS0FBSyxDQUFDLENBQUMsQ0FBQztRQUVoQyxPQUFPLElBQUlKLGlCQUFpQixDQUFDLElBQUlTLFVBQVUsQ0FBQ0UsSUFBSSxDQUFDTSxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDbEU7SUFFRDs7O0dBR0MsR0FDREMsY0FBYyxHQUFjO1FBQzFCLE9BQU9uQixpRUFBd0IsQ0FBQyxJQUFJLENBQUNLLEtBQUssQ0FBQyxDQUFDO0tBQzdDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9hdXRoZW50aWNhdGlvbl9rZXkudHM/ZjM2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBTSEEzIGZyb20gXCJqcy1zaGEzXCI7XG5pbXBvcnQgeyBIZXhTdHJpbmcgfSBmcm9tIFwiLi4vLi4vaGV4X3N0cmluZ1wiO1xuaW1wb3J0IHsgQnl0ZXMgfSBmcm9tIFwiLi4vYmNzXCI7XG5pbXBvcnQgeyBNdWx0aUVkMjU1MTlQdWJsaWNLZXkgfSBmcm9tIFwiLi9tdWx0aV9lZDI1NTE5XCI7XG5cbi8qKlxuICogRWFjaCBhY2NvdW50IHN0b3JlcyBhbiBhdXRoZW50aWNhdGlvbiBrZXkuIEF1dGhlbnRpY2F0aW9uIGtleSBlbmFibGVzIGFjY291bnQgb3duZXJzIHRvIHJvdGF0ZVxuICogdGhlaXIgcHJpdmF0ZSBrZXkocykgYXNzb2NpYXRlZCB3aXRoIHRoZSBhY2NvdW50IHdpdGhvdXQgY2hhbmdpbmcgdGhlIGFkZHJlc3MgdGhhdCBob3N0cyB0aGVpciBhY2NvdW50LlxuICogQHNlZSB7QGxpbmsgKiBodHRwczovL2FwdG9zLmRldi9iYXNpY3MvYmFzaWNzLWFjY291bnRzIHwgQWNjb3VudCBCYXNpY3N9XG4gKlxuICogQWNjb3VudCBhZGRyZXNzZXMgY2FuIGJlIGRlcml2ZWQgZnJvbSBBdXRoZW50aWNhdGlvbktleVxuICovXG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRpb25LZXkge1xuICBzdGF0aWMgcmVhZG9ubHkgTEVOR1RIOiBudW1iZXIgPSAzMjtcblxuICBzdGF0aWMgcmVhZG9ubHkgTVVMVElfRUQyNTUxOV9TQ0hFTUU6IG51bWJlciA9IDE7XG5cbiAgcmVhZG9ubHkgYnl0ZXM6IEJ5dGVzO1xuXG4gIGNvbnN0cnVjdG9yKGJ5dGVzOiBCeXRlcykge1xuICAgIGlmIChieXRlcy5sZW5ndGggIT09IEF1dGhlbnRpY2F0aW9uS2V5LkxFTkdUSCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgYSBieXRlIGFycmF5IG9mIGxlbmd0aCAzMlwiKTtcbiAgICB9XG4gICAgdGhpcy5ieXRlcyA9IGJ5dGVzO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbnZlcnRzIGEgSy1vZi1OIE11bHRpRWQyNTUxOVB1YmxpY0tleSB0byBBdXRoZW50aWNhdGlvbktleSB3aXRoOlxuICAgKiBgYXV0aF9rZXkgPSBzaGEzLTI1NihwXzEgfCDigKYgfCBwX24gfCBLIHwgMHgwMSlgLiBgS2AgcmVwcmVzZW50cyB0aGUgSy1vZi1OIHJlcXVpcmVkIGZvclxuICAgKiBhdXRoZW50aWNhdGluZyB0aGUgdHJhbnNhY3Rpb24uIGAweDAxYCBpcyB0aGUgMS1ieXRlIHNjaGVtZSBmb3IgbXVsdGlzaWcuXG4gICAqL1xuICBzdGF0aWMgZnJvbU11bHRpRWQyNTUxOVB1YmxpY0tleShwdWJsaWNLZXk6IE11bHRpRWQyNTUxOVB1YmxpY0tleSk6IEF1dGhlbnRpY2F0aW9uS2V5IHtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShbLi4ucHVibGljS2V5LnRvQnl0ZXMoKSwgQXV0aGVudGljYXRpb25LZXkuTVVMVElfRUQyNTUxOV9TQ0hFTUVdKTtcbiAgICBjb25zdCBoYXNoID0gU0hBMy5zaGEzXzI1Ni5jcmVhdGUoKTtcbiAgICBoYXNoLnVwZGF0ZShCdWZmZXIuZnJvbShieXRlcykpO1xuXG4gICAgcmV0dXJuIG5ldyBBdXRoZW50aWNhdGlvbktleShuZXcgVWludDhBcnJheShoYXNoLmFycmF5QnVmZmVyKCkpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXJpdmVzIGFuIGFjY291bnQgYWRkcmVzcyBmcm9tIEF1dGhlbnRpY2F0aW9uS2V5LiBTaW5jZSBjdXJyZW50IEFjY291bnRBZGRyZXNzIGlzIDMyIGJ5dGVzLFxuICAgKiBBdXRoZW50aWNhdGlvbktleSBieXRlcyBhcmUgZGlyZWN0bHkgdHJhbnNsYXRlZCB0byBBY2NvdW50QWRkcmVzcy5cbiAgICovXG4gIGRlcml2ZWRBZGRyZXNzKCk6IEhleFN0cmluZyB7XG4gICAgcmV0dXJuIEhleFN0cmluZy5mcm9tVWludDhBcnJheSh0aGlzLmJ5dGVzKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIlNIQTMiLCJIZXhTdHJpbmciLCJBdXRoZW50aWNhdGlvbktleSIsIkxFTkdUSCIsIk1VTFRJX0VEMjU1MTlfU0NIRU1FIiwiY29uc3RydWN0b3IiLCJieXRlcyIsImxlbmd0aCIsIkVycm9yIiwiZnJvbU11bHRpRWQyNTUxOVB1YmxpY0tleSIsInB1YmxpY0tleSIsIlVpbnQ4QXJyYXkiLCJ0b0J5dGVzIiwiaGFzaCIsInNoYTNfMjU2IiwiY3JlYXRlIiwidXBkYXRlIiwiQnVmZmVyIiwiZnJvbSIsImFycmF5QnVmZmVyIiwiZGVyaXZlZEFkZHJlc3MiLCJmcm9tVWludDhBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/authentication_key.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/authenticator.ts":
/*!***********************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/authenticator.ts ***!
  \***********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AccountAuthenticator\": () => (/* binding */ AccountAuthenticator),\n/* harmony export */   \"AccountAuthenticatorEd25519\": () => (/* binding */ AccountAuthenticatorEd25519),\n/* harmony export */   \"AccountAuthenticatorMultiEd25519\": () => (/* binding */ AccountAuthenticatorMultiEd25519),\n/* harmony export */   \"TransactionAuthenticator\": () => (/* binding */ TransactionAuthenticator),\n/* harmony export */   \"TransactionAuthenticatorEd25519\": () => (/* binding */ TransactionAuthenticatorEd25519),\n/* harmony export */   \"TransactionAuthenticatorMultiAgent\": () => (/* binding */ TransactionAuthenticatorMultiAgent),\n/* harmony export */   \"TransactionAuthenticatorMultiEd25519\": () => (/* binding */ TransactionAuthenticatorMultiEd25519)\n/* harmony export */ });\n/* harmony import */ var _bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bcs */ \"./ohio-sdk/sdk/transaction_builder/bcs/index.ts\");\n/* harmony import */ var _account_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account_address */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts\");\n/* harmony import */ var _ed25519__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ed25519 */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/ed25519.ts\");\n/* harmony import */ var _multi_ed25519__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./multi_ed25519 */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/multi_ed25519.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bcs__WEBPACK_IMPORTED_MODULE_0__]);\n_bcs__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* eslint-disable @typescript-eslint/naming-convention */ \n\n\n\nclass TransactionAuthenticator {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return TransactionAuthenticatorEd25519.load(deserializer);\n            case 1:\n                return TransactionAuthenticatorMultiEd25519.load(deserializer);\n            case 2:\n                return TransactionAuthenticatorMultiAgent.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for TransactionAuthenticator: ${index}`);\n        }\n    }\n}\nclass TransactionAuthenticatorEd25519 extends TransactionAuthenticator {\n    /**\n   * An authenticator for single signature.\n   *\n   * @param public_key Client's public key.\n   * @param signature Signature of a raw transaction.\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   * for details about generating a signature.\n   */ constructor(public_key, signature){\n        super();\n        this.public_key = public_key;\n        this.signature = signature;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(0);\n        this.public_key.serialize(serializer);\n        this.signature.serialize(serializer);\n    }\n    static load(deserializer) {\n        const public_key = _ed25519__WEBPACK_IMPORTED_MODULE_2__.Ed25519PublicKey.deserialize(deserializer);\n        const signature = _ed25519__WEBPACK_IMPORTED_MODULE_2__.Ed25519Signature.deserialize(deserializer);\n        return new TransactionAuthenticatorEd25519(public_key, signature);\n    }\n}\nclass TransactionAuthenticatorMultiEd25519 extends TransactionAuthenticator {\n    /**\n   * An authenticator for multiple signatures.\n   *\n   * @param public_key\n   * @param signature\n   *\n   */ constructor(public_key, signature){\n        super();\n        this.public_key = public_key;\n        this.signature = signature;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(1);\n        this.public_key.serialize(serializer);\n        this.signature.serialize(serializer);\n    }\n    static load(deserializer) {\n        const public_key = _multi_ed25519__WEBPACK_IMPORTED_MODULE_3__.MultiEd25519PublicKey.deserialize(deserializer);\n        const signature = _multi_ed25519__WEBPACK_IMPORTED_MODULE_3__.MultiEd25519Signature.deserialize(deserializer);\n        return new TransactionAuthenticatorMultiEd25519(public_key, signature);\n    }\n}\nclass TransactionAuthenticatorMultiAgent extends TransactionAuthenticator {\n    constructor(sender, secondary_signer_addresses, secondary_signers){\n        super();\n        this.sender = sender;\n        this.secondary_signer_addresses = secondary_signer_addresses;\n        this.secondary_signers = secondary_signers;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(2);\n        this.sender.serialize(serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.secondary_signer_addresses, serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.secondary_signers, serializer);\n    }\n    static load(deserializer) {\n        const sender = AccountAuthenticator.deserialize(deserializer);\n        const secondary_signer_addresses = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, _account_address__WEBPACK_IMPORTED_MODULE_1__.AccountAddress);\n        const secondary_signers = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, AccountAuthenticator);\n        return new TransactionAuthenticatorMultiAgent(sender, secondary_signer_addresses, secondary_signers);\n    }\n}\nclass AccountAuthenticator {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return AccountAuthenticatorEd25519.load(deserializer);\n            case 1:\n                return AccountAuthenticatorMultiEd25519.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for AccountAuthenticator: ${index}`);\n        }\n    }\n}\nclass AccountAuthenticatorEd25519 extends AccountAuthenticator {\n    constructor(public_key, signature){\n        super();\n        this.public_key = public_key;\n        this.signature = signature;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(0);\n        this.public_key.serialize(serializer);\n        this.signature.serialize(serializer);\n    }\n    static load(deserializer) {\n        const public_key = _ed25519__WEBPACK_IMPORTED_MODULE_2__.Ed25519PublicKey.deserialize(deserializer);\n        const signature = _ed25519__WEBPACK_IMPORTED_MODULE_2__.Ed25519Signature.deserialize(deserializer);\n        return new AccountAuthenticatorEd25519(public_key, signature);\n    }\n}\nclass AccountAuthenticatorMultiEd25519 extends AccountAuthenticator {\n    constructor(public_key, signature){\n        super();\n        this.public_key = public_key;\n        this.signature = signature;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(1);\n        this.public_key.serialize(serializer);\n        this.signature.serialize(serializer);\n    }\n    static load(deserializer) {\n        const public_key = _multi_ed25519__WEBPACK_IMPORTED_MODULE_3__.MultiEd25519PublicKey.deserialize(deserializer);\n        const signature = _multi_ed25519__WEBPACK_IMPORTED_MODULE_3__.MultiEd25519Signature.deserialize(deserializer);\n        return new AccountAuthenticatorMultiEd25519(public_key, signature);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/authenticator.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/ed25519.ts":
/*!*****************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/ed25519.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ed25519PublicKey\": () => (/* binding */ Ed25519PublicKey),\n/* harmony export */   \"Ed25519Signature\": () => (/* binding */ Ed25519Signature)\n/* harmony export */ });\nclass Ed25519PublicKey {\n    static LENGTH = 32;\n    constructor(value){\n        if (value.length !== Ed25519PublicKey.LENGTH) {\n            throw new Error(`Ed25519PublicKey length should be ${Ed25519PublicKey.LENGTH}`);\n        }\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.value);\n    }\n    static deserialize(deserializer) {\n        const value = deserializer.deserializeBytes();\n        return new Ed25519PublicKey(value);\n    }\n}\nclass Ed25519Signature {\n    static LENGTH = 64;\n    constructor(value){\n        this.value = value;\n        if (value.length !== Ed25519Signature.LENGTH) {\n            throw new Error(`Ed25519Signature length should be ${Ed25519Signature.LENGTH}`);\n        }\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.value);\n    }\n    static deserialize(deserializer) {\n        const value = deserializer.deserializeBytes();\n        return new Ed25519Signature(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9lZDI1NTE5LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBRU8sTUFBTUEsZ0JBQWdCO0lBQzNCLE9BQWdCQyxNQUFNLEdBQVcsRUFBRSxDQUFDO0lBSXBDQyxZQUFZQyxLQUFZLENBQUU7UUFDeEIsSUFBSUEsS0FBSyxDQUFDQyxNQUFNLEtBQUtKLGdCQUFnQixDQUFDQyxNQUFNLEVBQUU7WUFDNUMsTUFBTSxJQUFJSSxLQUFLLENBQUMsQ0FBQyxrQ0FBa0MsRUFBRUwsZ0JBQWdCLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqRjtRQUNELElBQUksQ0FBQ0UsS0FBSyxHQUFHQSxLQUFLLENBQUM7S0FDcEI7SUFFREcsU0FBUyxDQUFDQyxVQUFzQixFQUFRO1FBQ3RDQSxVQUFVLENBQUNDLGNBQWMsQ0FBQyxJQUFJLENBQUNMLEtBQUssQ0FBQyxDQUFDO0tBQ3ZDO0lBRUQsT0FBT00sV0FBVyxDQUFDQyxZQUEwQixFQUFvQjtRQUMvRCxNQUFNUCxLQUFLLEdBQUdPLFlBQVksQ0FBQ0MsZ0JBQWdCLEVBQUU7UUFDN0MsT0FBTyxJQUFJWCxnQkFBZ0IsQ0FBQ0csS0FBSyxDQUFDLENBQUM7S0FDcEM7Q0FDRjtBQUVNLE1BQU1TLGdCQUFnQjtJQUMzQixPQUFnQlgsTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUU1QkMsWUFBNEJDLEtBQVksQ0FBRTthQUFkQSxLQUFZLEdBQVpBLEtBQVk7UUFDdEMsSUFBSUEsS0FBSyxDQUFDQyxNQUFNLEtBQUtRLGdCQUFnQixDQUFDWCxNQUFNLEVBQUU7WUFDNUMsTUFBTSxJQUFJSSxLQUFLLENBQUMsQ0FBQyxrQ0FBa0MsRUFBRU8sZ0JBQWdCLENBQUNYLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqRjtLQUNGO0lBRURLLFNBQVMsQ0FBQ0MsVUFBc0IsRUFBUTtRQUN0Q0EsVUFBVSxDQUFDQyxjQUFjLENBQUMsSUFBSSxDQUFDTCxLQUFLLENBQUMsQ0FBQztLQUN2QztJQUVELE9BQU9NLFdBQVcsQ0FBQ0MsWUFBMEIsRUFBb0I7UUFDL0QsTUFBTVAsS0FBSyxHQUFHTyxZQUFZLENBQUNDLGdCQUFnQixFQUFFO1FBQzdDLE9BQU8sSUFBSUMsZ0JBQWdCLENBQUNULEtBQUssQ0FBQyxDQUFDO0tBQ3BDO0NBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9lZDI1NTE5LnRzPzY2N2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnl0ZXMsIERlc2VyaWFsaXplciwgU2VyaWFsaXplciB9IGZyb20gXCIuLi9iY3NcIjtcblxuZXhwb3J0IGNsYXNzIEVkMjU1MTlQdWJsaWNLZXkge1xuICBzdGF0aWMgcmVhZG9ubHkgTEVOR1RIOiBudW1iZXIgPSAzMjtcblxuICByZWFkb25seSB2YWx1ZTogQnl0ZXM7XG5cbiAgY29uc3RydWN0b3IodmFsdWU6IEJ5dGVzKSB7XG4gICAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gRWQyNTUxOVB1YmxpY0tleS5MRU5HVEgpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRWQyNTUxOVB1YmxpY0tleSBsZW5ndGggc2hvdWxkIGJlICR7RWQyNTUxOVB1YmxpY0tleS5MRU5HVEh9YCk7XG4gICAgfVxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgfVxuXG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyOiBTZXJpYWxpemVyKTogdm9pZCB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyh0aGlzLnZhbHVlKTtcbiAgfVxuXG4gIHN0YXRpYyBkZXNlcmlhbGl6ZShkZXNlcmlhbGl6ZXI6IERlc2VyaWFsaXplcik6IEVkMjU1MTlQdWJsaWNLZXkge1xuICAgIGNvbnN0IHZhbHVlID0gZGVzZXJpYWxpemVyLmRlc2VyaWFsaXplQnl0ZXMoKTtcbiAgICByZXR1cm4gbmV3IEVkMjU1MTlQdWJsaWNLZXkodmFsdWUpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBFZDI1NTE5U2lnbmF0dXJlIHtcbiAgc3RhdGljIHJlYWRvbmx5IExFTkdUSCA9IDY0O1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyByZWFkb25seSB2YWx1ZTogQnl0ZXMpIHtcbiAgICBpZiAodmFsdWUubGVuZ3RoICE9PSBFZDI1NTE5U2lnbmF0dXJlLkxFTkdUSCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBFZDI1NTE5U2lnbmF0dXJlIGxlbmd0aCBzaG91bGQgYmUgJHtFZDI1NTE5U2lnbmF0dXJlLkxFTkdUSH1gKTtcbiAgICB9XG4gIH1cblxuICBzZXJpYWxpemUoc2VyaWFsaXplcjogU2VyaWFsaXplcik6IHZvaWQge1xuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplQnl0ZXModGhpcy52YWx1ZSk7XG4gIH1cblxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyOiBEZXNlcmlhbGl6ZXIpOiBFZDI1NTE5U2lnbmF0dXJlIHtcbiAgICBjb25zdCB2YWx1ZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZUJ5dGVzKCk7XG4gICAgcmV0dXJuIG5ldyBFZDI1NTE5U2lnbmF0dXJlKHZhbHVlKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkVkMjU1MTlQdWJsaWNLZXkiLCJMRU5HVEgiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwibGVuZ3RoIiwiRXJyb3IiLCJzZXJpYWxpemUiLCJzZXJpYWxpemVyIiwic2VyaWFsaXplQnl0ZXMiLCJkZXNlcmlhbGl6ZSIsImRlc2VyaWFsaXplciIsImRlc2VyaWFsaXplQnl0ZXMiLCJFZDI1NTE5U2lnbmF0dXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/ed25519.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/identifier.ts":
/*!********************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/identifier.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Identifier\": () => (/* binding */ Identifier)\n/* harmony export */ });\nclass Identifier {\n    constructor(value){\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeStr(this.value);\n    }\n    static deserialize(deserializer) {\n        const value = deserializer.deserializeStr();\n        return new Identifier(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9pZGVudGlmaWVyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFTyxNQUFNQSxVQUFVO0lBQ3JCQyxZQUFtQkMsS0FBYSxDQUFFO2FBQWZBLEtBQWEsR0FBYkEsS0FBYTtLQUFJO0lBRXBDLFNBQWdCLENBQUNFLFVBQXNCLEVBQVE7UUFDN0NBLFVBQVUsQ0FBQ0MsWUFBWSxDQUFDLElBQUksQ0FBQ0gsS0FBSyxDQUFDLENBQUM7S0FDckM7SUFFRCxPQUFPSSxXQUFXLENBQUNDLFlBQTBCLEVBQWM7UUFDekQsTUFBTUwsS0FBSyxHQUFHSyxZQUFZLENBQUNDLGNBQWMsRUFBRTtRQUMzQyxPQUFPLElBQUlSLFVBQVUsQ0FBQ0UsS0FBSyxDQUFDLENBQUM7S0FDOUI7Q0FDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay90cmFuc2FjdGlvbl9idWlsZGVyL2FwdG9zX3R5cGVzL2lkZW50aWZpZXIudHM/MTE5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZXNlcmlhbGl6ZXIsIFNlcmlhbGl6ZXIgfSBmcm9tIFwiLi4vYmNzXCI7XG5cbmV4cG9ydCBjbGFzcyBJZGVudGlmaWVyIHtcbiAgY29uc3RydWN0b3IocHVibGljIHZhbHVlOiBzdHJpbmcpIHt9XG5cbiAgcHVibGljIHNlcmlhbGl6ZShzZXJpYWxpemVyOiBTZXJpYWxpemVyKTogdm9pZCB7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVTdHIodGhpcy52YWx1ZSk7XG4gIH1cblxuICBzdGF0aWMgZGVzZXJpYWxpemUoZGVzZXJpYWxpemVyOiBEZXNlcmlhbGl6ZXIpOiBJZGVudGlmaWVyIHtcbiAgICBjb25zdCB2YWx1ZSA9IGRlc2VyaWFsaXplci5kZXNlcmlhbGl6ZVN0cigpO1xuICAgIHJldHVybiBuZXcgSWRlbnRpZmllcih2YWx1ZSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJJZGVudGlmaWVyIiwiY29uc3RydWN0b3IiLCJ2YWx1ZSIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZXIiLCJzZXJpYWxpemVTdHIiLCJkZXNlcmlhbGl6ZSIsImRlc2VyaWFsaXplciIsImRlc2VyaWFsaXplU3RyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/identifier.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/index.ts":
/*!***************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/index.ts ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _account_address__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./account_address */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _account_address__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _account_address__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _authenticator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./authenticator */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/authenticator.ts\");\n/* harmony import */ var _transaction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/transaction.ts\");\n/* harmony import */ var _type_tag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./type_tag */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/type_tag.ts\");\n/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identifier */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/identifier.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _identifier__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _identifier__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _ed25519__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ed25519 */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/ed25519.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _ed25519__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _ed25519__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _multi_ed25519__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./multi_ed25519 */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/multi_ed25519.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _multi_ed25519__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _multi_ed25519__WEBPACK_IMPORTED_MODULE_6__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _authentication_key__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./authentication_key */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/authentication_key.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _authentication_key__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _authentication_key__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_authenticator__WEBPACK_IMPORTED_MODULE_1__, _transaction__WEBPACK_IMPORTED_MODULE_2__, _type_tag__WEBPACK_IMPORTED_MODULE_3__]);\n([_authenticator__WEBPACK_IMPORTED_MODULE_1__, _transaction__WEBPACK_IMPORTED_MODULE_2__, _type_tag__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _authenticator__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _authenticator__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _transaction__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _transaction__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _type_tag__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _type_tag__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9hcHRvc190eXBlcy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFa0M7QUFDRjtBQUNGO0FBQ0g7QUFDRTtBQUNIO0FBQ007QUFDSyIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay90cmFuc2FjdGlvbl9idWlsZGVyL2FwdG9zX3R5cGVzL2luZGV4LnRzPzdlODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlci9cIjtcblxuZXhwb3J0ICogZnJvbSBcIi4vYWNjb3VudF9hZGRyZXNzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hdXRoZW50aWNhdG9yXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90cmFuc2FjdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZV90YWdcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lkZW50aWZpZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VkMjU1MTlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL211bHRpX2VkMjU1MTlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2F1dGhlbnRpY2F0aW9uX2tleVwiO1xuXG5leHBvcnQgdHlwZSBTaWduaW5nTWVzc2FnZSA9IEJ1ZmZlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/index.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/multi_ed25519.ts":
/*!***********************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/multi_ed25519.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MultiEd25519PublicKey\": () => (/* binding */ MultiEd25519PublicKey),\n/* harmony export */   \"MultiEd25519Signature\": () => (/* binding */ MultiEd25519Signature)\n/* harmony export */ });\n/* harmony import */ var _ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ed25519 */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/ed25519.ts\");\n/* eslint-disable no-bitwise */ \n/**\n * MultiEd25519 currently supports at most 32 signatures.\n */ const MAX_SIGNATURES_SUPPORTED = 32;\nclass MultiEd25519PublicKey {\n    /**\n   * Public key for a K-of-N multisig transaction. A K-of-N multisig transaction means that for such a\n   * transaction to be executed, at least K out of the N authorized signers have signed the transaction\n   * and passed the check conducted by the chain.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param public_keys A list of public keys\n   * @param threshold At least \"threshold\" signatures must be valid\n   */ constructor(public_keys, threshold){\n        this.public_keys = public_keys;\n        this.threshold = threshold;\n        if (threshold > MAX_SIGNATURES_SUPPORTED) {\n            throw new Error(`\"threshold\" cannot be larger than ${MAX_SIGNATURES_SUPPORTED}`);\n        }\n    }\n    /**\n   * Converts a MultiEd25519PublicKey into bytes with: bytes = p1_bytes | ... | pn_bytes | threshold\n   */ toBytes() {\n        const bytes = new Uint8Array(this.public_keys.length * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey.LENGTH + 1);\n        this.public_keys.forEach((k, i)=>{\n            bytes.set(k.value, i * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey.LENGTH);\n        });\n        bytes[this.public_keys.length * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey.LENGTH] = this.threshold;\n        return bytes;\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.toBytes());\n    }\n    static deserialize(deserializer) {\n        const bytes = deserializer.deserializeBytes();\n        const threshold = bytes[bytes.length - 1];\n        const keys = [];\n        for(let i = 0; i < bytes.length; i += _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey.LENGTH){\n            const begin = i * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey.LENGTH;\n            keys.push(new _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey(bytes.subarray(begin, begin + _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519PublicKey.LENGTH)));\n        }\n        return new MultiEd25519PublicKey(keys, threshold);\n    }\n}\nclass MultiEd25519Signature {\n    static BITMAP_LEN = 4;\n    /**\n   * Signature for a K-of-N multisig transaction.\n   *\n   * @see {@link\n   * https://aptos.dev/guides/creating-a-signed-transaction#multisignature-transactions | Creating a Signed Transaction}\n   *\n   * @param signatures A list of ed25519 signatures\n   * @param bitmap 4 bytes, at most 32 signatures are supported. If Nth bit value is `1`, the Nth\n   * signature should be provided in `signatures`. Bits are read from left to right\n   */ constructor(signatures, bitmap){\n        this.signatures = signatures;\n        this.bitmap = bitmap;\n        if (bitmap.length !== MultiEd25519Signature.BITMAP_LEN) {\n            throw new Error(`\"bitmap\" length should be ${MultiEd25519Signature.BITMAP_LEN}`);\n        }\n    }\n    /**\n   * Converts a MultiEd25519Signature into bytes with `bytes = s1_bytes | ... | sn_bytes | bitmap`\n   */ toBytes() {\n        const bytes = new Uint8Array(this.signatures.length * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature.LENGTH + MultiEd25519Signature.BITMAP_LEN);\n        this.signatures.forEach((k, i)=>{\n            bytes.set(k.value, i * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature.LENGTH);\n        });\n        bytes.set(this.bitmap, this.signatures.length * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature.LENGTH);\n        return bytes;\n    }\n    /**\n   * Helper method to create a bitmap out of the specified bit positions\n   * @param bits The bitmap positions that should be set. A position starts at index 0.\n   * Valid position should range between 0 and 31.\n   * @example\n   * Here's an example of valid `bits`\n   * ```\n   * [0, 2, 31]\n   * ```\n   * `[0, 2, 31]` means the 1st, 3rd and 32nd bits should be set in the bitmap.\n   * The result bitmap should be 0b1010000000000000000000000000001\n   *\n   * @returns bitmap that is 32bit long\n   */ static createBitmap(bits) {\n        // Bits are read from left to right. e.g. 0b10000000 represents the first bit is set in one byte.\n        // The decimal value of 0b10000000 is 128.\n        const firstBitInByte = 128;\n        const bitmap = new Uint8Array([\n            0,\n            0,\n            0,\n            0\n        ]);\n        // Check if duplicates exist in bits\n        const dupCheckSet = new Set();\n        bits.forEach((bit)=>{\n            if (bit >= MAX_SIGNATURES_SUPPORTED) {\n                throw new Error(`Invalid bit value ${bit}.`);\n            }\n            if (dupCheckSet.has(bit)) {\n                throw new Error(\"Duplicated bits detected.\");\n            }\n            dupCheckSet.add(bit);\n            const byteOffset = Math.floor(bit / 8);\n            let byte = bitmap[byteOffset];\n            byte |= firstBitInByte >> bit % 8;\n            bitmap[byteOffset] = byte;\n        });\n        return bitmap;\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.toBytes());\n    }\n    static deserialize(deserializer) {\n        const bytes = deserializer.deserializeBytes();\n        const bitmap = bytes.subarray(bytes.length - 4);\n        const sigs = [];\n        for(let i = 0; i < bytes.length; i += _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature.LENGTH){\n            const begin = i * _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature.LENGTH;\n            sigs.push(new _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature(bytes.subarray(begin, begin + _ed25519__WEBPACK_IMPORTED_MODULE_0__.Ed25519Signature.LENGTH)));\n        }\n        return new MultiEd25519Signature(sigs, bitmap);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/multi_ed25519.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/transaction.ts":
/*!*********************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/transaction.ts ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Call\": () => (/* binding */ Call),\n/* harmony export */   \"ChainId\": () => (/* binding */ ChainId),\n/* harmony export */   \"ChangeSet\": () => (/* binding */ ChangeSet),\n/* harmony export */   \"Module\": () => (/* binding */ Module),\n/* harmony export */   \"ModuleBundle\": () => (/* binding */ ModuleBundle),\n/* harmony export */   \"ModuleId\": () => (/* binding */ ModuleId),\n/* harmony export */   \"MultiAgentRawTransaction\": () => (/* binding */ MultiAgentRawTransaction),\n/* harmony export */   \"RawTransaction\": () => (/* binding */ RawTransaction),\n/* harmony export */   \"RawTransactionWithData\": () => (/* binding */ RawTransactionWithData),\n/* harmony export */   \"Script\": () => (/* binding */ Script),\n/* harmony export */   \"ScriptFunction\": () => (/* binding */ ScriptFunction),\n/* harmony export */   \"SignedTransaction\": () => (/* binding */ SignedTransaction),\n/* harmony export */   \"Transaction\": () => (/* binding */ Transaction),\n/* harmony export */   \"TransactionArgument\": () => (/* binding */ TransactionArgument),\n/* harmony export */   \"TransactionArgumentAddress\": () => (/* binding */ TransactionArgumentAddress),\n/* harmony export */   \"TransactionArgumentBool\": () => (/* binding */ TransactionArgumentBool),\n/* harmony export */   \"TransactionArgumentU128\": () => (/* binding */ TransactionArgumentU128),\n/* harmony export */   \"TransactionArgumentU64\": () => (/* binding */ TransactionArgumentU64),\n/* harmony export */   \"TransactionArgumentU8\": () => (/* binding */ TransactionArgumentU8),\n/* harmony export */   \"TransactionArgumentU8Vector\": () => (/* binding */ TransactionArgumentU8Vector),\n/* harmony export */   \"TransactionPayload\": () => (/* binding */ TransactionPayload),\n/* harmony export */   \"TransactionPayloadCall\": () => (/* binding */ TransactionPayloadCall),\n/* harmony export */   \"TransactionPayloadContractBundle\": () => (/* binding */ TransactionPayloadContractBundle),\n/* harmony export */   \"TransactionPayloadModuleBundle\": () => (/* binding */ TransactionPayloadModuleBundle),\n/* harmony export */   \"TransactionPayloadScript\": () => (/* binding */ TransactionPayloadScript),\n/* harmony export */   \"TransactionPayloadScriptFunction\": () => (/* binding */ TransactionPayloadScriptFunction),\n/* harmony export */   \"TransactionPayloadWriteSet\": () => (/* binding */ TransactionPayloadWriteSet),\n/* harmony export */   \"UserTransaction\": () => (/* binding */ UserTransaction),\n/* harmony export */   \"WriteSet\": () => (/* binding */ WriteSet)\n/* harmony export */ });\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha3 */ \"./ohio-sdk/node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n/* harmony import */ var _bcs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bcs */ \"./ohio-sdk/sdk/transaction_builder/bcs/index.ts\");\n/* harmony import */ var _account_address__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./account_address */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts\");\n/* harmony import */ var _authenticator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authenticator */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/authenticator.ts\");\n/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./identifier */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/identifier.ts\");\n/* harmony import */ var _type_tag__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./type_tag */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/type_tag.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bcs__WEBPACK_IMPORTED_MODULE_2__, _authenticator__WEBPACK_IMPORTED_MODULE_4__, _type_tag__WEBPACK_IMPORTED_MODULE_6__]);\n([_bcs__WEBPACK_IMPORTED_MODULE_2__, _authenticator__WEBPACK_IMPORTED_MODULE_4__, _type_tag__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* eslint-disable @typescript-eslint/naming-convention */ /* eslint-disable class-methods-use-this */ /* eslint-disable @typescript-eslint/no-unused-vars */ /* eslint-disable max-classes-per-file */ \n\n\n\n\n\n\nclass RawTransaction {\n    /**\n   * RawTransactions contain the metadata and payloads that can be submitted to Aptos chain for execution.\n   * RawTransactions must be signed before Aptos chain can execute them.\n   *\n   * @param sender Account address of the sender.\n   * @param sequence_number Sequence number of this transaction. This must match the sequence number stored in\n   *   the sender's account at the time the transaction executes.\n   * @param payload Instructions for the Aptos Blockchain, including publishing a module,\n   *   execute a script function or execute a script payload.\n   * @param max_gas_amount Maximum total gas to spend for this transaction. The account must have more\n   *   than this gas or the transaction will be discarded during validation.\n   * @param gas_unit_price Price to be paid per gas unit.\n   * @param expiration_timestamp_secs The blockchain timestamp at which the blockchain would discard this transaction.\n   * @param chain_id The chain ID of the blockchain that this transaction is intended to be run on.\n   */ constructor(sender, sequence_number, payload, max_gas_amount, gas_unit_price, expiration_timestamp_secs, chain_id){\n        this.sender = sender;\n        this.sequence_number = sequence_number;\n        this.payload = payload;\n        this.max_gas_amount = max_gas_amount;\n        this.gas_unit_price = gas_unit_price;\n        this.expiration_timestamp_secs = expiration_timestamp_secs;\n        this.chain_id = chain_id;\n    }\n    serialize(serializer) {\n        this.sender.serialize(serializer);\n        serializer.serializeU64(this.sequence_number);\n        this.payload.serialize(serializer);\n        serializer.serializeU64(this.max_gas_amount);\n        serializer.serializeU64(this.gas_unit_price);\n        serializer.serializeU64(this.expiration_timestamp_secs);\n        this.chain_id.serialize(serializer);\n    }\n    static deserialize(deserializer) {\n        const sender = _account_address__WEBPACK_IMPORTED_MODULE_3__.AccountAddress.deserialize(deserializer);\n        const sequence_number = deserializer.deserializeU64();\n        const payload = TransactionPayload.deserialize(deserializer);\n        const max_gas_amount = deserializer.deserializeU64();\n        const gas_unit_price = deserializer.deserializeU64();\n        const expiration_timestamp_secs = deserializer.deserializeU64();\n        const chain_id = ChainId.deserialize(deserializer);\n        return new RawTransaction(sender, sequence_number, payload, max_gas_amount, gas_unit_price, expiration_timestamp_secs, chain_id);\n    }\n}\nclass Call {\n    constructor(code, ty_args, args){\n        this.code = code;\n        this.ty_args = ty_args;\n        this.args = args;\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.code);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.ty_args, serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.args, serializer);\n    }\n    static deserialize(deserializer) {\n        const code = deserializer.deserializeBytes();\n        const ty_args = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, _type_tag__WEBPACK_IMPORTED_MODULE_6__.TypeTag);\n        const args = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, TransactionArgument);\n        return new Call(code, ty_args, args);\n    }\n}\nclass Script {\n    /**\n   * Scripts contain the Move bytecodes payload that can be submitted to Aptos chain for execution.\n   * @param code Move bytecode\n   * @param ty_args Type arguments that bytecode requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to bytecode function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */ constructor(code, ty_args, args){\n        this.code = code;\n        this.ty_args = ty_args;\n        this.args = args;\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.code);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.ty_args, serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.args, serializer);\n    }\n    static deserialize(deserializer) {\n        const code = deserializer.deserializeBytes();\n        const ty_args = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, _type_tag__WEBPACK_IMPORTED_MODULE_6__.TypeTag);\n        const args = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, TransactionArgument);\n        return new Script(code, ty_args, args);\n    }\n}\nclass ScriptFunction {\n    /**\n   * Contains the payload to run a function within a module.\n   * @param module_name Fullly qualified module name. ModuleId consists of account address and module name.\n   * @param function_name The function to run.\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   */ constructor(module_name, function_name, ty_args, args){\n        this.module_name = module_name;\n        this.function_name = function_name;\n        this.ty_args = ty_args;\n        this.args = args;\n    }\n    /**\n   *\n   * @param module Fully qualified module name in format \"AccountAddress::module_name\" e.g. \"0x1::coin\"\n   * @param func Function name\n   * @param ty_args Type arguments that move function requires.\n   *\n   * @example\n   * A coin transfer function has one type argument \"CoinType\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @param args Arugments to the move function.\n   *\n   * @example\n   * A coin transfer function has three arugments \"from\", \"to\" and \"amount\".\n   * ```\n   * public(script) fun transfer<CoinType>(from: &signer, to: address, amount: u64,)\n   * ```\n   * @returns\n   */ static natural(module, func, ty_args, args) {\n        return new ScriptFunction(ModuleId.fromStr(module), new _identifier__WEBPACK_IMPORTED_MODULE_5__.Identifier(func), ty_args, args);\n    }\n    /**\n   * `natual` is deprecated, please use `natural`\n   *\n   * @deprecated.\n   */ static natual(module, func, ty_args, args) {\n        return ScriptFunction.natural(module, func, ty_args, args);\n    }\n    serialize(serializer) {\n        this.module_name.serialize(serializer);\n        this.function_name.serialize(serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.ty_args, serializer);\n        serializer.serializeU32AsUleb128(this.args.length);\n        this.args.forEach((item)=>{\n            serializer.serializeBytes(item);\n        });\n    }\n    static deserialize(deserializer) {\n        const module_name = ModuleId.deserialize(deserializer);\n        const function_name = _identifier__WEBPACK_IMPORTED_MODULE_5__.Identifier.deserialize(deserializer);\n        const ty_args = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, _type_tag__WEBPACK_IMPORTED_MODULE_6__.TypeTag);\n        const length = deserializer.deserializeUleb128AsU32();\n        const list = [];\n        for(let i = 0; i < length; i += 1){\n            list.push(deserializer.deserializeBytes());\n        }\n        const args = list;\n        return new ScriptFunction(module_name, function_name, ty_args, args);\n    }\n}\nclass Module {\n    /**\n   * Contains the bytecode of a Move module that can be published to the Aptos chain.\n   * @param code Move bytecode of a module.\n   */ constructor(code){\n        this.code = code;\n    }\n    serialize(serializer) {\n        serializer.serializeBytes(this.code);\n    }\n    static deserialize(deserializer) {\n        const code = deserializer.deserializeBytes();\n        return new Module(code);\n    }\n}\nclass ModuleBundle {\n    /**\n   * Contains a list of Modules that can be published together.\n   * @param codes List of modules.\n   */ constructor(codes){\n        this.codes = codes;\n    }\n    serialize(serializer) {\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.codes, serializer);\n    }\n    static deserialize(deserializer) {\n        const codes = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, Module);\n        return new ModuleBundle(codes);\n    }\n}\nclass ModuleId {\n    /**\n   * Full name of a module.\n   * @param address The account address.\n   * @param name The name of the module under the account at \"address\".\n   */ constructor(address, name){\n        this.address = address;\n        this.name = name;\n    }\n    /**\n   * Converts a string literal to a ModuleId\n   * @param moduleId String literal in format \"AccountAddress::module_name\",\n   *   e.g. \"0x1::coin\"\n   * @returns\n   */ static fromStr(moduleId) {\n        const parts = moduleId.split(\"::\");\n        if (parts.length !== 2) {\n            throw new Error(\"Invalid module id.\");\n        }\n        return new ModuleId(_account_address__WEBPACK_IMPORTED_MODULE_3__.AccountAddress.fromHex(new _hex_string__WEBPACK_IMPORTED_MODULE_1__.HexString(parts[0])), new _identifier__WEBPACK_IMPORTED_MODULE_5__.Identifier(parts[1]));\n    }\n    serialize(serializer) {\n        this.address.serialize(serializer);\n        this.name.serialize(serializer);\n    }\n    static deserialize(deserializer) {\n        const address = _account_address__WEBPACK_IMPORTED_MODULE_3__.AccountAddress.deserialize(deserializer);\n        const name = _identifier__WEBPACK_IMPORTED_MODULE_5__.Identifier.deserialize(deserializer);\n        return new ModuleId(address, name);\n    }\n}\nclass ChangeSet {\n    serialize(serializer) {\n        throw new Error(\"Not implemented.\");\n    }\n    static deserialize(deserializer) {\n        throw new Error(\"Not implemented.\");\n    }\n}\nclass WriteSet {\n    serialize(serializer) {\n        throw new Error(\"Not implmented.\");\n    }\n    static deserialize(deserializer) {\n        throw new Error(\"Not implmented.\");\n    }\n}\nclass SignedTransaction {\n    /**\n   * A SignedTransaction consists of a raw transaction and an authenticator. The authenticator\n   * contains a client's public key and the signature of the raw transaction.\n   *\n   * @see {@link https://aptos.dev/guides/creating-a-signed-transaction/ | Creating a Signed Transaction}\n   *\n   * @param raw_txn\n   * @param authenticator Contains a client's public key and the signature of the raw transaction.\n   *   Authenticator has 3 flavors: single signature, multi-signature and multi-agent.\n   *   @see authenticator.ts for details.\n   */ constructor(raw_txn, authenticator){\n        this.raw_txn = raw_txn;\n        this.authenticator = authenticator;\n    }\n    serialize(serializer) {\n        this.raw_txn.serialize(serializer);\n        this.authenticator.serialize(serializer);\n    }\n    static deserialize(deserializer) {\n        const raw_txn = RawTransaction.deserialize(deserializer);\n        const authenticator = _authenticator__WEBPACK_IMPORTED_MODULE_4__.TransactionAuthenticator.deserialize(deserializer);\n        return new SignedTransaction(raw_txn, authenticator);\n    }\n}\nclass RawTransactionWithData {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return MultiAgentRawTransaction.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for RawTransactionWithData: ${index}`);\n        }\n    }\n}\nclass MultiAgentRawTransaction extends RawTransactionWithData {\n    constructor(raw_txn, secondary_signer_addresses){\n        super();\n        this.raw_txn = raw_txn;\n        this.secondary_signer_addresses = secondary_signer_addresses;\n    }\n    serialize(serializer) {\n        // enum variant index\n        serializer.serializeU32AsUleb128(0);\n        this.raw_txn.serialize(serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.serializeVector)(this.secondary_signer_addresses, serializer);\n    }\n    static load(deserializer) {\n        const rawTxn = RawTransaction.deserialize(deserializer);\n        const secondarySignerAddresses = (0,_bcs__WEBPACK_IMPORTED_MODULE_2__.deserializeVector)(deserializer, _account_address__WEBPACK_IMPORTED_MODULE_3__.AccountAddress);\n        return new MultiAgentRawTransaction(rawTxn, secondarySignerAddresses);\n    }\n}\nclass TransactionPayload {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return TransactionPayloadWriteSet.load(deserializer);\n            case 1:\n                return TransactionPayloadScript.load(deserializer);\n            case 2:\n                return TransactionPayloadModuleBundle.load(deserializer);\n            case 3:\n                return TransactionPayloadScriptFunction.load(deserializer);\n            case 4:\n                return TransactionPayloadScript.load(deserializer);\n            case 5:\n                return TransactionPayloadModuleBundle.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for TransactionPayload: ${index}`);\n        }\n    }\n}\nclass TransactionPayloadCall extends TransactionPayload {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(4);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = Script.deserialize(deserializer);\n        return new TransactionPayloadCall(value);\n    }\n}\nclass TransactionPayloadContractBundle extends TransactionPayload {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(5);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = ModuleBundle.deserialize(deserializer);\n        return new TransactionPayloadContractBundle(value);\n    }\n}\nclass TransactionPayloadWriteSet extends TransactionPayload {\n    serialize(serializer) {\n        throw new Error(\"Not implemented\");\n    }\n    static load(deserializer) {\n        throw new Error(\"Not implemented\");\n    }\n}\nclass TransactionPayloadScript extends TransactionPayload {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(1);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = Script.deserialize(deserializer);\n        return new TransactionPayloadScript(value);\n    }\n}\nclass TransactionPayloadModuleBundle extends TransactionPayload {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(2);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = ModuleBundle.deserialize(deserializer);\n        return new TransactionPayloadModuleBundle(value);\n    }\n}\nclass TransactionPayloadScriptFunction extends TransactionPayload {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(3);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = ScriptFunction.deserialize(deserializer);\n        return new TransactionPayloadScriptFunction(value);\n    }\n}\nclass ChainId {\n    constructor(value){\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU8(this.value);\n    }\n    static deserialize(deserializer) {\n        const value = deserializer.deserializeU8();\n        return new ChainId(value);\n    }\n}\nclass TransactionArgument {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return TransactionArgumentU8.load(deserializer);\n            case 1:\n                return TransactionArgumentU64.load(deserializer);\n            case 2:\n                return TransactionArgumentU128.load(deserializer);\n            case 3:\n                return TransactionArgumentAddress.load(deserializer);\n            case 4:\n                return TransactionArgumentU8Vector.load(deserializer);\n            case 5:\n                return TransactionArgumentBool.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for TransactionArgument: ${index}`);\n        }\n    }\n}\nclass TransactionArgumentU8 extends TransactionArgument {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(0);\n        serializer.serializeU8(this.value);\n    }\n    static load(deserializer) {\n        const value = deserializer.deserializeU8();\n        return new TransactionArgumentU8(value);\n    }\n}\nclass TransactionArgumentU64 extends TransactionArgument {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(1);\n        serializer.serializeU64(this.value);\n    }\n    static load(deserializer) {\n        const value = deserializer.deserializeU64();\n        return new TransactionArgumentU64(value);\n    }\n}\nclass TransactionArgumentU128 extends TransactionArgument {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(2);\n        serializer.serializeU128(this.value);\n    }\n    static load(deserializer) {\n        const value = deserializer.deserializeU128();\n        return new TransactionArgumentU128(value);\n    }\n}\nclass TransactionArgumentAddress extends TransactionArgument {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(3);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = _account_address__WEBPACK_IMPORTED_MODULE_3__.AccountAddress.deserialize(deserializer);\n        return new TransactionArgumentAddress(value);\n    }\n}\nclass TransactionArgumentU8Vector extends TransactionArgument {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(4);\n        serializer.serializeBytes(this.value);\n    }\n    static load(deserializer) {\n        const value = deserializer.deserializeBytes();\n        return new TransactionArgumentU8Vector(value);\n    }\n}\nclass TransactionArgumentBool extends TransactionArgument {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(5);\n        serializer.serializeBool(this.value);\n    }\n    static load(deserializer) {\n        const value = deserializer.deserializeBool();\n        return new TransactionArgumentBool(value);\n    }\n}\nclass Transaction {\n    getHashSalt() {\n        const hash = js_sha3__WEBPACK_IMPORTED_MODULE_0__.sha3_256.create();\n        hash.update(Buffer.from(\"APTOS::Transaction\"));\n        return new Uint8Array(hash.arrayBuffer());\n    }\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return UserTransaction.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for Transaction: ${index}`);\n        }\n    }\n}\nclass UserTransaction extends Transaction {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    hash() {\n        const hash = js_sha3__WEBPACK_IMPORTED_MODULE_0__.sha3_256.create();\n        hash.update(this.getHashSalt());\n        hash.update((0,_bcs__WEBPACK_IMPORTED_MODULE_2__.bcsToBytes)(this));\n        return new Uint8Array(hash.arrayBuffer());\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(0);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        return new UserTransaction(SignedTransaction.deserialize(deserializer));\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/transaction.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/aptos_types/type_tag.ts":
/*!******************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/aptos_types/type_tag.ts ***!
  \******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StructTag\": () => (/* binding */ StructTag),\n/* harmony export */   \"TypeTag\": () => (/* binding */ TypeTag),\n/* harmony export */   \"TypeTagAddress\": () => (/* binding */ TypeTagAddress),\n/* harmony export */   \"TypeTagBool\": () => (/* binding */ TypeTagBool),\n/* harmony export */   \"TypeTagSigner\": () => (/* binding */ TypeTagSigner),\n/* harmony export */   \"TypeTagStruct\": () => (/* binding */ TypeTagStruct),\n/* harmony export */   \"TypeTagU128\": () => (/* binding */ TypeTagU128),\n/* harmony export */   \"TypeTagU64\": () => (/* binding */ TypeTagU64),\n/* harmony export */   \"TypeTagU8\": () => (/* binding */ TypeTagU8),\n/* harmony export */   \"TypeTagVector\": () => (/* binding */ TypeTagVector)\n/* harmony export */ });\n/* harmony import */ var _bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bcs */ \"./ohio-sdk/sdk/transaction_builder/bcs/index.ts\");\n/* harmony import */ var _account_address__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./account_address */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/account_address.ts\");\n/* harmony import */ var _identifier__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identifier */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/identifier.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_bcs__WEBPACK_IMPORTED_MODULE_0__]);\n_bcs__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* eslint-disable @typescript-eslint/no-unused-vars */ /* eslint-disable class-methods-use-this */ \n\n\nclass TypeTag {\n    static deserialize(deserializer) {\n        const index = deserializer.deserializeUleb128AsU32();\n        switch(index){\n            case 0:\n                return TypeTagBool.load(deserializer);\n            case 1:\n                return TypeTagU8.load(deserializer);\n            case 2:\n                return TypeTagU64.load(deserializer);\n            case 3:\n                return TypeTagU128.load(deserializer);\n            case 4:\n                return TypeTagAddress.load(deserializer);\n            case 5:\n                return TypeTagSigner.load(deserializer);\n            case 6:\n                return TypeTagVector.load(deserializer);\n            case 7:\n                return TypeTagStruct.load(deserializer);\n            default:\n                throw new Error(`Unknown variant index for TypeTag: ${index}`);\n        }\n    }\n}\nclass TypeTagBool extends TypeTag {\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(0);\n    }\n    static load(deserializer) {\n        return new TypeTagBool();\n    }\n}\nclass TypeTagU8 extends TypeTag {\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(1);\n    }\n    static load(_deserializer) {\n        return new TypeTagU8();\n    }\n}\nclass TypeTagU64 extends TypeTag {\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(2);\n    }\n    static load(_deserializer) {\n        return new TypeTagU64();\n    }\n}\nclass TypeTagU128 extends TypeTag {\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(3);\n    }\n    static load(_deserializer) {\n        return new TypeTagU128();\n    }\n}\nclass TypeTagAddress extends TypeTag {\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(4);\n    }\n    static load(_deserializer) {\n        return new TypeTagAddress();\n    }\n}\nclass TypeTagSigner extends TypeTag {\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(5);\n    }\n    static load(_deserializer) {\n        return new TypeTagSigner();\n    }\n}\nclass TypeTagVector extends TypeTag {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(6);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = TypeTag.deserialize(deserializer);\n        return new TypeTagVector(value);\n    }\n}\nclass TypeTagStruct extends TypeTag {\n    constructor(value){\n        super();\n        this.value = value;\n    }\n    serialize(serializer) {\n        serializer.serializeU32AsUleb128(7);\n        this.value.serialize(serializer);\n    }\n    static load(deserializer) {\n        const value = StructTag.deserialize(deserializer);\n        return new TypeTagStruct(value);\n    }\n}\nclass StructTag {\n    constructor(address, module_name, name, type_args){\n        this.address = address;\n        this.module_name = module_name;\n        this.name = name;\n        this.type_args = type_args;\n    }\n    /**\n   * Converts a string literal to a StructTag\n   * @param structTag String literal in format \"AcountAddress::module_name::ResourceName\",\n   *   e.g. \"0x1::aptos_coin::AptosCoin\"\n   * @returns\n   */ static fromString(structTag) {\n        // Type args are not supported in string literal\n        if (structTag.includes(\"<\")) {\n            throw new Error(\"Not implemented\");\n        }\n        const parts = structTag.split(\"::\");\n        if (parts.length !== 3) {\n            throw new Error(\"Invalid struct tag string literal.\");\n        }\n        return new StructTag(_account_address__WEBPACK_IMPORTED_MODULE_1__.AccountAddress.fromHex(parts[0]), new _identifier__WEBPACK_IMPORTED_MODULE_2__.Identifier(parts[1]), new _identifier__WEBPACK_IMPORTED_MODULE_2__.Identifier(parts[2]), []);\n    }\n    serialize(serializer) {\n        this.address.serialize(serializer);\n        this.module_name.serialize(serializer);\n        this.name.serialize(serializer);\n        (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.serializeVector)(this.type_args, serializer);\n    }\n    static deserialize(deserializer) {\n        const address = _account_address__WEBPACK_IMPORTED_MODULE_1__.AccountAddress.deserialize(deserializer);\n        const moduleName = _identifier__WEBPACK_IMPORTED_MODULE_2__.Identifier.deserialize(deserializer);\n        const name = _identifier__WEBPACK_IMPORTED_MODULE_2__.Identifier.deserialize(deserializer);\n        const typeArgs = (0,_bcs__WEBPACK_IMPORTED_MODULE_0__.deserializeVector)(deserializer, TypeTag);\n        return new StructTag(address, moduleName, name, typeArgs);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/aptos_types/type_tag.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/bcs/consts.ts":
/*!********************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/bcs/consts.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MAX_U128_BIG_INT\": () => (/* binding */ MAX_U128_BIG_INT),\n/* harmony export */   \"MAX_U16_NUMBER\": () => (/* binding */ MAX_U16_NUMBER),\n/* harmony export */   \"MAX_U32_NUMBER\": () => (/* binding */ MAX_U32_NUMBER),\n/* harmony export */   \"MAX_U64_BIG_INT\": () => (/* binding */ MAX_U64_BIG_INT),\n/* harmony export */   \"MAX_U8_NUMBER\": () => (/* binding */ MAX_U8_NUMBER)\n/* harmony export */ });\n// Upper bound values for uint8, uint16, uint64 and uint128\nconst MAX_U8_NUMBER = 2 ** 8 - 1;\nconst MAX_U16_NUMBER = 2 ** 16 - 1;\nconst MAX_U32_NUMBER = 2 ** 32 - 1;\n// @ts-ignore\nconst MAX_U64_BIG_INT = BigInt(2 ** 64) - 1n;\n// @ts-ignore\nconst MAX_U128_BIG_INT = BigInt(2 ** 128) - 1n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9iY3MvY29uc3RzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUEsMkRBQTJEO0FBQ3BELE1BQU1BLGFBQWEsR0FBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN4QyxNQUFNQyxjQUFjLEdBQVcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDM0MsTUFBTUMsY0FBYyxHQUFXLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ2xELGFBQWE7QUFDTixNQUFNQyxlQUFlLEdBQVdDLE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBQzVELGFBQWE7QUFDTixNQUFNQyxnQkFBZ0IsR0FBWUQsTUFBTSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9iY3MvY29uc3RzLnRzPzI1NTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVWludDEyOCwgVWludDE2LCBVaW50MzIsIFVpbnQ2NCwgVWludDggfSBmcm9tIFwiLi90eXBlc1wiO1xuXG4vLyBVcHBlciBib3VuZCB2YWx1ZXMgZm9yIHVpbnQ4LCB1aW50MTYsIHVpbnQ2NCBhbmQgdWludDEyOFxuZXhwb3J0IGNvbnN0IE1BWF9VOF9OVU1CRVI6IFVpbnQ4ID0gMiAqKiA4IC0gMTtcbmV4cG9ydCBjb25zdCBNQVhfVTE2X05VTUJFUjogVWludDE2ID0gMiAqKiAxNiAtIDE7XG5leHBvcnQgY29uc3QgTUFYX1UzMl9OVU1CRVI6IFVpbnQzMiA9IDIgKiogMzIgLSAxO1xuLy8gQHRzLWlnbm9yZVxuZXhwb3J0IGNvbnN0IE1BWF9VNjRfQklHX0lOVDogVWludDY0ID0gQmlnSW50KDIgKiogNjQpIC0gMW47XG4vLyBAdHMtaWdub3JlXG5leHBvcnQgY29uc3QgTUFYX1UxMjhfQklHX0lOVDogVWludDEyOCA9IEJpZ0ludCgyICoqIDEyOCkgLSAxbjtcbiJdLCJuYW1lcyI6WyJNQVhfVThfTlVNQkVSIiwiTUFYX1UxNl9OVU1CRVIiLCJNQVhfVTMyX05VTUJFUiIsIk1BWF9VNjRfQklHX0lOVCIsIkJpZ0ludCIsIk1BWF9VMTI4X0JJR19JTlQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/bcs/consts.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/bcs/deserializer.ts":
/*!**************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/bcs/deserializer.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Deserializer\": () => (/* binding */ Deserializer)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./ohio-sdk/sdk/transaction_builder/bcs/consts.ts\");\n/* eslint-disable no-bitwise */ \nclass Deserializer {\n    constructor(data){\n        // copies data to prevent outside mutation of buffer.\n        this.buffer = new ArrayBuffer(data.length);\n        new Uint8Array(this.buffer).set(data, 0);\n        this.offset = 0;\n    }\n    read(length) {\n        if (this.offset + length > this.buffer.byteLength) {\n            throw new Error(\"Reached to the end of buffer\");\n        }\n        const bytes = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return bytes;\n    }\n    /**\n   * Deserializes a string. UTF8 string is supported. Reads the string's bytes length \"l\" first,\n   * and then reads \"l\" bytes of content. Decodes the byte array into a string.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * assert(deserializer.deserializeStr() === \"çå∞≠¢õß∂ƒ∫\");\n   * ```\n   */ deserializeStr() {\n        const value = this.deserializeBytes();\n        const textDecoder = new TextDecoder();\n        return textDecoder.decode(value);\n    }\n    /**\n   * Deserializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */ deserializeBytes() {\n        const len = this.deserializeUleb128AsU32();\n        return new Uint8Array(this.read(len));\n    }\n    /**\n   * Deserializes an array of bytes. The number of bytes to read is already known.\n   *\n   */ deserializeFixedBytes(len) {\n        return new Uint8Array(this.read(len));\n    }\n    /**\n   * Deserializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */ deserializeBool() {\n        const bool = new Uint8Array(this.read(1))[0];\n        if (bool !== 1 && bool !== 0) {\n            throw new Error(\"Invalid boolean value\");\n        }\n        return bool === 1;\n    }\n    /**\n   * Deserializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */ deserializeU8() {\n        return new DataView(this.read(1)).getUint8(0);\n    }\n    /**\n   * Deserializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x34, 0x12]));\n   * assert(deserializer.deserializeU16() === 4660);\n   * ```\n   */ deserializeU16() {\n        return new DataView(this.read(2)).getUint16(0, true);\n    }\n    /**\n   * Deserializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU32() === 305419896);\n   * ```\n   */ deserializeU32() {\n        return new DataView(this.read(4)).getUint32(0, true);\n    }\n    /**\n   * Deserializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const deserializer = new Deserializer(new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * assert(deserializer.deserializeU64() === 1311768467750121216);\n   * ```\n   */ deserializeU64() {\n        const low = this.deserializeU32();\n        const high = this.deserializeU32();\n        // combine the two 32-bit values and return (little endian)\n        return BigInt(BigInt(high) << BigInt(32) | BigInt(low));\n    }\n    /**\n   * Deserializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */ deserializeU128() {\n        const low = this.deserializeU64();\n        const high = this.deserializeU64();\n        // combine the two 64-bit values and return (little endian)\n        return BigInt(high << BigInt(64) | low);\n    }\n    /**\n   * Deserializes a uleb128 encoded uint32 number.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */ deserializeUleb128AsU32() {\n        // @ts-ignore\n        let value = 0n;\n        let shift = 0;\n        while(value < _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U32_NUMBER){\n            const byte = this.deserializeU8();\n            value |= BigInt(byte & 0x7f) << BigInt(shift);\n            if ((byte & 0x80) === 0) {\n                break;\n            }\n            shift += 7;\n        }\n        if (value > _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U32_NUMBER) {\n            throw new Error(\"Overflow while parsing uleb128-encoded uint32 value\");\n        }\n        return Number(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/bcs/deserializer.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/bcs/helper.ts":
/*!********************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/bcs/helper.ts ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bcsSerializeBool\": () => (/* binding */ bcsSerializeBool),\n/* harmony export */   \"bcsSerializeBytes\": () => (/* binding */ bcsSerializeBytes),\n/* harmony export */   \"bcsSerializeFixedBytes\": () => (/* binding */ bcsSerializeFixedBytes),\n/* harmony export */   \"bcsSerializeStr\": () => (/* binding */ bcsSerializeStr),\n/* harmony export */   \"bcsSerializeU128\": () => (/* binding */ bcsSerializeU128),\n/* harmony export */   \"bcsSerializeU16\": () => (/* binding */ bcsSerializeU16),\n/* harmony export */   \"bcsSerializeU32\": () => (/* binding */ bcsSerializeU32),\n/* harmony export */   \"bcsSerializeU8\": () => (/* binding */ bcsSerializeU8),\n/* harmony export */   \"bcsSerializeUint64\": () => (/* binding */ bcsSerializeUint64),\n/* harmony export */   \"bcsToBytes\": () => (/* binding */ bcsToBytes),\n/* harmony export */   \"deserializeVector\": () => (/* binding */ deserializeVector),\n/* harmony export */   \"serializeVector\": () => (/* binding */ serializeVector)\n/* harmony export */ });\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer */ \"./ohio-sdk/sdk/transaction_builder/bcs/serializer.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_serializer__WEBPACK_IMPORTED_MODULE_0__]);\n_serializer__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n/**\n * Serializes a vector values that are \"Serializable\".\n */ function serializeVector(value, serializer) {\n    serializer.serializeU32AsUleb128(value.length);\n    value.forEach((item)=>{\n        item.serialize(serializer);\n    });\n}\n/**\n * Deserializes a vector of values.\n */ function deserializeVector(deserializer, cls) {\n    const length = deserializer.deserializeUleb128AsU32();\n    const list = [];\n    for(let i = 0; i < length; i += 1){\n        list.push(cls.deserialize(deserializer));\n    }\n    return list;\n}\nfunction bcsToBytes(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    value.serialize(serializer);\n    return serializer.getBytes();\n}\nfunction bcsSerializeUint64(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeU64(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeU8(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeU8(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeU16(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeU16(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeU32(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeU32(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeU128(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeU128(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeBool(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeBool(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeStr(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeStr(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeBytes(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeBytes(value);\n    return serializer.getBytes();\n}\nfunction bcsSerializeFixedBytes(value) {\n    const serializer = new _serializer__WEBPACK_IMPORTED_MODULE_0__.Serializer();\n    serializer.serializeFixedBytes(value);\n    return serializer.getBytes();\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9iY3MvaGVscGVyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDMEM7QUFPMUM7O0NBRUMsR0FDTSxTQUFTQyxlQUFlLENBQXlCQyxLQUFhLEVBQUVDLFVBQXNCLEVBQVE7SUFDbkdBLFVBQVUsQ0FBQ0MscUJBQXFCLENBQUNGLEtBQUssQ0FBQ0csTUFBTSxDQUFDLENBQUM7SUFDL0NILEtBQUssQ0FBQ0ksT0FBTyxDQUFDLENBQUNDLElBQU8sR0FBSztRQUN6QkEsSUFBSSxDQUFDQyxTQUFTLENBQUNMLFVBQVUsQ0FBQyxDQUFDO0tBQzVCLENBQUMsQ0FBQztDQUNKO0FBRUQ7O0NBRUMsR0FDTSxTQUFTTSxpQkFBaUIsQ0FBQ0MsWUFBMEIsRUFBRUMsR0FBUSxFQUFTO0lBQzdFLE1BQU1OLE1BQU0sR0FBR0ssWUFBWSxDQUFDRSx1QkFBdUIsRUFBRTtJQUNyRCxNQUFNQyxJQUFJLEdBQW9CLEVBQUU7SUFDaEMsSUFBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdULE1BQU0sRUFBRVMsQ0FBQyxJQUFJLENBQUMsQ0FBRTtRQUNsQ0QsSUFBSSxDQUFDRSxJQUFJLENBQUNKLEdBQUcsQ0FBQ0ssV0FBVyxDQUFDTixZQUFZLENBQUMsQ0FBQyxDQUFDO0tBQzFDO0lBQ0QsT0FBT0csSUFBSSxDQUFDO0NBQ2I7QUFFTSxTQUFTSSxVQUFVLENBQXlCZixLQUFRLEVBQVM7SUFDbEUsTUFBTUMsVUFBVSxHQUFHLElBQUlILG1EQUFVLEVBQUU7SUFDbkNFLEtBQUssQ0FBQ00sU0FBUyxDQUFDTCxVQUFVLENBQUMsQ0FBQztJQUM1QixPQUFPQSxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCO0FBRU0sU0FBU0Msa0JBQWtCLENBQUNqQixLQUFnQixFQUFTO0lBQzFELE1BQU1DLFVBQVUsR0FBRyxJQUFJSCxtREFBVSxFQUFFO0lBQ25DRyxVQUFVLENBQUNpQixZQUFZLENBQUNsQixLQUFLLENBQUMsQ0FBQztJQUMvQixPQUFPQyxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCO0FBRU0sU0FBU0csY0FBYyxDQUFDbkIsS0FBWSxFQUFTO0lBQ2xELE1BQU1DLFVBQVUsR0FBRyxJQUFJSCxtREFBVSxFQUFFO0lBQ25DRyxVQUFVLENBQUNtQixXQUFXLENBQUNwQixLQUFLLENBQUMsQ0FBQztJQUM5QixPQUFPQyxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCO0FBRU0sU0FBU0ssZUFBZSxDQUFDckIsS0FBYSxFQUFTO0lBQ3BELE1BQU1DLFVBQVUsR0FBRyxJQUFJSCxtREFBVSxFQUFFO0lBQ25DRyxVQUFVLENBQUNxQixZQUFZLENBQUN0QixLQUFLLENBQUMsQ0FBQztJQUMvQixPQUFPQyxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCO0FBRU0sU0FBU08sZUFBZSxDQUFDdkIsS0FBYSxFQUFTO0lBQ3BELE1BQU1DLFVBQVUsR0FBRyxJQUFJSCxtREFBVSxFQUFFO0lBQ25DRyxVQUFVLENBQUN1QixZQUFZLENBQUN4QixLQUFLLENBQUMsQ0FBQztJQUMvQixPQUFPQyxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCO0FBRU0sU0FBU1MsZ0JBQWdCLENBQUN6QixLQUFnQixFQUFTO0lBQ3hELE1BQU1DLFVBQVUsR0FBRyxJQUFJSCxtREFBVSxFQUFFO0lBQ25DRyxVQUFVLENBQUN5QixhQUFhLENBQUMxQixLQUFLLENBQUMsQ0FBQztJQUNoQyxPQUFPQyxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCO0FBRU0sU0FBU1csZ0JBQWdCLENBQUMzQixLQUFjLEVBQVM7SUFDdEQsTUFBTUMsVUFBVSxHQUFHLElBQUlILG1EQUFVLEVBQUU7SUFDbkNHLFVBQVUsQ0FBQzJCLGFBQWEsQ0FBQzVCLEtBQUssQ0FBQyxDQUFDO0lBQ2hDLE9BQU9DLFVBQVUsQ0FBQ2UsUUFBUSxFQUFFLENBQUM7Q0FDOUI7QUFFTSxTQUFTYSxlQUFlLENBQUM3QixLQUFhLEVBQVM7SUFDcEQsTUFBTUMsVUFBVSxHQUFHLElBQUlILG1EQUFVLEVBQUU7SUFDbkNHLFVBQVUsQ0FBQzZCLFlBQVksQ0FBQzlCLEtBQUssQ0FBQyxDQUFDO0lBQy9CLE9BQU9DLFVBQVUsQ0FBQ2UsUUFBUSxFQUFFLENBQUM7Q0FDOUI7QUFFTSxTQUFTZSxpQkFBaUIsQ0FBQy9CLEtBQVksRUFBUztJQUNyRCxNQUFNQyxVQUFVLEdBQUcsSUFBSUgsbURBQVUsRUFBRTtJQUNuQ0csVUFBVSxDQUFDK0IsY0FBYyxDQUFDaEMsS0FBSyxDQUFDLENBQUM7SUFDakMsT0FBT0MsVUFBVSxDQUFDZSxRQUFRLEVBQUUsQ0FBQztDQUM5QjtBQUVNLFNBQVNpQixzQkFBc0IsQ0FBQ2pDLEtBQVksRUFBUztJQUMxRCxNQUFNQyxVQUFVLEdBQUcsSUFBSUgsbURBQVUsRUFBRTtJQUNuQ0csVUFBVSxDQUFDaUMsbUJBQW1CLENBQUNsQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxPQUFPQyxVQUFVLENBQUNlLFFBQVEsRUFBRSxDQUFDO0NBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvc2RrL3RyYW5zYWN0aW9uX2J1aWxkZXIvYmNzL2hlbHBlci50cz85ODdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlc2VyaWFsaXplciB9IGZyb20gXCIuL2Rlc2VyaWFsaXplclwiO1xuaW1wb3J0IHsgU2VyaWFsaXplciB9IGZyb20gXCIuL3NlcmlhbGl6ZXJcIjtcbmltcG9ydCB7IEFueU51bWJlciwgQnl0ZXMsIFNlcSwgVWludDE2LCBVaW50MzIsIFVpbnQ4IH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuaW50ZXJmYWNlIFNlcmlhbGl6YWJsZSB7XG4gIHNlcmlhbGl6ZShzZXJpYWxpemVyOiBTZXJpYWxpemVyKTogdm9pZDtcbn1cblxuLyoqXG4gKiBTZXJpYWxpemVzIGEgdmVjdG9yIHZhbHVlcyB0aGF0IGFyZSBcIlNlcmlhbGl6YWJsZVwiLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplVmVjdG9yPFQgZXh0ZW5kcyBTZXJpYWxpemFibGU+KHZhbHVlOiBTZXE8VD4sIHNlcmlhbGl6ZXI6IFNlcmlhbGl6ZXIpOiB2b2lkIHtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVMzJBc1VsZWIxMjgodmFsdWUubGVuZ3RoKTtcbiAgdmFsdWUuZm9yRWFjaCgoaXRlbTogVCkgPT4ge1xuICAgIGl0ZW0uc2VyaWFsaXplKHNlcmlhbGl6ZXIpO1xuICB9KTtcbn1cblxuLyoqXG4gKiBEZXNlcmlhbGl6ZXMgYSB2ZWN0b3Igb2YgdmFsdWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVzZXJpYWxpemVWZWN0b3IoZGVzZXJpYWxpemVyOiBEZXNlcmlhbGl6ZXIsIGNsczogYW55KTogYW55W10ge1xuICBjb25zdCBsZW5ndGggPSBkZXNlcmlhbGl6ZXIuZGVzZXJpYWxpemVVbGViMTI4QXNVMzIoKTtcbiAgY29uc3QgbGlzdDogU2VxPHR5cGVvZiBjbHM+ID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcbiAgICBsaXN0LnB1c2goY2xzLmRlc2VyaWFsaXplKGRlc2VyaWFsaXplcikpO1xuICB9XG4gIHJldHVybiBsaXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmNzVG9CeXRlczxUIGV4dGVuZHMgU2VyaWFsaXphYmxlPih2YWx1ZTogVCk6IEJ5dGVzIHtcbiAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gIHZhbHVlLnNlcmlhbGl6ZShzZXJpYWxpemVyKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJjc1NlcmlhbGl6ZVVpbnQ2NCh2YWx1ZTogQW55TnVtYmVyKTogQnl0ZXMge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVNjQodmFsdWUpO1xuICByZXR1cm4gc2VyaWFsaXplci5nZXRCeXRlcygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmNzU2VyaWFsaXplVTgodmFsdWU6IFVpbnQ4KTogQnl0ZXMge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVOCh2YWx1ZSk7XG4gIHJldHVybiBzZXJpYWxpemVyLmdldEJ5dGVzKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBiY3NTZXJpYWxpemVVMTYodmFsdWU6IFVpbnQxNik6IEJ5dGVzIHtcbiAgY29uc3Qgc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTE2KHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJjc1NlcmlhbGl6ZVUzMih2YWx1ZTogVWludDMyKTogQnl0ZXMge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVMzIodmFsdWUpO1xuICByZXR1cm4gc2VyaWFsaXplci5nZXRCeXRlcygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmNzU2VyaWFsaXplVTEyOCh2YWx1ZTogQW55TnVtYmVyKTogQnl0ZXMge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVVMTI4KHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJjc1NlcmlhbGl6ZUJvb2wodmFsdWU6IGJvb2xlYW4pOiBCeXRlcyB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJvb2wodmFsdWUpO1xuICByZXR1cm4gc2VyaWFsaXplci5nZXRCeXRlcygpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmNzU2VyaWFsaXplU3RyKHZhbHVlOiBzdHJpbmcpOiBCeXRlcyB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZVN0cih2YWx1ZSk7XG4gIHJldHVybiBzZXJpYWxpemVyLmdldEJ5dGVzKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBiY3NTZXJpYWxpemVCeXRlcyh2YWx1ZTogQnl0ZXMpOiBCeXRlcyB7XG4gIGNvbnN0IHNlcmlhbGl6ZXIgPSBuZXcgU2VyaWFsaXplcigpO1xuICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJ5dGVzKHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJjc1NlcmlhbGl6ZUZpeGVkQnl0ZXModmFsdWU6IEJ5dGVzKTogQnl0ZXMge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IFNlcmlhbGl6ZXIoKTtcbiAgc2VyaWFsaXplci5zZXJpYWxpemVGaXhlZEJ5dGVzKHZhbHVlKTtcbiAgcmV0dXJuIHNlcmlhbGl6ZXIuZ2V0Qnl0ZXMoKTtcbn1cbiJdLCJuYW1lcyI6WyJTZXJpYWxpemVyIiwic2VyaWFsaXplVmVjdG9yIiwidmFsdWUiLCJzZXJpYWxpemVyIiwic2VyaWFsaXplVTMyQXNVbGViMTI4IiwibGVuZ3RoIiwiZm9yRWFjaCIsIml0ZW0iLCJzZXJpYWxpemUiLCJkZXNlcmlhbGl6ZVZlY3RvciIsImRlc2VyaWFsaXplciIsImNscyIsImRlc2VyaWFsaXplVWxlYjEyOEFzVTMyIiwibGlzdCIsImkiLCJwdXNoIiwiZGVzZXJpYWxpemUiLCJiY3NUb0J5dGVzIiwiZ2V0Qnl0ZXMiLCJiY3NTZXJpYWxpemVVaW50NjQiLCJzZXJpYWxpemVVNjQiLCJiY3NTZXJpYWxpemVVOCIsInNlcmlhbGl6ZVU4IiwiYmNzU2VyaWFsaXplVTE2Iiwic2VyaWFsaXplVTE2IiwiYmNzU2VyaWFsaXplVTMyIiwic2VyaWFsaXplVTMyIiwiYmNzU2VyaWFsaXplVTEyOCIsInNlcmlhbGl6ZVUxMjgiLCJiY3NTZXJpYWxpemVCb29sIiwic2VyaWFsaXplQm9vbCIsImJjc1NlcmlhbGl6ZVN0ciIsInNlcmlhbGl6ZVN0ciIsImJjc1NlcmlhbGl6ZUJ5dGVzIiwic2VyaWFsaXplQnl0ZXMiLCJiY3NTZXJpYWxpemVGaXhlZEJ5dGVzIiwic2VyaWFsaXplRml4ZWRCeXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/bcs/helper.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/bcs/index.ts":
/*!*******************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/bcs/index.ts ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"./ohio-sdk/sdk/transaction_builder/bcs/types.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializer */ \"./ohio-sdk/sdk/transaction_builder/bcs/serializer.ts\");\n/* harmony import */ var _deserializer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./deserializer */ \"./ohio-sdk/sdk/transaction_builder/bcs/deserializer.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _deserializer__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _deserializer__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./helper */ \"./ohio-sdk/sdk/transaction_builder/bcs/helper.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_serializer__WEBPACK_IMPORTED_MODULE_1__, _helper__WEBPACK_IMPORTED_MODULE_3__]);\n([_serializer__WEBPACK_IMPORTED_MODULE_1__, _helper__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _serializer__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _serializer__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _helper__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _helper__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9iY3MvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0I7QUFDSztBQUNFO0FBQ04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9iY3MvaW5kZXgudHM/YTg2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi90eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VyaWFsaXplclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vZGVzZXJpYWxpemVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9oZWxwZXJcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/bcs/index.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/bcs/serializer.ts":
/*!************************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/bcs/serializer.ts ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Serializer\": () => (/* binding */ Serializer)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/src/_ts_decorate.mjs */ \"./node_modules/@swc/helpers/src/_ts_decorate.mjs\");\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./ohio-sdk/sdk/transaction_builder/bcs/consts.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__]);\n_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* eslint-disable no-bitwise */ \n\nclass Serializer {\n    constructor(){\n        this.buffer = new ArrayBuffer(64);\n        this.offset = 0;\n    }\n    ensureBufferWillHandleSize(bytes) {\n        while(this.buffer.byteLength < this.offset + bytes){\n            const newBuffer = new ArrayBuffer(this.buffer.byteLength * 2);\n            new Uint8Array(newBuffer).set(new Uint8Array(this.buffer));\n            this.buffer = newBuffer;\n        }\n    }\n    serialize(values) {\n        this.ensureBufferWillHandleSize(values.length);\n        new Uint8Array(this.buffer, this.offset).set(values);\n        this.offset += values.length;\n    }\n    serializeWithFunction(fn, bytesLength, value) {\n        this.ensureBufferWillHandleSize(bytesLength);\n        const dv = new DataView(this.buffer, this.offset);\n        fn.apply(dv, [\n            0,\n            value,\n            true\n        ]);\n        this.offset += bytesLength;\n    }\n    /**\n   * Serializes a string. UTF8 string is supported. Serializes the string's bytes length \"l\" first,\n   * and then serializes \"l\" bytes of the string content.\n   *\n   * BCS layout for \"string\": string_length | string_content. string_length is the bytes length of\n   * the string that is uleb128 encoded. string_length is a u32 integer.\n   *\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeStr(\"çå∞≠¢õß∂ƒ∫\");\n   * assert(serializer.getBytes() === new Uint8Array([24, 0xc3, 0xa7, 0xc3, 0xa5, 0xe2, 0x88, 0x9e,\n   * 0xe2, 0x89, 0xa0, 0xc2, 0xa2, 0xc3, 0xb5, 0xc3, 0x9f, 0xe2, 0x88, 0x82, 0xc6, 0x92, 0xe2, 0x88, 0xab]));\n   * ```\n   */ serializeStr(value) {\n        const textEncoder = new TextEncoder();\n        this.serializeBytes(textEncoder.encode(value));\n    }\n    /**\n   * Serializes an array of bytes.\n   *\n   * BCS layout for \"bytes\": bytes_length | bytes. bytes_length is the length of the bytes array that is\n   * uleb128 encoded. bytes_length is a u32 integer.\n   */ serializeBytes(value) {\n        this.serializeU32AsUleb128(value.length);\n        this.serialize(value);\n    }\n    /**\n   * Serializes an array of bytes with known length. Therefore length doesn't need to be\n   * serialized to help deserialization.  When deserializing, the number of\n   * bytes to deserialize needs to be passed in.\n   */ serializeFixedBytes(value) {\n        this.serialize(value);\n    }\n    /**\n   * Serializes a boolean value.\n   *\n   * BCS layout for \"boolean\": One byte. \"0x01\" for True and \"0x00\" for False.\n   */ serializeBool(value) {\n        if (typeof value !== \"boolean\") {\n            throw new Error(\"Value needs to be a boolean\");\n        }\n        const byteValue = value ? 1 : 0;\n        this.serialize(new Uint8Array([\n            byteValue\n        ]));\n    }\n    /**\n   * Serializes a uint8 number.\n   *\n   * BCS layout for \"uint8\": One byte. Binary format in little-endian representation.\n   */ serializeU8(value) {\n        this.serialize(new Uint8Array([\n            value\n        ]));\n    }\n    /**\n   * Serializes a uint16 number.\n   *\n   * BCS layout for \"uint16\": Two bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU16(4660);\n   * assert(serializer.getBytes() === new Uint8Array([0x34, 0x12]));\n   * ```\n   */ serializeU16(value) {\n        this.serializeWithFunction(DataView.prototype.setUint16, 2, value);\n    }\n    /**\n   * Serializes a uint32 number.\n   *\n   * BCS layout for \"uint32\": Four bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU32(305419896);\n   * assert(serializer.getBytes() === new Uint8Array([0x78, 0x56, 0x34, 0x12]));\n   * ```\n   */ serializeU32(value) {\n        this.serializeWithFunction(DataView.prototype.setUint32, 4, value);\n    }\n    /**\n   * Serializes a uint64 number.\n   *\n   * BCS layout for \"uint64\": Eight bytes. Binary format in little-endian representation.\n   * @example\n   * ```ts\n   * const serializer = new Serializer();\n   * serializer.serializeU64(1311768467750121216);\n   * assert(serializer.getBytes() === new Uint8Array([0x00, 0xEF, 0xCD, 0xAB, 0x78, 0x56, 0x34, 0x12]));\n   * ```\n   */ // @ts-ignore\n    serializeU64(value) {\n        const low = BigInt(value.toString()) & BigInt(_consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U32_NUMBER);\n        const high = BigInt(value.toString()) >> BigInt(32);\n        // write little endian number\n        this.serializeU32(Number(low));\n        this.serializeU32(Number(high));\n    }\n    /**\n   * Serializes a uint128 number.\n   *\n   * BCS layout for \"uint128\": Sixteen bytes. Binary format in little-endian representation.\n   */ // @ts-ignore\n    serializeU128(value) {\n        const low = BigInt(value.toString()) & _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U64_BIG_INT;\n        const high = BigInt(value.toString()) >> BigInt(64);\n        // write little endian number\n        this.serializeU64(low);\n        this.serializeU64(high);\n    }\n    /**\n   * Serializes a uint32 number with uleb128.\n   *\n   * BCS use uleb128 encoding in two cases: (1) lengths of variable-length sequences and (2) tags of enum values\n   */ serializeU32AsUleb128(val) {\n        let value = val;\n        const valueArray = [];\n        while(value >>> 7 !== 0){\n            valueArray.push(value & 0x7f | 0x80);\n            value >>>= 7;\n        }\n        valueArray.push(value);\n        this.serialize(new Uint8Array(valueArray));\n    }\n    /**\n   * Returns the buffered bytes\n   */ getBytes() {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    }\n}\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n    checkNumberRange(0, _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U8_NUMBER)\n], Serializer.prototype, \"serializeU8\", null);\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n    checkNumberRange(0, _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U16_NUMBER)\n], Serializer.prototype, \"serializeU16\", null);\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n    checkNumberRange(0, _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U32_NUMBER)\n], Serializer.prototype, \"serializeU32\", null);\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n    checkNumberRange(0n, _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U64_BIG_INT)\n], Serializer.prototype, \"serializeU64\", null);\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n    checkNumberRange(0n, _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U128_BIG_INT)\n], Serializer.prototype, \"serializeU128\", null);\n(0,_swc_helpers_src_ts_decorate_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([\n    checkNumberRange(0, _consts__WEBPACK_IMPORTED_MODULE_0__.MAX_U32_NUMBER)\n], Serializer.prototype, \"serializeU32AsUleb128\", null);\n/**\n * Creates a decorator to make sure the arg value of the decorated function is within a range.\n * @param minValue The arg value of decorated function must >= minValue\n * @param maxValue The arg value of decorated function must <= maxValue\n * @param message Error message\n */ function checkNumberRange(minValue, maxValue, message) {\n    return (target, propertyKey, descriptor)=>{\n        const childFunction = descriptor.value;\n        // eslint-disable-next-line no-param-reassign\n        descriptor.value = function deco(value) {\n            const valueBigInt = BigInt(value.toString());\n            if (valueBigInt > BigInt(maxValue.toString()) || valueBigInt < BigInt(minValue.toString())) {\n                throw new Error(message || \"Value is out of range\");\n            }\n            childFunction.apply(this, [\n                value\n            ]);\n        };\n        return descriptor;\n    };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/bcs/serializer.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/bcs/types.ts":
/*!*******************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/bcs/types.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9iY3MvdHlwZXMudHMuanMiLCJtYXBwaW5ncyI6IjtBQVErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL3Nkay90cmFuc2FjdGlvbl9idWlsZGVyL2Jjcy90eXBlcy50cz9lMTMwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIFNlcTxUPiA9IFRbXTtcblxuZXhwb3J0IHR5cGUgVWludDggPSBudW1iZXI7XG5leHBvcnQgdHlwZSBVaW50MTYgPSBudW1iZXI7XG5leHBvcnQgdHlwZSBVaW50MzIgPSBudW1iZXI7XG5leHBvcnQgdHlwZSBVaW50NjQgPSBiaWdpbnQ7XG5leHBvcnQgdHlwZSBVaW50MTI4ID0gYmlnaW50O1xuZXhwb3J0IHR5cGUgQW55TnVtYmVyID0gYmlnaW50IHwgbnVtYmVyO1xuZXhwb3J0IHR5cGUgQnl0ZXMgPSBVaW50OEFycmF5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/bcs/types.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/builder.ts":
/*!*****************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/builder.ts ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TransactionBuilder\": () => (/* binding */ TransactionBuilder),\n/* harmony export */   \"TransactionBuilderABI\": () => (/* binding */ TransactionBuilderABI),\n/* harmony export */   \"TransactionBuilderEd25519\": () => (/* binding */ TransactionBuilderEd25519),\n/* harmony export */   \"TransactionBuilderMultiEd25519\": () => (/* binding */ TransactionBuilderMultiEd25519)\n/* harmony export */ });\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-sha3 */ \"./ohio-sdk/node_modules/js-sha3/src/sha3.js\");\n/* harmony import */ var js_sha3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_sha3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var buffer___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! buffer/ */ \"./ohio-sdk/node_modules/buffer/index.js\");\n/* harmony import */ var _aptos_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aptos_types */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/index.ts\");\n/* harmony import */ var _bcs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bcs */ \"./ohio-sdk/sdk/transaction_builder/bcs/index.ts\");\n/* harmony import */ var _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./aptos_types/abi */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/abi.ts\");\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n/* harmony import */ var _builder_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./builder_utils */ \"./ohio-sdk/sdk/transaction_builder/builder_utils.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_aptos_types__WEBPACK_IMPORTED_MODULE_2__, _bcs__WEBPACK_IMPORTED_MODULE_3__, _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__, _builder_utils__WEBPACK_IMPORTED_MODULE_6__]);\n([_aptos_types__WEBPACK_IMPORTED_MODULE_2__, _bcs__WEBPACK_IMPORTED_MODULE_3__, _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__, _builder_utils__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\nconst RAW_TRANSACTION_SALT = \"APTOS::RawTransaction\";\nconst RAW_TRANSACTION_WITH_DATA_SALT = \"APTOS::RawTransactionWithData\";\nclass TransactionBuilder {\n    constructor(signingFunction, rawTxnBuilder){\n        this.rawTxnBuilder = rawTxnBuilder;\n        this.signingFunction = signingFunction;\n    }\n    /**\n   * Builds a RawTransaction. Relays the call to TransactionBuilderABI.build\n   * @param func\n   * @param ty_tags\n   * @param args\n   */ build(func, ty_tags, args) {\n        if (!this.rawTxnBuilder) {\n            throw new Error(\"this.rawTxnBuilder doesn't exist.\");\n        }\n        return this.rawTxnBuilder.build(func, ty_tags, args);\n    }\n    /** Generates a Signing Message out of a raw transaction. */ static getSigningMessage(rawTxn) {\n        const hash = js_sha3__WEBPACK_IMPORTED_MODULE_0__.sha3_256.create();\n        if (rawTxn instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_2__.RawTransaction) {\n            hash.update(buffer___WEBPACK_IMPORTED_MODULE_1__.Buffer.from(RAW_TRANSACTION_SALT));\n        } else if (rawTxn instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_2__.MultiAgentRawTransaction) {\n            hash.update(buffer___WEBPACK_IMPORTED_MODULE_1__.Buffer.from(RAW_TRANSACTION_WITH_DATA_SALT));\n        } else {\n            throw new Error(\"Unknown transaction type.\");\n        }\n        const prefix = new Uint8Array(hash.arrayBuffer());\n        // @ts-ignore\n        return buffer___WEBPACK_IMPORTED_MODULE_1__.Buffer.from([\n            ...prefix,\n            ...(0,_bcs__WEBPACK_IMPORTED_MODULE_3__.bcsToBytes)(rawTxn)\n        ]);\n    }\n}\n/**\n * Provides signing method for signing a raw transaction with single public key.\n */ class TransactionBuilderEd25519 extends TransactionBuilder {\n    constructor(signingFunction, publicKey, rawTxnBuilder){\n        super(signingFunction, rawTxnBuilder);\n        this.publicKey = publicKey;\n    }\n    rawToSigned(rawTxn) {\n        const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n        const signature = this.signingFunction(signingMessage);\n        const authenticator = new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.TransactionAuthenticatorEd25519(new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.Ed25519PublicKey(this.publicKey), signature);\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.SignedTransaction(rawTxn, authenticator);\n    }\n    /** Signs a raw transaction and returns a bcs serialized transaction. */ sign(rawTxn) {\n        return (0,_bcs__WEBPACK_IMPORTED_MODULE_3__.bcsToBytes)(this.rawToSigned(rawTxn));\n    }\n}\n/**\n * Provides signing method for signing a raw transaction with multisig public key.\n */ class TransactionBuilderMultiEd25519 extends TransactionBuilder {\n    constructor(signingFunction, publicKey){\n        super(signingFunction);\n        this.publicKey = publicKey;\n    }\n    rawToSigned(rawTxn) {\n        const signingMessage = TransactionBuilder.getSigningMessage(rawTxn);\n        const signature = this.signingFunction(signingMessage);\n        const authenticator = new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.TransactionAuthenticatorMultiEd25519(this.publicKey, signature);\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.SignedTransaction(rawTxn, authenticator);\n    }\n    /** Signs a raw transaction and returns a bcs serialized transaction. */ sign(rawTxn) {\n        return (0,_bcs__WEBPACK_IMPORTED_MODULE_3__.bcsToBytes)(this.rawToSigned(rawTxn));\n    }\n}\n/**\n * Builds raw transactions based on ABI\n */ class TransactionBuilderABI {\n    /**\n   * Constructs a TransactionBuilderABI instance\n   * @param abis List of binary ABIs.\n   * @param builderConfig Configs for creating a raw transaction.\n   */ constructor(abis, builderConfig){\n        this.abiMap = new Map();\n        abis.forEach((abi)=>{\n            const deserializer = new _bcs__WEBPACK_IMPORTED_MODULE_3__.Deserializer(abi);\n            const scriptABI = _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__.ScriptABI.deserialize(deserializer);\n            let k;\n            if (scriptABI instanceof _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__.ScriptFunctionABI) {\n                const funcABI = scriptABI;\n                const { address: addr , name: moduleName  } = funcABI.module_name;\n                k = `${_hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString.fromUint8Array(addr.address).toShortString()}::${moduleName.value}::${funcABI.name}`;\n            } else {\n                const funcABI1 = scriptABI;\n                k = funcABI1.name;\n            }\n            if (this.abiMap.has(k)) {\n                throw new Error(\"Found conflicting ABI interfaces\");\n            }\n            this.abiMap.set(k, scriptABI);\n        });\n        this.builderConfig = {\n            // @ts-ignore\n            gasUnitPrice: 1n,\n            // @ts-ignore\n            maxGasAmount: 1000n,\n            expSecFromNow: 10,\n            ...builderConfig\n        };\n    }\n    static toBCSArgs(abiArgs, args) {\n        if (abiArgs.length !== args.length) {\n            throw new Error(\"Wrong number of args provided.\");\n        }\n        return args.map((arg, i)=>{\n            const serializer = new _bcs__WEBPACK_IMPORTED_MODULE_3__.Serializer();\n            (0,_builder_utils__WEBPACK_IMPORTED_MODULE_6__.serializeArg)(arg, abiArgs[i].type_tag, serializer);\n            return serializer.getBytes();\n        });\n    }\n    static toTransactionArguments(abiArgs, args) {\n        if (abiArgs.length !== args.length) {\n            throw new Error(\"Wrong number of args provided.\");\n        }\n        return args.map((arg, i)=>(0,_builder_utils__WEBPACK_IMPORTED_MODULE_6__.argToTransactionArgument)(arg, abiArgs[i].type_tag));\n    }\n    setSequenceNumber(seqNumber) {\n        this.builderConfig.sequenceNumber = BigInt(seqNumber);\n    }\n    /**\n   * Builds a RawTransaction\n   * @param func Fully qualified func names, e.g. 0x1::Coin::transfer\n   * @param ty_tags TypeTag strings.\n   * @example Below are valid value examples\n   * ```\n   * // Structs are in format `AccountAddress::ModuleName::StructName`\n   * 0x1::aptos_coin::AptosCoin\n   * // Vectors are in format `vector<other_tag_string>`\n   * vector<0x1::aptos_coin::AptosCoin>\n   * bool\n   * u8\n   * u64\n   * u128\n   * address\n   * ```\n   * @param args Function arguments\n   * @returns RawTransaction\n   */ build(func, ty_tags, args) {\n        const { sender , sequenceNumber , gasUnitPrice , maxGasAmount , expSecFromNow , chainId  } = this.builderConfig;\n        const senderAccount = sender instanceof _hex_string__WEBPACK_IMPORTED_MODULE_5__.HexString ? _aptos_types__WEBPACK_IMPORTED_MODULE_2__.AccountAddress.fromHex(sender) : sender;\n        const typeTags = ty_tags.map((ty_arg)=>new _builder_utils__WEBPACK_IMPORTED_MODULE_6__.TypeTagParser(ty_arg).parseTypeTag());\n        const expTimetampSec = BigInt(Math.floor(Date.now() / 1000) + Number(expSecFromNow));\n        let payload;\n        if (!this.abiMap.has(func)) {\n            throw new Error(`Cannot find function: ${func}`);\n        }\n        const scriptABI = this.abiMap.get(func);\n        if (scriptABI instanceof _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__.ScriptFunctionABI) {\n            const funcABI = scriptABI;\n            const bcsArgs = TransactionBuilderABI.toBCSArgs(funcABI.args, args);\n            payload = new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.TransactionPayloadScriptFunction(new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.ScriptFunction(funcABI.module_name, new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.Identifier(funcABI.name), typeTags, bcsArgs));\n        }\n        if (scriptABI instanceof _aptos_types_abi__WEBPACK_IMPORTED_MODULE_4__.TransactionScriptABI) {\n            const funcABI1 = scriptABI;\n            const scriptArgs = TransactionBuilderABI.toTransactionArguments(funcABI1.args, args);\n            payload = new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.TransactionPayloadScript(new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.Script(funcABI1.code, typeTags, scriptArgs));\n        }\n        // @ts-ignore\n        if (payload) {\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.RawTransaction(senderAccount, BigInt(sequenceNumber), payload, // @ts-ignore\n            BigInt(maxGasAmount), // @ts-ignore\n            BigInt(gasUnitPrice), expTimetampSec, new _aptos_types__WEBPACK_IMPORTED_MODULE_2__.ChainId(Number(chainId)));\n        }\n        throw new Error(\"Invalid ABI.\");\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/builder.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/builder_utils.ts":
/*!***********************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/builder_utils.ts ***!
  \***********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TypeTagParser\": () => (/* binding */ TypeTagParser),\n/* harmony export */   \"argToTransactionArgument\": () => (/* binding */ argToTransactionArgument),\n/* harmony export */   \"serializeArg\": () => (/* binding */ serializeArg)\n/* harmony export */ });\n/* harmony import */ var _hex_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hex_string */ \"./ohio-sdk/sdk/hex_string.ts\");\n/* harmony import */ var _aptos_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aptos_types */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_aptos_types__WEBPACK_IMPORTED_MODULE_1__]);\n_aptos_types__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nfunction assertType(val, types, message) {\n    if (!types?.includes(typeof val)) {\n        throw new Error(message || `Invalid arg: ${val} type should be ${types instanceof Array ? types.join(\" or \") : types}`);\n    }\n}\nfunction bail(message) {\n    throw new Error(message);\n}\nfunction isWhiteSpace(c) {\n    if (c.match(/\\s/)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidAlphabetic(c) {\n    if (c.match(/[_A-Za-z0-9]/g)) {\n        return true;\n    }\n    return false;\n}\n// Returns Token and Token byte size\nfunction nextToken(tagStr, pos) {\n    const c = tagStr[pos];\n    if (c === \":\") {\n        if (tagStr.slice(pos, pos + 2) === \"::\") {\n            return [\n                [\n                    \"COLON\",\n                    \"::\"\n                ],\n                2\n            ];\n        }\n        bail(\"Unrecognized token.\");\n    } else if (c === \"<\") {\n        return [\n            [\n                \"LT\",\n                \"<\"\n            ],\n            1\n        ];\n    } else if (c === \">\") {\n        return [\n            [\n                \"GT\",\n                \">\"\n            ],\n            1\n        ];\n    } else if (c === \",\") {\n        return [\n            [\n                \"COMMA\",\n                \",\"\n            ],\n            1\n        ];\n    } else if (isWhiteSpace(c)) {\n        let res = \"\";\n        for(let i = pos; i < tagStr.length; i += 1){\n            const char = tagStr[i];\n            if (isWhiteSpace(char)) {\n                res = `${res}${char}`;\n            } else {\n                break;\n            }\n        }\n        return [\n            [\n                \"SPACE\",\n                res\n            ],\n            res.length\n        ];\n    } else if (isValidAlphabetic(c)) {\n        let res1 = \"\";\n        for(let i1 = pos; i1 < tagStr.length; i1 += 1){\n            const char1 = tagStr[i1];\n            if (isValidAlphabetic(char1)) {\n                res1 = `${res1}${char1}`;\n            } else {\n                break;\n            }\n        }\n        return [\n            [\n                \"IDENT\",\n                res1\n            ],\n            res1.length\n        ];\n    }\n    throw new Error(\"Unrecognized token.\");\n}\nfunction tokenize(tagStr) {\n    let pos = 0;\n    const tokens = [];\n    while(pos < tagStr.length){\n        const [token, size] = nextToken(tagStr, pos);\n        if (token[0] !== \"SPACE\") {\n            tokens.push(token);\n        }\n        pos += size;\n    }\n    return tokens;\n}\n/**\n * Parser to parse a type tag string\n */ class TypeTagParser {\n    constructor(tagStr){\n        this.tokens = tokenize(tagStr);\n    }\n    consume(targetToken) {\n        const token = this.tokens.shift();\n        if (!token || token[1] !== targetToken) {\n            bail(\"Invalid type tag.\");\n        }\n    }\n    parseCommaList(endToken, allowTraillingComma) {\n        const res = [];\n        if (this.tokens.length <= 0) {\n            bail(\"Invalid type tag.\");\n        }\n        while(this.tokens[0][1] !== endToken){\n            res.push(this.parseTypeTag());\n            if (this.tokens.length > 0 && this.tokens[0][1] === endToken) {\n                break;\n            }\n            this.consume(\",\");\n            if (this.tokens.length > 0 && this.tokens[0][1] === endToken && allowTraillingComma) {\n                break;\n            }\n            if (this.tokens.length <= 0) {\n                bail(\"Invalid type tag.\");\n            }\n        }\n        return res;\n    }\n    parseTypeTag() {\n        if (this.tokens.length === 0) {\n            bail(\"Invalid type tag.\");\n        }\n        // Pop left most element out\n        // @ts-ignore\n        const [tokenTy, tokenVal] = this.tokens.shift();\n        if (tokenVal === \"u8\") {\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU8();\n        }\n        if (tokenVal === \"u64\") {\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU64();\n        }\n        if (tokenVal === \"u128\") {\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU128();\n        }\n        if (tokenVal === \"bool\") {\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagBool();\n        }\n        if (tokenVal === \"address\") {\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagAddress();\n        }\n        if (tokenVal === \"vector\") {\n            this.consume(\"<\");\n            const res = this.parseTypeTag();\n            this.consume(\">\");\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagVector(res);\n        }\n        if (tokenTy === \"IDENT\" && (tokenVal.startsWith(\"0x\") || tokenVal.startsWith(\"0X\"))) {\n            const address = tokenVal;\n            this.consume(\"::\");\n            // @ts-ignore\n            const [moduleTokenTy, module] = this.tokens.shift();\n            if (moduleTokenTy !== \"IDENT\") {\n                bail(\"Invalid type tag.\");\n            }\n            this.consume(\"::\");\n            // @ts-ignore\n            const [nameTokenTy, name] = this.tokens.shift();\n            if (nameTokenTy !== \"IDENT\") {\n                bail(\"Invalid type tag.\");\n            }\n            let tyTags = [];\n            // Check if the struct has ty args\n            if (this.tokens.length > 0 && this.tokens[0][1] === \"<\") {\n                this.consume(\"<\");\n                tyTags = this.parseCommaList(\">\", true);\n                this.consume(\">\");\n            }\n            const structTag = new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.StructTag(_aptos_types__WEBPACK_IMPORTED_MODULE_1__.AccountAddress.fromHex(address), new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.Identifier(module), new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.Identifier(name), tyTags);\n            return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagStruct(structTag);\n        }\n        throw new Error(\"Invalid type tag.\");\n    }\n}\nfunction serializeArg(argVal, argType, serializer) {\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagBool) {\n        assertType(argVal, \"boolean\");\n        serializer.serializeBool(argVal);\n        return;\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU8) {\n        assertType(argVal, \"number\");\n        serializer.serializeU8(argVal);\n        return;\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU64) {\n        assertType(argVal, [\n            \"number\",\n            \"bigint\"\n        ]);\n        serializer.serializeU64(argVal);\n        return;\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU128) {\n        assertType(argVal, [\n            \"number\",\n            \"bigint\"\n        ]);\n        serializer.serializeU128(argVal);\n        return;\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagAddress) {\n        let addr;\n        if (typeof argVal === \"string\" || argVal instanceof _hex_string__WEBPACK_IMPORTED_MODULE_0__.HexString) {\n            addr = _aptos_types__WEBPACK_IMPORTED_MODULE_1__.AccountAddress.fromHex(argVal);\n        } else if (argVal instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.AccountAddress) {\n            addr = argVal;\n        } else {\n            throw new Error(\"Invalid account address.\");\n        }\n        addr.serialize(serializer);\n        return;\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagVector) {\n        // We are serializing a vector<u8>\n        if (argType.value instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU8) {\n            if (argVal instanceof Uint8Array) {\n                serializer.serializeBytes(argVal);\n                return;\n            }\n            if (typeof argVal === \"string\") {\n                serializer.serializeStr(argVal);\n                return;\n            }\n        }\n        if (!(argVal instanceof Array)) {\n            throw new Error(\"Invalid vector args.\");\n        }\n        serializer.serializeU32AsUleb128(argVal.length);\n        argVal.forEach((arg)=>serializeArg(arg, argType.value, serializer));\n        return;\n    }\n    throw new Error(\"Unsupported arg type.\");\n}\nfunction argToTransactionArgument(argVal, argType) {\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagBool) {\n        assertType(argVal, \"boolean\");\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TransactionArgumentBool(argVal);\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU8) {\n        assertType(argVal, \"number\");\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TransactionArgumentU8(argVal);\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU64) {\n        assertType(argVal, [\n            \"number\",\n            \"bigint\"\n        ]);\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TransactionArgumentU64(argVal);\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU128) {\n        assertType(argVal, [\n            \"number\",\n            \"bigint\"\n        ]);\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TransactionArgumentU128(argVal);\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagAddress) {\n        let addr;\n        if (typeof argVal === \"string\") {\n            addr = _aptos_types__WEBPACK_IMPORTED_MODULE_1__.AccountAddress.fromHex(argVal);\n        } else if (argVal instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.AccountAddress) {\n            addr = argVal;\n        } else {\n            throw new Error(\"Invalid account address.\");\n        }\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TransactionArgumentAddress(addr);\n    }\n    if (argType instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagVector && argType.value instanceof _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TypeTagU8) {\n        if (!(argVal instanceof Uint8Array)) {\n            throw new Error(`${argVal} should be an instance of Uint8Array`);\n        }\n        return new _aptos_types__WEBPACK_IMPORTED_MODULE_1__.TransactionArgumentU8Vector(argVal);\n    }\n    throw new Error(\"Unknown type for TransactionArgument.\");\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9idWlsZGVyX3V0aWxzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTBDO0FBb0JuQjtBQUd2QixTQUFTaUIsVUFBVSxDQUFDQyxHQUFRLEVBQUVDLEtBQXdCLEVBQUVDLE9BQWdCLEVBQUU7SUFDeEUsSUFBSSxDQUFDRCxLQUFLLEVBQUVFLFFBQVEsQ0FBQyxPQUFPSCxHQUFHLENBQUMsRUFBRTtRQUNoQyxNQUFNLElBQUlJLEtBQUssQ0FDYkYsT0FBTyxJQUFJLENBQUMsYUFBYSxFQUFFRixHQUFHLENBQUMsZ0JBQWdCLEVBQUVDLEtBQUssWUFBWUksS0FBSyxHQUFHSixLQUFLLENBQUNLLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBR0wsS0FBSyxDQUFDLENBQUMsQ0FDdkcsQ0FBQztLQUNIO0NBQ0Y7QUFFRCxTQUFTTSxJQUFJLENBQUNMLE9BQWUsRUFBRTtJQUM3QixNQUFNLElBQUlFLEtBQUssQ0FBQ0YsT0FBTyxDQUFDLENBQUM7Q0FDMUI7QUFFRCxTQUFTTSxZQUFZLENBQUNDLENBQVMsRUFBVztJQUN4QyxJQUFJQSxDQUFDLENBQUNDLEtBQUssTUFBTSxFQUFFO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFDRCxPQUFPLEtBQUssQ0FBQztDQUNkO0FBRUQsU0FBU0MsaUJBQWlCLENBQUNGLENBQVMsRUFBVztJQUM3QyxJQUFJQSxDQUFDLENBQUNDLEtBQUssaUJBQWlCLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUNELE9BQU8sS0FBSyxDQUFDO0NBQ2Q7QUFNRCxvQ0FBb0M7QUFDcEMsU0FBU0UsU0FBUyxDQUFDQyxNQUFjLEVBQUVDLEdBQVcsRUFBbUI7SUFDL0QsTUFBTUwsQ0FBQyxHQUFHSSxNQUFNLENBQUNDLEdBQUcsQ0FBQztJQUNyQixJQUFJTCxDQUFDLEtBQUssR0FBRyxFQUFFO1FBQ2IsSUFBSUksTUFBTSxDQUFDRSxLQUFLLENBQUNELEdBQUcsRUFBRUEsR0FBRyxHQUFHLENBQUMsQ0FBQyxLQUFLLElBQUksRUFBRTtZQUN2QyxPQUFPO2dCQUFDO29CQUFDLE9BQU87b0JBQUUsSUFBSTtpQkFBQztBQUFFLGlCQUFDO2FBQUMsQ0FBQztTQUM3QjtRQUNEUCxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztLQUM3QixNQUFNLElBQUlFLENBQUMsS0FBSyxHQUFHLEVBQUU7UUFDcEIsT0FBTztZQUFDO2dCQUFDLElBQUk7Z0JBQUUsR0FBRzthQUFDO0FBQUUsYUFBQztTQUFDLENBQUM7S0FDekIsTUFBTSxJQUFJQSxDQUFDLEtBQUssR0FBRyxFQUFFO1FBQ3BCLE9BQU87WUFBQztnQkFBQyxJQUFJO2dCQUFFLEdBQUc7YUFBQztBQUFFLGFBQUM7U0FBQyxDQUFDO0tBQ3pCLE1BQU0sSUFBSUEsQ0FBQyxLQUFLLEdBQUcsRUFBRTtRQUNwQixPQUFPO1lBQUM7Z0JBQUMsT0FBTztnQkFBRSxHQUFHO2FBQUM7QUFBRSxhQUFDO1NBQUMsQ0FBQztLQUM1QixNQUFNLElBQUlELFlBQVksQ0FBQ0MsQ0FBQyxDQUFDLEVBQUU7UUFDMUIsSUFBSU8sR0FBRyxHQUFHLEVBQUU7UUFDWixJQUFLLElBQUlDLENBQUMsR0FBR0gsR0FBRyxFQUFFRyxDQUFDLEdBQUdKLE1BQU0sQ0FBQ0ssTUFBTSxFQUFFRCxDQUFDLElBQUksQ0FBQyxDQUFFO1lBQzNDLE1BQU1FLElBQUksR0FBR04sTUFBTSxDQUFDSSxDQUFDLENBQUM7WUFDdEIsSUFBSVQsWUFBWSxDQUFDVyxJQUFJLENBQUMsRUFBRTtnQkFDdEJILEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsQ0FBQyxFQUFFRyxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ3ZCLE1BQU07Z0JBQ0wsTUFBTTthQUNQO1NBQ0Y7UUFDRCxPQUFPO1lBQUM7Z0JBQUMsT0FBTztnQkFBRUgsR0FBRzthQUFDO1lBQUVBLEdBQUcsQ0FBQ0UsTUFBTTtTQUFDLENBQUM7S0FDckMsTUFBTSxJQUFJUCxpQkFBaUIsQ0FBQ0YsQ0FBQyxDQUFDLEVBQUU7UUFDL0IsSUFBSU8sSUFBRyxHQUFHLEVBQUU7UUFDWixJQUFLLElBQUlDLEVBQUMsR0FBR0gsR0FBRyxFQUFFRyxFQUFDLEdBQUdKLE1BQU0sQ0FBQ0ssTUFBTSxFQUFFRCxFQUFDLElBQUksQ0FBQyxDQUFFO1lBQzNDLE1BQU1FLEtBQUksR0FBR04sTUFBTSxDQUFDSSxFQUFDLENBQUM7WUFDdEIsSUFBSU4saUJBQWlCLENBQUNRLEtBQUksQ0FBQyxFQUFFO2dCQUMzQkgsSUFBRyxHQUFHLENBQUMsRUFBRUEsSUFBRyxDQUFDLEVBQUVHLEtBQUksQ0FBQyxDQUFDLENBQUM7YUFDdkIsTUFBTTtnQkFDTCxNQUFNO2FBQ1A7U0FDRjtRQUNELE9BQU87WUFBQztnQkFBQyxPQUFPO2dCQUFFSCxJQUFHO2FBQUM7WUFBRUEsSUFBRyxDQUFDRSxNQUFNO1NBQUMsQ0FBQztLQUNyQztJQUNELE1BQU0sSUFBSWQsS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7Q0FDeEM7QUFFRCxTQUFTZ0IsUUFBUSxDQUFDUCxNQUFjLEVBQVc7SUFDekMsSUFBSUMsR0FBRyxHQUFHLENBQUM7SUFDWCxNQUFNTyxNQUFNLEdBQUcsRUFBRTtJQUNqQixNQUFPUCxHQUFHLEdBQUdELE1BQU0sQ0FBQ0ssTUFBTSxDQUFFO1FBQzFCLE1BQU0sQ0FBQ0ksS0FBSyxFQUFFQyxJQUFJLENBQUMsR0FBR1gsU0FBUyxDQUFDQyxNQUFNLEVBQUVDLEdBQUcsQ0FBQztRQUM1QyxJQUFJUSxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssT0FBTyxFQUFFO1lBQ3hCRCxNQUFNLENBQUNHLElBQUksQ0FBQ0YsS0FBSyxDQUFDLENBQUM7U0FDcEI7UUFDRFIsR0FBRyxJQUFJUyxJQUFJLENBQUM7S0FDYjtJQUNELE9BQU9GLE1BQU0sQ0FBQztDQUNmO0FBRUQ7O0NBRUMsR0FDTSxNQUFNSSxhQUFhO0lBR3hCQyxZQUFZYixNQUFjLENBQUU7UUFDMUIsSUFBSSxDQUFDUSxNQUFNLEdBQUdELFFBQVEsQ0FBQ1AsTUFBTSxDQUFDLENBQUM7S0FDaEM7SUFFRCxPQUFlLENBQUNlLFdBQW1CLEVBQUU7UUFDbkMsTUFBTU4sS0FBSyxHQUFHLElBQUksQ0FBQ0QsTUFBTSxDQUFDUSxLQUFLLEVBQUU7UUFDakMsSUFBSSxDQUFDUCxLQUFLLElBQUlBLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBS00sV0FBVyxFQUFFO1lBQ3RDckIsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDM0I7S0FDRjtJQUVELGNBQXNCLENBQUN3QixRQUFvQixFQUFFQyxtQkFBNEIsRUFBYTtRQUNwRixNQUFNaEIsR0FBRyxHQUFjLEVBQUU7UUFDekIsSUFBSSxJQUFJLENBQUNLLE1BQU0sQ0FBQ0gsTUFBTSxJQUFJLENBQUMsRUFBRTtZQUMzQlgsSUFBSSxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDM0I7UUFFRCxNQUFPLElBQUksQ0FBQ2MsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLVSxRQUFRLENBQUU7WUFDckNmLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDLElBQUksQ0FBQ1MsWUFBWSxFQUFFLENBQUMsQ0FBQztZQUU5QixJQUFJLElBQUksQ0FBQ1osTUFBTSxDQUFDSCxNQUFNLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQ0csTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLVSxRQUFRLEVBQUU7Z0JBQzVELE1BQU07YUFDUDtZQUVELElBQUksQ0FBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2xCLElBQUksSUFBSSxDQUFDTixNQUFNLENBQUNILE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUtVLFFBQVEsSUFBSUMsbUJBQW1CLEVBQUU7Z0JBQ25GLE1BQU07YUFDUDtZQUVELElBQUksSUFBSSxDQUFDWCxNQUFNLENBQUNILE1BQU0sSUFBSSxDQUFDLEVBQUU7Z0JBQzNCWCxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQzthQUMzQjtTQUNGO1FBQ0QsT0FBT1MsR0FBRyxDQUFDO0tBQ1o7SUFFRGlCLFlBQVksR0FBWTtRQUN0QixJQUFJLElBQUksQ0FBQ1osTUFBTSxDQUFDSCxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzVCWCxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUMzQjtRQUVELDRCQUE0QjtRQUM1QixhQUFhO1FBQ2IsTUFBTSxDQUFDMkIsT0FBTyxFQUFFQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUNkLE1BQU0sQ0FBQ1EsS0FBSyxFQUFFO1FBRS9DLElBQUlNLFFBQVEsS0FBSyxJQUFJLEVBQUU7WUFDckIsT0FBTyxJQUFJbkQsbURBQVMsRUFBRSxDQUFDO1NBQ3hCO1FBQ0QsSUFBSW1ELFFBQVEsS0FBSyxLQUFLLEVBQUU7WUFDdEIsT0FBTyxJQUFJbEQsb0RBQVUsRUFBRSxDQUFDO1NBQ3pCO1FBQ0QsSUFBSWtELFFBQVEsS0FBSyxNQUFNLEVBQUU7WUFDdkIsT0FBTyxJQUFJakQscURBQVcsRUFBRSxDQUFDO1NBQzFCO1FBQ0QsSUFBSWlELFFBQVEsS0FBSyxNQUFNLEVBQUU7WUFDdkIsT0FBTyxJQUFJcEQscURBQVcsRUFBRSxDQUFDO1NBQzFCO1FBQ0QsSUFBSW9ELFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDMUIsT0FBTyxJQUFJaEQsd0RBQWMsRUFBRSxDQUFDO1NBQzdCO1FBQ0QsSUFBSWdELFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDekIsSUFBSSxDQUFDUixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDbEIsTUFBTVgsR0FBRyxHQUFHLElBQUksQ0FBQ2lCLFlBQVksRUFBRTtZQUMvQixJQUFJLENBQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNsQixPQUFPLElBQUl0Qyx1REFBYSxDQUFDMkIsR0FBRyxDQUFDLENBQUM7U0FDL0I7UUFDRCxJQUFJa0IsT0FBTyxLQUFLLE9BQU8sSUFBSSxDQUFDQyxRQUFRLENBQUNDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSUQsUUFBUSxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRTtZQUNuRixNQUFNQyxPQUFPLEdBQUdGLFFBQVE7WUFDeEIsSUFBSSxDQUFDUixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkIsYUFBYTtZQUNiLE1BQU0sQ0FBQ1csYUFBYSxFQUFFQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUNsQixNQUFNLENBQUNRLEtBQUssRUFBRTtZQUNuRCxJQUFJUyxhQUFhLEtBQUssT0FBTyxFQUFFO2dCQUM3Qi9CLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO2FBQzNCO1lBQ0QsSUFBSSxDQUFDb0IsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25CLGFBQWE7WUFDYixNQUFNLENBQUNhLFdBQVcsRUFBRUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDcEIsTUFBTSxDQUFDUSxLQUFLLEVBQUU7WUFDL0MsSUFBSVcsV0FBVyxLQUFLLE9BQU8sRUFBRTtnQkFDM0JqQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQzthQUMzQjtZQUVELElBQUltQyxNQUFNLEdBQWMsRUFBRTtZQUMxQixrQ0FBa0M7WUFDbEMsSUFBSSxJQUFJLENBQUNyQixNQUFNLENBQUNILE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO2dCQUN2RCxJQUFJLENBQUNNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDbEJlLE1BQU0sR0FBRyxJQUFJLENBQUNaLGNBQWMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3hDLElBQUksQ0FBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ25CO1lBRUQsTUFBTWdCLFNBQVMsR0FBRyxJQUFJcEQsbURBQVMsQ0FDN0JILGdFQUFzQixDQUFDaUQsT0FBTyxDQUFDLEVBQy9CLElBQUk3QyxvREFBVSxDQUFDK0MsTUFBTSxDQUFDLEVBQ3RCLElBQUkvQyxvREFBVSxDQUFDaUQsSUFBSSxDQUFDLEVBQ3BCQyxNQUFNLENBQ1A7WUFDRCxPQUFPLElBQUlwRCx1REFBYSxDQUFDcUQsU0FBUyxDQUFDLENBQUM7U0FDckM7UUFFRCxNQUFNLElBQUl2QyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztLQUN0QztDQUNGO0FBRU0sU0FBU3lDLFlBQVksQ0FBQ0MsTUFBVyxFQUFFQyxPQUFnQixFQUFFQyxVQUFzQixFQUFFO0lBQ2xGLElBQUlELE9BQU8sWUFBWWhFLHFEQUFXLEVBQUU7UUFDbENnQixVQUFVLENBQUMrQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDOUJFLFVBQVUsQ0FBQ0MsYUFBYSxDQUFDSCxNQUFNLENBQUMsQ0FBQztRQUNqQyxPQUFPO0tBQ1I7SUFDRCxJQUFJQyxPQUFPLFlBQVkvRCxtREFBUyxFQUFFO1FBQ2hDZSxVQUFVLENBQUMrQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDN0JFLFVBQVUsQ0FBQ0UsV0FBVyxDQUFDSixNQUFNLENBQUMsQ0FBQztRQUMvQixPQUFPO0tBQ1I7SUFDRCxJQUFJQyxPQUFPLFlBQVk5RCxvREFBVSxFQUFFO1FBQ2pDYyxVQUFVLENBQUMrQyxNQUFNLEVBQUU7WUFBQyxRQUFRO1lBQUUsUUFBUTtTQUFDLENBQUMsQ0FBQztRQUN6Q0UsVUFBVSxDQUFDRyxZQUFZLENBQUNMLE1BQU0sQ0FBQyxDQUFDO1FBQ2hDLE9BQU87S0FDUjtJQUNELElBQUlDLE9BQU8sWUFBWTdELHFEQUFXLEVBQUU7UUFDbENhLFVBQVUsQ0FBQytDLE1BQU0sRUFBRTtZQUFDLFFBQVE7WUFBRSxRQUFRO1NBQUMsQ0FBQyxDQUFDO1FBQ3pDRSxVQUFVLENBQUNJLGFBQWEsQ0FBQ04sTUFBTSxDQUFDLENBQUM7UUFDakMsT0FBTztLQUNSO0lBQ0QsSUFBSUMsT0FBTyxZQUFZNUQsd0RBQWMsRUFBRTtRQUNyQyxJQUFJa0UsSUFBSTtRQUNSLElBQUksT0FBT1AsTUFBTSxLQUFLLFFBQVEsSUFBSUEsTUFBTSxZQUFZaEUsa0RBQVMsRUFBRTtZQUM3RHVFLElBQUksR0FBR2pFLGdFQUFzQixDQUFDMEQsTUFBTSxDQUFDLENBQUM7U0FDdkMsTUFBTSxJQUFJQSxNQUFNLFlBQVkxRCx3REFBYyxFQUFFO1lBQzNDaUUsSUFBSSxHQUFHUCxNQUFNLENBQUM7U0FDZixNQUFNO1lBQ0wsTUFBTSxJQUFJMUMsS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7UUFDRGlELElBQUksQ0FBQ0MsU0FBUyxDQUFDTixVQUFVLENBQUMsQ0FBQztRQUMzQixPQUFPO0tBQ1I7SUFDRCxJQUFJRCxPQUFPLFlBQVkxRCx1REFBYSxFQUFFO1FBQ3BDLGtDQUFrQztRQUNsQyxJQUFJMEQsT0FBTyxDQUFDUSxLQUFLLFlBQVl2RSxtREFBUyxFQUFFO1lBQ3RDLElBQUk4RCxNQUFNLFlBQVlVLFVBQVUsRUFBRTtnQkFDaENSLFVBQVUsQ0FBQ1MsY0FBYyxDQUFDWCxNQUFNLENBQUMsQ0FBQztnQkFDbEMsT0FBTzthQUNSO1lBRUQsSUFBSSxPQUFPQSxNQUFNLEtBQUssUUFBUSxFQUFFO2dCQUM5QkUsVUFBVSxDQUFDVSxZQUFZLENBQUNaLE1BQU0sQ0FBQyxDQUFDO2dCQUNoQyxPQUFPO2FBQ1I7U0FDRjtRQUVELElBQUksQ0FBQyxDQUFDQSxNQUFNLFlBQVl6QyxLQUFLLENBQUMsRUFBRTtZQUM5QixNQUFNLElBQUlELEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1NBQ3pDO1FBRUQ0QyxVQUFVLENBQUNXLHFCQUFxQixDQUFDYixNQUFNLENBQUM1QixNQUFNLENBQUMsQ0FBQztRQUVoRDRCLE1BQU0sQ0FBQ2MsT0FBTyxDQUFDLENBQUNDLEdBQUcsR0FBS2hCLFlBQVksQ0FBQ2dCLEdBQUcsRUFBRWQsT0FBTyxDQUFDUSxLQUFLLEVBQUVQLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDdEUsT0FBTztLQUNSO0lBQ0QsTUFBTSxJQUFJNUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUM7Q0FDMUM7QUFFTSxTQUFTMEQsd0JBQXdCLENBQUNoQixNQUFXLEVBQUVDLE9BQWdCLEVBQXVCO0lBQzNGLElBQUlBLE9BQU8sWUFBWWhFLHFEQUFXLEVBQUU7UUFDbENnQixVQUFVLENBQUMrQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDOUIsT0FBTyxJQUFJckQsaUVBQXVCLENBQUNxRCxNQUFNLENBQUMsQ0FBQztLQUM1QztJQUNELElBQUlDLE9BQU8sWUFBWS9ELG1EQUFTLEVBQUU7UUFDaENlLFVBQVUsQ0FBQytDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM3QixPQUFPLElBQUlqRCwrREFBcUIsQ0FBQ2lELE1BQU0sQ0FBQyxDQUFDO0tBQzFDO0lBQ0QsSUFBSUMsT0FBTyxZQUFZOUQsb0RBQVUsRUFBRTtRQUNqQ2MsVUFBVSxDQUFDK0MsTUFBTSxFQUFFO1lBQUMsUUFBUTtZQUFFLFFBQVE7U0FBQyxDQUFDLENBQUM7UUFDekMsT0FBTyxJQUFJcEQsZ0VBQXNCLENBQUNvRCxNQUFNLENBQUMsQ0FBQztLQUMzQztJQUNELElBQUlDLE9BQU8sWUFBWTdELHFEQUFXLEVBQUU7UUFDbENhLFVBQVUsQ0FBQytDLE1BQU0sRUFBRTtZQUFDLFFBQVE7WUFBRSxRQUFRO1NBQUMsQ0FBQyxDQUFDO1FBQ3pDLE9BQU8sSUFBSW5ELGlFQUF1QixDQUFDbUQsTUFBTSxDQUFDLENBQUM7S0FDNUM7SUFDRCxJQUFJQyxPQUFPLFlBQVk1RCx3REFBYyxFQUFFO1FBQ3JDLElBQUlrRSxJQUFJO1FBQ1IsSUFBSSxPQUFPUCxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQzlCTyxJQUFJLEdBQUdqRSxnRUFBc0IsQ0FBQzBELE1BQU0sQ0FBQyxDQUFDO1NBQ3ZDLE1BQU0sSUFBSUEsTUFBTSxZQUFZMUQsd0RBQWMsRUFBRTtZQUMzQ2lFLElBQUksR0FBR1AsTUFBTSxDQUFDO1NBQ2YsTUFBTTtZQUNMLE1BQU0sSUFBSTFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1NBQzdDO1FBQ0QsT0FBTyxJQUFJUixvRUFBMEIsQ0FBQ3lELElBQUksQ0FBQyxDQUFDO0tBQzdDO0lBQ0QsSUFBSU4sT0FBTyxZQUFZMUQsdURBQWEsSUFBSTBELE9BQU8sQ0FBQ1EsS0FBSyxZQUFZdkUsbURBQVMsRUFBRTtRQUMxRSxJQUFJLENBQUMsQ0FBQzhELE1BQU0sWUFBWVUsVUFBVSxDQUFDLEVBQUU7WUFDbkMsTUFBTSxJQUFJcEQsS0FBSyxDQUFDLENBQUMsRUFBRTBDLE1BQU0sQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDLENBQUM7U0FDbEU7UUFDRCxPQUFPLElBQUloRCxxRUFBMkIsQ0FBQ2dELE1BQU0sQ0FBQyxDQUFDO0tBQ2hEO0lBRUQsTUFBTSxJQUFJMUMsS0FBSyxDQUFDLHVDQUF1QyxDQUFDLENBQUM7Q0FDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9idWlsZGVyX3V0aWxzLnRzPzZhZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGV4U3RyaW5nIH0gZnJvbSBcIi4uL2hleF9zdHJpbmdcIjtcbmltcG9ydCB7XG4gIFR5cGVUYWcsXG4gIFR5cGVUYWdCb29sLFxuICBUeXBlVGFnVTgsXG4gIFR5cGVUYWdVNjQsXG4gIFR5cGVUYWdVMTI4LFxuICBUeXBlVGFnQWRkcmVzcyxcbiAgQWNjb3VudEFkZHJlc3MsXG4gIFR5cGVUYWdWZWN0b3IsXG4gIFR5cGVUYWdTdHJ1Y3QsXG4gIFN0cnVjdFRhZyxcbiAgSWRlbnRpZmllcixcbiAgVHJhbnNhY3Rpb25Bcmd1bWVudCxcbiAgVHJhbnNhY3Rpb25Bcmd1bWVudEJvb2wsXG4gIFRyYW5zYWN0aW9uQXJndW1lbnRVNjQsXG4gIFRyYW5zYWN0aW9uQXJndW1lbnRVMTI4LFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50QWRkcmVzcyxcbiAgVHJhbnNhY3Rpb25Bcmd1bWVudFU4LFxuICBUcmFuc2FjdGlvbkFyZ3VtZW50VThWZWN0b3IsXG59IGZyb20gXCIuL2FwdG9zX3R5cGVzXCI7XG5pbXBvcnQgeyBTZXJpYWxpemVyIH0gZnJvbSBcIi4vYmNzXCI7XG5cbmZ1bmN0aW9uIGFzc2VydFR5cGUodmFsOiBhbnksIHR5cGVzOiBzdHJpbmdbXSB8IHN0cmluZywgbWVzc2FnZT86IHN0cmluZykge1xuICBpZiAoIXR5cGVzPy5pbmNsdWRlcyh0eXBlb2YgdmFsKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIG1lc3NhZ2UgfHwgYEludmFsaWQgYXJnOiAke3ZhbH0gdHlwZSBzaG91bGQgYmUgJHt0eXBlcyBpbnN0YW5jZW9mIEFycmF5ID8gdHlwZXMuam9pbihcIiBvciBcIikgOiB0eXBlc31gLFxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYmFpbChtZXNzYWdlOiBzdHJpbmcpIHtcbiAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xufVxuXG5mdW5jdGlvbiBpc1doaXRlU3BhY2UoYzogc3RyaW5nKTogYm9vbGVhbiB7XG4gIGlmIChjLm1hdGNoKC9cXHMvKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gaXNWYWxpZEFscGhhYmV0aWMoYzogc3RyaW5nKTogYm9vbGVhbiB7XG4gIGlmIChjLm1hdGNoKC9bX0EtWmEtejAtOV0vZykpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbnR5cGUgVG9rZW5UeXBlID0gc3RyaW5nO1xudHlwZSBUb2tlblZhbHVlID0gc3RyaW5nO1xudHlwZSBUb2tlbiA9IFtUb2tlblR5cGUsIFRva2VuVmFsdWVdO1xuXG4vLyBSZXR1cm5zIFRva2VuIGFuZCBUb2tlbiBieXRlIHNpemVcbmZ1bmN0aW9uIG5leHRUb2tlbih0YWdTdHI6IHN0cmluZywgcG9zOiBudW1iZXIpOiBbVG9rZW4sIG51bWJlcl0ge1xuICBjb25zdCBjID0gdGFnU3RyW3Bvc107XG4gIGlmIChjID09PSBcIjpcIikge1xuICAgIGlmICh0YWdTdHIuc2xpY2UocG9zLCBwb3MgKyAyKSA9PT0gXCI6OlwiKSB7XG4gICAgICByZXR1cm4gW1tcIkNPTE9OXCIsIFwiOjpcIl0sIDJdO1xuICAgIH1cbiAgICBiYWlsKFwiVW5yZWNvZ25pemVkIHRva2VuLlwiKTtcbiAgfSBlbHNlIGlmIChjID09PSBcIjxcIikge1xuICAgIHJldHVybiBbW1wiTFRcIiwgXCI8XCJdLCAxXTtcbiAgfSBlbHNlIGlmIChjID09PSBcIj5cIikge1xuICAgIHJldHVybiBbW1wiR1RcIiwgXCI+XCJdLCAxXTtcbiAgfSBlbHNlIGlmIChjID09PSBcIixcIikge1xuICAgIHJldHVybiBbW1wiQ09NTUFcIiwgXCIsXCJdLCAxXTtcbiAgfSBlbHNlIGlmIChpc1doaXRlU3BhY2UoYykpIHtcbiAgICBsZXQgcmVzID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gcG9zOyBpIDwgdGFnU3RyLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCBjaGFyID0gdGFnU3RyW2ldO1xuICAgICAgaWYgKGlzV2hpdGVTcGFjZShjaGFyKSkge1xuICAgICAgICByZXMgPSBgJHtyZXN9JHtjaGFyfWA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFtbXCJTUEFDRVwiLCByZXNdLCByZXMubGVuZ3RoXTtcbiAgfSBlbHNlIGlmIChpc1ZhbGlkQWxwaGFiZXRpYyhjKSkge1xuICAgIGxldCByZXMgPSBcIlwiO1xuICAgIGZvciAobGV0IGkgPSBwb3M7IGkgPCB0YWdTdHIubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIGNvbnN0IGNoYXIgPSB0YWdTdHJbaV07XG4gICAgICBpZiAoaXNWYWxpZEFscGhhYmV0aWMoY2hhcikpIHtcbiAgICAgICAgcmVzID0gYCR7cmVzfSR7Y2hhcn1gO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbW1wiSURFTlRcIiwgcmVzXSwgcmVzLmxlbmd0aF07XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFwiVW5yZWNvZ25pemVkIHRva2VuLlwiKTtcbn1cblxuZnVuY3Rpb24gdG9rZW5pemUodGFnU3RyOiBzdHJpbmcpOiBUb2tlbltdIHtcbiAgbGV0IHBvcyA9IDA7XG4gIGNvbnN0IHRva2VucyA9IFtdO1xuICB3aGlsZSAocG9zIDwgdGFnU3RyLmxlbmd0aCkge1xuICAgIGNvbnN0IFt0b2tlbiwgc2l6ZV0gPSBuZXh0VG9rZW4odGFnU3RyLCBwb3MpO1xuICAgIGlmICh0b2tlblswXSAhPT0gXCJTUEFDRVwiKSB7XG4gICAgICB0b2tlbnMucHVzaCh0b2tlbik7XG4gICAgfVxuICAgIHBvcyArPSBzaXplO1xuICB9XG4gIHJldHVybiB0b2tlbnM7XG59XG5cbi8qKlxuICogUGFyc2VyIHRvIHBhcnNlIGEgdHlwZSB0YWcgc3RyaW5nXG4gKi9cbmV4cG9ydCBjbGFzcyBUeXBlVGFnUGFyc2VyIHtcbiAgcHJpdmF0ZSByZWFkb25seSB0b2tlbnM6IFRva2VuW107XG5cbiAgY29uc3RydWN0b3IodGFnU3RyOiBzdHJpbmcpIHtcbiAgICB0aGlzLnRva2VucyA9IHRva2VuaXplKHRhZ1N0cik7XG4gIH1cblxuICBwcml2YXRlIGNvbnN1bWUodGFyZ2V0VG9rZW46IHN0cmluZykge1xuICAgIGNvbnN0IHRva2VuID0gdGhpcy50b2tlbnMuc2hpZnQoKTtcbiAgICBpZiAoIXRva2VuIHx8IHRva2VuWzFdICE9PSB0YXJnZXRUb2tlbikge1xuICAgICAgYmFpbChcIkludmFsaWQgdHlwZSB0YWcuXCIpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcGFyc2VDb21tYUxpc3QoZW5kVG9rZW46IFRva2VuVmFsdWUsIGFsbG93VHJhaWxsaW5nQ29tbWE6IGJvb2xlYW4pOiBUeXBlVGFnW10ge1xuICAgIGNvbnN0IHJlczogVHlwZVRhZ1tdID0gW107XG4gICAgaWYgKHRoaXMudG9rZW5zLmxlbmd0aCA8PSAwKSB7XG4gICAgICBiYWlsKFwiSW52YWxpZCB0eXBlIHRhZy5cIik7XG4gICAgfVxuXG4gICAgd2hpbGUgKHRoaXMudG9rZW5zWzBdWzFdICE9PSBlbmRUb2tlbikge1xuICAgICAgcmVzLnB1c2godGhpcy5wYXJzZVR5cGVUYWcoKSk7XG5cbiAgICAgIGlmICh0aGlzLnRva2Vucy5sZW5ndGggPiAwICYmIHRoaXMudG9rZW5zWzBdWzFdID09PSBlbmRUb2tlbikge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgdGhpcy5jb25zdW1lKFwiLFwiKTtcbiAgICAgIGlmICh0aGlzLnRva2Vucy5sZW5ndGggPiAwICYmIHRoaXMudG9rZW5zWzBdWzFdID09PSBlbmRUb2tlbiAmJiBhbGxvd1RyYWlsbGluZ0NvbW1hKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50b2tlbnMubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgYmFpbChcIkludmFsaWQgdHlwZSB0YWcuXCIpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzO1xuICB9XG5cbiAgcGFyc2VUeXBlVGFnKCk6IFR5cGVUYWcge1xuICAgIGlmICh0aGlzLnRva2Vucy5sZW5ndGggPT09IDApIHtcbiAgICAgIGJhaWwoXCJJbnZhbGlkIHR5cGUgdGFnLlwiKTtcbiAgICB9XG5cbiAgICAvLyBQb3AgbGVmdCBtb3N0IGVsZW1lbnQgb3V0XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGNvbnN0IFt0b2tlblR5LCB0b2tlblZhbF0gPSB0aGlzLnRva2Vucy5zaGlmdCgpO1xuXG4gICAgaWYgKHRva2VuVmFsID09PSBcInU4XCIpIHtcbiAgICAgIHJldHVybiBuZXcgVHlwZVRhZ1U4KCk7XG4gICAgfVxuICAgIGlmICh0b2tlblZhbCA9PT0gXCJ1NjRcIikge1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnVTY0KCk7XG4gICAgfVxuICAgIGlmICh0b2tlblZhbCA9PT0gXCJ1MTI4XCIpIHtcbiAgICAgIHJldHVybiBuZXcgVHlwZVRhZ1UxMjgoKTtcbiAgICB9XG4gICAgaWYgKHRva2VuVmFsID09PSBcImJvb2xcIikge1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnQm9vbCgpO1xuICAgIH1cbiAgICBpZiAodG9rZW5WYWwgPT09IFwiYWRkcmVzc1wiKSB7XG4gICAgICByZXR1cm4gbmV3IFR5cGVUYWdBZGRyZXNzKCk7XG4gICAgfVxuICAgIGlmICh0b2tlblZhbCA9PT0gXCJ2ZWN0b3JcIikge1xuICAgICAgdGhpcy5jb25zdW1lKFwiPFwiKTtcbiAgICAgIGNvbnN0IHJlcyA9IHRoaXMucGFyc2VUeXBlVGFnKCk7XG4gICAgICB0aGlzLmNvbnN1bWUoXCI+XCIpO1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnVmVjdG9yKHJlcyk7XG4gICAgfVxuICAgIGlmICh0b2tlblR5ID09PSBcIklERU5UXCIgJiYgKHRva2VuVmFsLnN0YXJ0c1dpdGgoXCIweFwiKSB8fCB0b2tlblZhbC5zdGFydHNXaXRoKFwiMFhcIikpKSB7XG4gICAgICBjb25zdCBhZGRyZXNzID0gdG9rZW5WYWw7XG4gICAgICB0aGlzLmNvbnN1bWUoXCI6OlwiKTtcbiAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgIGNvbnN0IFttb2R1bGVUb2tlblR5LCBtb2R1bGVdID0gdGhpcy50b2tlbnMuc2hpZnQoKTtcbiAgICAgIGlmIChtb2R1bGVUb2tlblR5ICE9PSBcIklERU5UXCIpIHtcbiAgICAgICAgYmFpbChcIkludmFsaWQgdHlwZSB0YWcuXCIpO1xuICAgICAgfVxuICAgICAgdGhpcy5jb25zdW1lKFwiOjpcIik7XG4gICAgICAvLyBAdHMtaWdub3JlXG4gICAgICBjb25zdCBbbmFtZVRva2VuVHksIG5hbWVdID0gdGhpcy50b2tlbnMuc2hpZnQoKTtcbiAgICAgIGlmIChuYW1lVG9rZW5UeSAhPT0gXCJJREVOVFwiKSB7XG4gICAgICAgIGJhaWwoXCJJbnZhbGlkIHR5cGUgdGFnLlwiKTtcbiAgICAgIH1cblxuICAgICAgbGV0IHR5VGFnczogVHlwZVRhZ1tdID0gW107XG4gICAgICAvLyBDaGVjayBpZiB0aGUgc3RydWN0IGhhcyB0eSBhcmdzXG4gICAgICBpZiAodGhpcy50b2tlbnMubGVuZ3RoID4gMCAmJiB0aGlzLnRva2Vuc1swXVsxXSA9PT0gXCI8XCIpIHtcbiAgICAgICAgdGhpcy5jb25zdW1lKFwiPFwiKTtcbiAgICAgICAgdHlUYWdzID0gdGhpcy5wYXJzZUNvbW1hTGlzdChcIj5cIiwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuY29uc3VtZShcIj5cIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHN0cnVjdFRhZyA9IG5ldyBTdHJ1Y3RUYWcoXG4gICAgICAgIEFjY291bnRBZGRyZXNzLmZyb21IZXgoYWRkcmVzcyksXG4gICAgICAgIG5ldyBJZGVudGlmaWVyKG1vZHVsZSksXG4gICAgICAgIG5ldyBJZGVudGlmaWVyKG5hbWUpLFxuICAgICAgICB0eVRhZ3MsXG4gICAgICApO1xuICAgICAgcmV0dXJuIG5ldyBUeXBlVGFnU3RydWN0KHN0cnVjdFRhZyk7XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB0eXBlIHRhZy5cIik7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUFyZyhhcmdWYWw6IGFueSwgYXJnVHlwZTogVHlwZVRhZywgc2VyaWFsaXplcjogU2VyaWFsaXplcikge1xuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdCb29sKSB7XG4gICAgYXNzZXJ0VHlwZShhcmdWYWwsIFwiYm9vbGVhblwiKTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZUJvb2woYXJnVmFsKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTgpIHtcbiAgICBhc3NlcnRUeXBlKGFyZ1ZhbCwgXCJudW1iZXJcIik7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVOChhcmdWYWwpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdVNjQpIHtcbiAgICBhc3NlcnRUeXBlKGFyZ1ZhbCwgW1wibnVtYmVyXCIsIFwiYmlnaW50XCJdKTtcbiAgICBzZXJpYWxpemVyLnNlcmlhbGl6ZVU2NChhcmdWYWwpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdVMTI4KSB7XG4gICAgYXNzZXJ0VHlwZShhcmdWYWwsIFtcIm51bWJlclwiLCBcImJpZ2ludFwiXSk7XG4gICAgc2VyaWFsaXplci5zZXJpYWxpemVVMTI4KGFyZ1ZhbCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ0FkZHJlc3MpIHtcbiAgICBsZXQgYWRkcjogQWNjb3VudEFkZHJlc3M7XG4gICAgaWYgKHR5cGVvZiBhcmdWYWwgPT09IFwic3RyaW5nXCIgfHwgYXJnVmFsIGluc3RhbmNlb2YgSGV4U3RyaW5nKSB7XG4gICAgICBhZGRyID0gQWNjb3VudEFkZHJlc3MuZnJvbUhleChhcmdWYWwpO1xuICAgIH0gZWxzZSBpZiAoYXJnVmFsIGluc3RhbmNlb2YgQWNjb3VudEFkZHJlc3MpIHtcbiAgICAgIGFkZHIgPSBhcmdWYWw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYWNjb3VudCBhZGRyZXNzLlwiKTtcbiAgICB9XG4gICAgYWRkci5zZXJpYWxpemUoc2VyaWFsaXplcik7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1ZlY3Rvcikge1xuICAgIC8vIFdlIGFyZSBzZXJpYWxpemluZyBhIHZlY3Rvcjx1OD5cbiAgICBpZiAoYXJnVHlwZS52YWx1ZSBpbnN0YW5jZW9mIFR5cGVUYWdVOCkge1xuICAgICAgaWYgKGFyZ1ZhbCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgc2VyaWFsaXplci5zZXJpYWxpemVCeXRlcyhhcmdWYWwpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgYXJnVmFsID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplU3RyKGFyZ1ZhbCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIShhcmdWYWwgaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmVjdG9yIGFyZ3MuXCIpO1xuICAgIH1cblxuICAgIHNlcmlhbGl6ZXIuc2VyaWFsaXplVTMyQXNVbGViMTI4KGFyZ1ZhbC5sZW5ndGgpO1xuXG4gICAgYXJnVmFsLmZvckVhY2goKGFyZykgPT4gc2VyaWFsaXplQXJnKGFyZywgYXJnVHlwZS52YWx1ZSwgc2VyaWFsaXplcikpO1xuICAgIHJldHVybjtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBhcmcgdHlwZS5cIik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcmdUb1RyYW5zYWN0aW9uQXJndW1lbnQoYXJnVmFsOiBhbnksIGFyZ1R5cGU6IFR5cGVUYWcpOiBUcmFuc2FjdGlvbkFyZ3VtZW50IHtcbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnQm9vbCkge1xuICAgIGFzc2VydFR5cGUoYXJnVmFsLCBcImJvb2xlYW5cIik7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkFyZ3VtZW50Qm9vbChhcmdWYWwpO1xuICB9XG4gIGlmIChhcmdUeXBlIGluc3RhbmNlb2YgVHlwZVRhZ1U4KSB7XG4gICAgYXNzZXJ0VHlwZShhcmdWYWwsIFwibnVtYmVyXCIpO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudFU4KGFyZ1ZhbCk7XG4gIH1cbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTY0KSB7XG4gICAgYXNzZXJ0VHlwZShhcmdWYWwsIFtcIm51bWJlclwiLCBcImJpZ2ludFwiXSk7XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkFyZ3VtZW50VTY0KGFyZ1ZhbCk7XG4gIH1cbiAgaWYgKGFyZ1R5cGUgaW5zdGFuY2VvZiBUeXBlVGFnVTEyOCkge1xuICAgIGFzc2VydFR5cGUoYXJnVmFsLCBbXCJudW1iZXJcIiwgXCJiaWdpbnRcIl0pO1xuICAgIHJldHVybiBuZXcgVHJhbnNhY3Rpb25Bcmd1bWVudFUxMjgoYXJnVmFsKTtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdBZGRyZXNzKSB7XG4gICAgbGV0IGFkZHI6IEFjY291bnRBZGRyZXNzO1xuICAgIGlmICh0eXBlb2YgYXJnVmFsID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBhZGRyID0gQWNjb3VudEFkZHJlc3MuZnJvbUhleChhcmdWYWwpO1xuICAgIH0gZWxzZSBpZiAoYXJnVmFsIGluc3RhbmNlb2YgQWNjb3VudEFkZHJlc3MpIHtcbiAgICAgIGFkZHIgPSBhcmdWYWw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYWNjb3VudCBhZGRyZXNzLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBUcmFuc2FjdGlvbkFyZ3VtZW50QWRkcmVzcyhhZGRyKTtcbiAgfVxuICBpZiAoYXJnVHlwZSBpbnN0YW5jZW9mIFR5cGVUYWdWZWN0b3IgJiYgYXJnVHlwZS52YWx1ZSBpbnN0YW5jZW9mIFR5cGVUYWdVOCkge1xuICAgIGlmICghKGFyZ1ZhbCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7YXJnVmFsfSBzaG91bGQgYmUgYW4gaW5zdGFuY2Ugb2YgVWludDhBcnJheWApO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uQXJndW1lbnRVOFZlY3RvcihhcmdWYWwpO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biB0eXBlIGZvciBUcmFuc2FjdGlvbkFyZ3VtZW50LlwiKTtcbn1cbiJdLCJuYW1lcyI6WyJIZXhTdHJpbmciLCJUeXBlVGFnQm9vbCIsIlR5cGVUYWdVOCIsIlR5cGVUYWdVNjQiLCJUeXBlVGFnVTEyOCIsIlR5cGVUYWdBZGRyZXNzIiwiQWNjb3VudEFkZHJlc3MiLCJUeXBlVGFnVmVjdG9yIiwiVHlwZVRhZ1N0cnVjdCIsIlN0cnVjdFRhZyIsIklkZW50aWZpZXIiLCJUcmFuc2FjdGlvbkFyZ3VtZW50Qm9vbCIsIlRyYW5zYWN0aW9uQXJndW1lbnRVNjQiLCJUcmFuc2FjdGlvbkFyZ3VtZW50VTEyOCIsIlRyYW5zYWN0aW9uQXJndW1lbnRBZGRyZXNzIiwiVHJhbnNhY3Rpb25Bcmd1bWVudFU4IiwiVHJhbnNhY3Rpb25Bcmd1bWVudFU4VmVjdG9yIiwiYXNzZXJ0VHlwZSIsInZhbCIsInR5cGVzIiwibWVzc2FnZSIsImluY2x1ZGVzIiwiRXJyb3IiLCJBcnJheSIsImpvaW4iLCJiYWlsIiwiaXNXaGl0ZVNwYWNlIiwiYyIsIm1hdGNoIiwiaXNWYWxpZEFscGhhYmV0aWMiLCJuZXh0VG9rZW4iLCJ0YWdTdHIiLCJwb3MiLCJzbGljZSIsInJlcyIsImkiLCJsZW5ndGgiLCJjaGFyIiwidG9rZW5pemUiLCJ0b2tlbnMiLCJ0b2tlbiIsInNpemUiLCJwdXNoIiwiVHlwZVRhZ1BhcnNlciIsImNvbnN0cnVjdG9yIiwiY29uc3VtZSIsInRhcmdldFRva2VuIiwic2hpZnQiLCJwYXJzZUNvbW1hTGlzdCIsImVuZFRva2VuIiwiYWxsb3dUcmFpbGxpbmdDb21tYSIsInBhcnNlVHlwZVRhZyIsInRva2VuVHkiLCJ0b2tlblZhbCIsInN0YXJ0c1dpdGgiLCJhZGRyZXNzIiwibW9kdWxlVG9rZW5UeSIsIm1vZHVsZSIsIm5hbWVUb2tlblR5IiwibmFtZSIsInR5VGFncyIsInN0cnVjdFRhZyIsImZyb21IZXgiLCJzZXJpYWxpemVBcmciLCJhcmdWYWwiLCJhcmdUeXBlIiwic2VyaWFsaXplciIsInNlcmlhbGl6ZUJvb2wiLCJzZXJpYWxpemVVOCIsInNlcmlhbGl6ZVU2NCIsInNlcmlhbGl6ZVUxMjgiLCJhZGRyIiwic2VyaWFsaXplIiwidmFsdWUiLCJVaW50OEFycmF5Iiwic2VyaWFsaXplQnl0ZXMiLCJzZXJpYWxpemVTdHIiLCJzZXJpYWxpemVVMzJBc1VsZWIxMjgiLCJmb3JFYWNoIiwiYXJnIiwiYXJnVG9UcmFuc2FjdGlvbkFyZ3VtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/builder_utils.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/transaction_builder/index.ts":
/*!***************************************************!*\
  !*** ./ohio-sdk/sdk/transaction_builder/index.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BCS\": () => (/* reexport module object */ _bcs__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   \"TxnBuilderTypes\": () => (/* reexport module object */ _aptos_types__WEBPACK_IMPORTED_MODULE_2__)\n/* harmony export */ });\n/* harmony import */ var _builder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./builder */ \"./ohio-sdk/sdk/transaction_builder/builder.ts\");\n/* harmony import */ var _bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bcs */ \"./ohio-sdk/sdk/transaction_builder/bcs/index.ts\");\n/* harmony import */ var _aptos_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aptos_types */ \"./ohio-sdk/sdk/transaction_builder/aptos_types/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_builder__WEBPACK_IMPORTED_MODULE_0__, _bcs__WEBPACK_IMPORTED_MODULE_1__, _aptos_types__WEBPACK_IMPORTED_MODULE_2__]);\n([_builder__WEBPACK_IMPORTED_MODULE_0__, _bcs__WEBPACK_IMPORTED_MODULE_1__, _aptos_types__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _builder__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"BCS\",\"TxnBuilderTypes\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _builder__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHJhbnNhY3Rpb25fYnVpbGRlci9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUNHO0FBQ29CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvc2RrL3RyYW5zYWN0aW9uX2J1aWxkZXIvaW5kZXgudHM/MmY2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9idWlsZGVyXCI7XG5leHBvcnQgKiBhcyBCQ1MgZnJvbSBcIi4vYmNzXCI7XG5leHBvcnQgKiBhcyBUeG5CdWlsZGVyVHlwZXMgZnJvbSBcIi4vYXB0b3NfdHlwZXNcIjtcbiJdLCJuYW1lcyI6WyJCQ1MiLCJUeG5CdWlsZGVyVHlwZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/transaction_builder/index.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/types.ts":
/*!*******************************!*\
  !*** ./ohio-sdk/sdk/types.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Types\": () => (/* reexport module object */ _api_data_contracts__WEBPACK_IMPORTED_MODULE_0__)\n/* harmony export */ });\n/* harmony import */ var _api_data_contracts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api/data-contracts */ \"./ohio-sdk/sdk/api/data-contracts.ts\");\n// A convenience re-export from the lower level generated code\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdHlwZXMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw4REFBOEQ7QUFDaEI7QUFFN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9zZGsvdHlwZXMudHM/NTYxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBIGNvbnZlbmllbmNlIHJlLWV4cG9ydCBmcm9tIHRoZSBsb3dlciBsZXZlbCBnZW5lcmF0ZWQgY29kZVxuaW1wb3J0ICogYXMgVHlwZXMgZnJvbSBcIi4vYXBpL2RhdGEtY29udHJhY3RzXCI7XG5cbmV4cG9ydCB7IFR5cGVzIH07XG4iXSwibmFtZXMiOlsiVHlwZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/types.ts\n");

/***/ }),

/***/ "./ohio-sdk/sdk/util.ts":
/*!******************************!*\
  !*** ./ohio-sdk/sdk/util.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sleep\": () => (/* binding */ sleep)\n/* harmony export */ });\nasync function sleep(timeMs) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, timeMs);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9zZGsvdXRpbC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBSU8sZUFBZUEsS0FBSyxDQUFDQyxNQUFjLEVBQWlCO0lBQ3pELE9BQU8sSUFBSUMsT0FBTyxDQUFDLENBQUNDLE9BQU8sR0FBSztRQUM5QkMsVUFBVSxDQUFDRCxPQUFPLEVBQUVGLE1BQU0sQ0FBQyxDQUFDO0tBQzdCLENBQUMsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvc2RrL3V0aWwudHM/MDYxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSBOdWxsYWJsZTxUPiA9IHsgW1AgaW4ga2V5b2YgVF06IFRbUF0gfCBudWxsIH07XG5cbmV4cG9ydCB0eXBlIEFueU9iamVjdCA9IHsgW2tleTogc3RyaW5nXTogYW55IH07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzbGVlcCh0aW1lTXM6IG51bWJlcik6IFByb21pc2U8bnVsbD4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVNcyk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbInNsZWVwIiwidGltZU1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/sdk/util.ts\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _src_components_navbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/components/navbar */ \"./src/components/navbar.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_components_navbar__WEBPACK_IMPORTED_MODULE_3__]);\n_src_components_navbar__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst Home = ()=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Box, {\n        bg: \"white\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_components_navbar__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {}, void 0, false, {\n                fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/pages/index.tsx\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Center, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Grid, {\n                    gridTemplateColumns: {\n                        sm: \"repeat(1, 1fr)\",\n                        md: \"repeat(2, 1fr)\",\n                        lg: \"repeat(3, 1fr)\"\n                    },\n                    gap: 6\n                }, void 0, false, {\n                    fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/pages/index.tsx\",\n                    lineNumber: 11,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/pages/index.tsx\",\n                lineNumber: 10,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/pages/index.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN5QjtBQUMyQjtBQUNQO0FBRTdDLE1BQU1LLElBQUksR0FBYSxJQUFNO0lBQzNCLHFCQUNFLDhEQUFDRixpREFBRztRQUFDRyxFQUFFLEVBQUMsT0FBTzs7MEJBQ2IsOERBQUNGLDhEQUFNOzs7O3lCQUFHOzBCQUNWLDhEQUFDSCxvREFBTTswQkFDTCw0RUFBQ0Msa0RBQUk7b0JBQUNLLG1CQUFtQixFQUFFO3dCQUFDQyxFQUFFLEVBQUUsZ0JBQWdCO3dCQUFFQyxFQUFFLEVBQUUsZ0JBQWdCO3dCQUFFQyxFQUFFLEVBQUUsZ0JBQWdCO3FCQUFDO29CQUFFQyxHQUFHLEVBQUUsQ0FBQzs7Ozs7NkJBRTlGOzs7Ozt5QkFDQTs7Ozs7O2lCQUNMLENBQ1A7Q0FDRjtBQUVELGlFQUFlTixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vcGFnZXMvaW5kZXgudHN4PzA3ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0UGFnZSB9IGZyb20gJ25leHQnXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBDZW50ZXIsIEdyaWQsIEJveCB9IGZyb20gJ0BjaGFrcmEtdWkvcmVhY3QnXG5pbXBvcnQgTmF2YmFyIGZyb20gJy4uL3NyYy9jb21wb25lbnRzL25hdmJhcidcblxuY29uc3QgSG9tZTogTmV4dFBhZ2UgPSAoKSA9PiB7ICBcbiAgcmV0dXJuIChcbiAgICA8Qm94IGJnPSd3aGl0ZSc+XG4gICAgICA8TmF2YmFyIC8+XG4gICAgICA8Q2VudGVyPlxuICAgICAgICA8R3JpZCBncmlkVGVtcGxhdGVDb2x1bW5zPXt7c206ICdyZXBlYXQoMSwgMWZyKScsIG1kOiAncmVwZWF0KDIsIDFmciknLCBsZzogJ3JlcGVhdCgzLCAxZnIpJ319IGdhcD17Nn0+XG4gICAgICAgICAgXG4gICAgICAgIDwvR3JpZD5cbiAgICAgIDwvQ2VudGVyPlxuICAgIDwvQm94PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEhvbWUiXSwibmFtZXMiOlsiUmVhY3QiLCJDZW50ZXIiLCJHcmlkIiwiQm94IiwiTmF2YmFyIiwiSG9tZSIsImJnIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsInNtIiwibWQiLCJsZyIsImdhcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "./src/components/navbar.tsx":
/*!***********************************!*\
  !*** ./src/components/navbar.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_icons_bi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-icons/bi */ \"react-icons/bi\");\n/* harmony import */ var react_icons_bi__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_icons_bi__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/icons */ \"@chakra-ui/icons\");\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ohio-sdk/sdk */ \"./ohio-sdk/sdk/index.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__]);\n_ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\nconst Navbar = ()=>{\n    const NODE_URL = \"http://54.225.13.60:8080\" || 0;\n    const FAUCET_URL = \"http://54.225.13.60:8000\" || 0;\n    const client = new _ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.AptosClient(NODE_URL);\n    const { colorMode , toggleColorMode  } = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.useColorMode)();\n    const { 0: address , 1: setAddress  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const shortenString = (str, n)=>{\n        return str.length > n ? str.slice(0, n - 1) + \"...\" : str;\n    };\n    const handleWalletConnect = async ()=>{\n        const result = await window.aptos.connect();\n        if (result.address) {\n            setAddress(result.address);\n        }\n        console.log(result);\n    };\n    const checkWalletAddress = async ()=>{\n        const status = await window.aptos.isConnected();\n        if (status) {\n            const accountAddress = await window.aptos.account();\n            setAddress(accountAddress.address);\n        }\n    };\n    const disconnect = async ()=>{\n        await window.aptos.disconnect();\n    };\n    const sendTransaction = async ()=>{\n        console.log(address);\n        const token = new _ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.TxnBuilderTypes.TypeTagStruct(_ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.TxnBuilderTypes.StructTag.fromString(\"0x1::aptos_coin::AptosCoin\"));\n        const transaction = new _ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.TxnBuilderTypes.TransactionPayloadScriptFunction(_ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.TxnBuilderTypes.ScriptFunction.natural(\"0x1::coin\", \"transfer\", [\n            token\n        ], [\n            _ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.BCS.bcsToBytes(_ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.TxnBuilderTypes.AccountAddress.fromHex(\"0xc4688d3defda966a30c1fdab7e7f9fa600f81ad65ff39d07933ae4069d8530ca\")),\n            _ohio_sdk_sdk__WEBPACK_IMPORTED_MODULE_5__.BCS.bcsSerializeUint64(1000)\n        ]));\n        const response = await window.aptos.signAndSubmitTransaction(transaction);\n        // const signedTransaction = await (window as any).aptos.signTransaction(transaction)\n        console.log(response);\n    };\n    const deployContract = async ()=>{\n        let payload = {\n            type: \"script_payload\",\n            // modules: [{ bytecode: contract.bytecode, abi: {  \n            //   address: address,\n            //   name: \"luka\",\n            //   friends: [],\n            //   exposed_functions: [],\n            //   structs: []\n            // } \n            // }],\n            code: {\n                bytecode: \"6a226a490000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001048656c6c6f20426c6f636b636861696e00000000000000000000000000000000\"\n            },\n            type_arguments: [],\n            arguments: [\n                \"0xf087148407be4a0eac45461dbd7c797d3946e0f4\"\n            ]\n        };\n        let txnRequest = await client.generateTransaction(address, payload);\n        console.log(txnRequest);\n        const resp = await window.aptos.signAndSubmitTransaction(txnRequest);\n        await client.waitForTransaction(resp.hash);\n        console.log(resp);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkWalletAddress();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Box, {\n            bg: (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.useColorModeValue)(\"gray.100\", \"gray.900\"),\n            px: 4,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                h: 16,\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Box, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Text, {\n                            children: \"Interact Test\"\n                        }, void 0, false, {\n                            fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                            lineNumber: 97,\n                            columnNumber: 16\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                        lineNumber: 97,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Flex, {\n                        alignItems: \"center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Stack, {\n                            direction: \"row\",\n                            spacing: 7,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                    onClick: toggleColorMode,\n                                    children: colorMode === \"light\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_4__.MoonIcon, {}, void 0, false, {\n                                        fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                        lineNumber: 102,\n                                        columnNumber: 42\n                                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_4__.SunIcon, {}, void 0, false, {\n                                        fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                        lineNumber: 102,\n                                        columnNumber: 57\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                    lineNumber: 101,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                    bgGradient: \"linear(to-br, #0EA4FF, #0AB7AA)\",\n                                    color: \"white\",\n                                    opacity: \"0.8\",\n                                    _hover: {\n                                        opacity: \"1\"\n                                    },\n                                    onClick: address ? disconnect : handleWalletConnect,\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_icons_bi__WEBPACK_IMPORTED_MODULE_3__.BiWallet, {}, void 0, false, {\n                                            fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                            lineNumber: 113,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        address ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: [\n                                                \"\\xa0\\xa0\",\n                                                shortenString(address, 12)\n                                            ]\n                                        }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: \"\\xa0\\xa0Connect Wallet\"\n                                        }, void 0, false)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                    lineNumber: 104,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                    onClick: sendTransaction,\n                                    children: \"transaction\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                    lineNumber: 124,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                    onClick: deployContract,\n                                    children: \"deploy\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                                    lineNumber: 125,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                            lineNumber: 100,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                        lineNumber: 99,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n                lineNumber: 96,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/fujiwaraluka/Works/Web3.0/ZKPchain/web/interact-test/interact-app/src/components/navbar.tsx\",\n            lineNumber: 95,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Navbar);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/navbar.tsx\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/index.js":
/*!**********************************************!*\
  !*** ./ohio-sdk/node_modules/axios/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./ohio-sdk/node_modules/axios/lib/axios.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUEscUdBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2luZGV4LmpzPzBkNDIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2xpYi9heGlvcycpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/adapters/http.js":
/*!**********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/adapters/http.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./ohio-sdk/node_modules/axios/lib/core/settle.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./ohio-sdk/node_modules/axios/lib/core/buildFullPath.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./ohio-sdk/node_modules/axios/lib/helpers/buildURL.js\");\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar httpFollow = (__webpack_require__(/*! follow-redirects */ \"./ohio-sdk/node_modules/follow-redirects/index.js\").http);\nvar httpsFollow = (__webpack_require__(/*! follow-redirects */ \"./ohio-sdk/node_modules/follow-redirects/index.js\").https);\nvar url = __webpack_require__(/*! url */ \"url\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar VERSION = (__webpack_require__(/*! ./../env/data */ \"./ohio-sdk/node_modules/axios/lib/env/data.js\").version);\nvar createError = __webpack_require__(/*! ../core/createError */ \"./ohio-sdk/node_modules/axios/lib/core/createError.js\");\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"./ohio-sdk/node_modules/axios/lib/core/enhanceError.js\");\nvar transitionalDefaults = __webpack_require__(/*! ../defaults/transitional */ \"./ohio-sdk/node_modules/axios/lib/defaults/transitional.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js\");\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n    var resolve = function resolve(value) {\n      done();\n      resolvePromise(value);\n    };\n    var rejected = false;\n    var reject = function reject(value) {\n      done();\n      rejected = true;\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n    var headerNames = {};\n\n    Object.keys(headers).forEach(function storeLowerName(name) {\n      headerNames[name.toLowerCase()] = name;\n    });\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    if ('user-agent' in headerNames) {\n      // User-Agent is specified; handle case where no UA header is desired\n      if (!headers[headerNames['user-agent']]) {\n        delete headers[headerNames['user-agent']];\n      }\n      // Otherwise, use specified value\n    } else {\n      // Only set header if it hasn't been set in config\n      headers['User-Agent'] = 'axios/' + VERSION;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(createError('Request body larger than maxBodyLength limit', config));\n      }\n\n      // Add Content-Length header if data exists\n      if (!headerNames['content-length']) {\n        headers['Content-Length'] = data.length;\n      }\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth && headerNames.authorization) {\n      delete headers[headerNames.authorization];\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    try {\n      buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      var customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      reject(customErr);\n    }\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        var totalResponseBytes = 0;\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destoy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n          stream.destroy();\n          reject(createError('error request aborted', config, 'ERR_REQUEST_ABORTED', lastRequest));\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          try {\n            var responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (config.responseType !== 'arraybuffer') {\n              responseData = responseData.toString(config.responseEncoding);\n              if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            reject(enhanceError(err, config, err.code, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      var timeout = parseInt(config.timeout, 10);\n\n      if (isNaN(timeout)) {\n        reject(createError(\n          'error trying to parse `config.timeout` to int',\n          config,\n          'ERR_PARSE_TIMEOUT',\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        req.abort();\n        var timeoutErrorMessage = '';\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        } else {\n          timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n        }\n        var transitional = config.transitional || transitionalDefaults;\n        reject(createError(\n          timeoutErrorMessage,\n          config,\n          transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n          req\n        ));\n      });\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/adapters/http.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/adapters/xhr.js":
/*!*********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/adapters/xhr.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./ohio-sdk/node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./ohio-sdk/node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./ohio-sdk/node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./ohio-sdk/node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./ohio-sdk/node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./ohio-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./ohio-sdk/node_modules/axios/lib/core/createError.js\");\nvar transitionalDefaults = __webpack_require__(/*! ../defaults/transitional */ \"./ohio-sdk/node_modules/axios/lib/defaults/transitional.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/adapters/xhr.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/axios.js":
/*!**************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/axios.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./ohio-sdk/node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./ohio-sdk/node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./ohio-sdk/node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./ohio-sdk/node_modules/axios/lib/defaults/index.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./ohio-sdk/node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/isCancel.js\");\naxios.VERSION = (__webpack_require__(/*! ./env/data */ \"./ohio-sdk/node_modules/axios/lib/env/data.js\").version);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./ohio-sdk/node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./ohio-sdk/node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports[\"default\"] = axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQywyREFBUztBQUM3QixXQUFXLG1CQUFPLENBQUMseUVBQWdCO0FBQ25DLFlBQVksbUJBQU8sQ0FBQyxxRUFBYztBQUNsQyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBb0I7QUFDOUMsZUFBZSxtQkFBTyxDQUFDLHVFQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQywyRUFBaUI7QUFDeEMsb0JBQW9CLG1CQUFPLENBQUMscUZBQXNCO0FBQ2xELGlCQUFpQixtQkFBTyxDQUFDLCtFQUFtQjtBQUM1QyxnQkFBZ0IsZ0dBQTZCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyw2RUFBa0I7O0FBRXpDO0FBQ0EscUJBQXFCLG1CQUFPLENBQUMseUZBQXdCOztBQUVyRDs7QUFFQTtBQUNBLHlCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanM/MjZkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBiaW5kID0gcmVxdWlyZSgnLi9oZWxwZXJzL2JpbmQnKTtcbnZhciBBeGlvcyA9IHJlcXVpcmUoJy4vY29yZS9BeGlvcycpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9jb3JlL21lcmdlQ29uZmlnJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGRlZmF1bHRDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqIEByZXR1cm4ge0F4aW9zfSBBIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICovXG5mdW5jdGlvbiBjcmVhdGVJbnN0YW5jZShkZWZhdWx0Q29uZmlnKSB7XG4gIHZhciBjb250ZXh0ID0gbmV3IEF4aW9zKGRlZmF1bHRDb25maWcpO1xuICB2YXIgaW5zdGFuY2UgPSBiaW5kKEF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0LCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGF4aW9zLnByb3RvdHlwZSB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIEF4aW9zLnByb3RvdHlwZSwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBjb250ZXh0IHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgY29udGV4dCk7XG5cbiAgLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuICBpbnN0YW5jZS5jcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoaW5zdGFuY2VDb25maWcpIHtcbiAgICByZXR1cm4gY3JlYXRlSW5zdGFuY2UobWVyZ2VDb25maWcoZGVmYXVsdENvbmZpZywgaW5zdGFuY2VDb25maWcpKTtcbiAgfTtcblxuICByZXR1cm4gaW5zdGFuY2U7XG59XG5cbi8vIENyZWF0ZSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB0byBiZSBleHBvcnRlZFxudmFyIGF4aW9zID0gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdHMpO1xuXG4vLyBFeHBvc2UgQXhpb3MgY2xhc3MgdG8gYWxsb3cgY2xhc3MgaW5oZXJpdGFuY2VcbmF4aW9zLkF4aW9zID0gQXhpb3M7XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5heGlvcy5WRVJTSU9OID0gcmVxdWlyZSgnLi9lbnYvZGF0YScpLnZlcnNpb247XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbi8vIEV4cG9zZSBpc0F4aW9zRXJyb3JcbmF4aW9zLmlzQXhpb3NFcnJvciA9IHJlcXVpcmUoJy4vaGVscGVycy9pc0F4aW9zRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBheGlvcztcblxuLy8gQWxsb3cgdXNlIG9mIGRlZmF1bHQgaW1wb3J0IHN5bnRheCBpbiBUeXBlU2NyaXB0XG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gYXhpb3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/axios.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js":
/*!**********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWwuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsLmpzP2FjMjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIEEgYENhbmNlbGAgaXMgYW4gb2JqZWN0IHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gb3BlcmF0aW9uIGlzIGNhbmNlbGVkLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICovXG5mdW5jdGlvbiBDYW5jZWwobWVzc2FnZSkge1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xufVxuXG5DYW5jZWwucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiAnQ2FuY2VsJyArICh0aGlzLm1lc3NhZ2UgPyAnOiAnICsgdGhpcy5tZXNzYWdlIDogJycpO1xufTtcblxuQ2FuY2VsLnByb3RvdHlwZS5fX0NBTkNFTF9fID0gdHJ1ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/cancel/CancelToken.js":
/*!***************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/cancel/CancelToken.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixhQUFhLG1CQUFPLENBQUMsb0VBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcz81NzM4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4vQ2FuY2VsJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsVG9rZW5gIGlzIGFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlcXVlc3QgY2FuY2VsbGF0aW9uIG9mIGFuIG9wZXJhdGlvbi5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsVG9rZW4oZXhlY3V0b3IpIHtcbiAgaWYgKHR5cGVvZiBleGVjdXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciByZXNvbHZlUHJvbWlzZTtcblxuICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiBwcm9taXNlRXhlY3V0b3IocmVzb2x2ZSkge1xuICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgfSk7XG5cbiAgdmFyIHRva2VuID0gdGhpcztcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICB0aGlzLnByb21pc2UudGhlbihmdW5jdGlvbihjYW5jZWwpIHtcbiAgICBpZiAoIXRva2VuLl9saXN0ZW5lcnMpIHJldHVybjtcblxuICAgIHZhciBpO1xuICAgIHZhciBsID0gdG9rZW4uX2xpc3RlbmVycy5sZW5ndGg7XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICB0b2tlbi5fbGlzdGVuZXJzW2ldKGNhbmNlbCk7XG4gICAgfVxuICAgIHRva2VuLl9saXN0ZW5lcnMgPSBudWxsO1xuICB9KTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICB0aGlzLnByb21pc2UudGhlbiA9IGZ1bmN0aW9uKG9uZnVsZmlsbGVkKSB7XG4gICAgdmFyIF9yZXNvbHZlO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKSB7XG4gICAgICB0b2tlbi5zdWJzY3JpYmUocmVzb2x2ZSk7XG4gICAgICBfcmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgfSkudGhlbihvbmZ1bGZpbGxlZCk7XG5cbiAgICBwcm9taXNlLmNhbmNlbCA9IGZ1bmN0aW9uIHJlamVjdCgpIHtcbiAgICAgIHRva2VuLnVuc3Vic2NyaWJlKF9yZXNvbHZlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG5cbiAgZXhlY3V0b3IoZnVuY3Rpb24gY2FuY2VsKG1lc3NhZ2UpIHtcbiAgICBpZiAodG9rZW4ucmVhc29uKSB7XG4gICAgICAvLyBDYW5jZWxsYXRpb24gaGFzIGFscmVhZHkgYmVlbiByZXF1ZXN0ZWRcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0b2tlbi5yZWFzb24gPSBuZXcgQ2FuY2VsKG1lc3NhZ2UpO1xuICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKi9cbkNhbmNlbFRva2VuLnByb3RvdHlwZS50aHJvd0lmUmVxdWVzdGVkID0gZnVuY3Rpb24gdGhyb3dJZlJlcXVlc3RlZCgpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgdGhyb3cgdGhpcy5yZWFzb247XG4gIH1cbn07XG5cbi8qKlxuICogU3Vic2NyaWJlIHRvIHRoZSBjYW5jZWwgc2lnbmFsXG4gKi9cblxuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnN1YnNjcmliZSA9IGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICBsaXN0ZW5lcih0aGlzLnJlYXNvbik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHRoaXMuX2xpc3RlbmVycykge1xuICAgIHRoaXMuX2xpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9saXN0ZW5lcnMgPSBbbGlzdGVuZXJdO1xuICB9XG59O1xuXG4vKipcbiAqIFVuc3Vic2NyaWJlIGZyb20gdGhlIGNhbmNlbCBzaWduYWxcbiAqL1xuXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudW5zdWJzY3JpYmUgPSBmdW5jdGlvbiB1bnN1YnNjcmliZShsaXN0ZW5lcikge1xuICBpZiAoIXRoaXMuX2xpc3RlbmVycykge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgaW5kZXggPSB0aGlzLl9saXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICB0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gKiBjYW5jZWxzIHRoZSBgQ2FuY2VsVG9rZW5gLlxuICovXG5DYW5jZWxUb2tlbi5zb3VyY2UgPSBmdW5jdGlvbiBzb3VyY2UoKSB7XG4gIHZhciBjYW5jZWw7XG4gIHZhciB0b2tlbiA9IG5ldyBDYW5jZWxUb2tlbihmdW5jdGlvbiBleGVjdXRvcihjKSB7XG4gICAgY2FuY2VsID0gYztcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgdG9rZW46IHRva2VuLFxuICAgIGNhbmNlbDogY2FuY2VsXG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhbmNlbFRva2VuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/cancel/CancelToken.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/cancel/isCancel.js":
/*!************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/cancel/isCancel.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcz9iYTliIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/cancel/isCancel.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/Axios.js":
/*!*******************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/Axios.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./ohio-sdk/node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./ohio-sdk/node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./ohio-sdk/node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./ohio-sdk/node_modules/axios/lib/core/mergeConfig.js\");\nvar validator = __webpack_require__(/*! ../helpers/validator */ \"./ohio-sdk/node_modules/axios/lib/helpers/validator.js\");\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDhEQUFZO0FBQ2hDLGVBQWUsbUJBQU8sQ0FBQyxrRkFBcUI7QUFDNUMseUJBQXlCLG1CQUFPLENBQUMsMEZBQXNCO0FBQ3ZELHNCQUFzQixtQkFBTyxDQUFDLG9GQUFtQjtBQUNqRCxrQkFBa0IsbUJBQU8sQ0FBQyw0RUFBZTtBQUN6QyxnQkFBZ0IsbUJBQU8sQ0FBQyxvRkFBc0I7O0FBRTlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3MuanM/NTc1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBidWlsZFVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBJbnRlcmNlcHRvck1hbmFnZXIgPSByZXF1aXJlKCcuL0ludGVyY2VwdG9yTWFuYWdlcicpO1xudmFyIGRpc3BhdGNoUmVxdWVzdCA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hSZXF1ZXN0Jyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL21lcmdlQ29uZmlnJyk7XG52YXIgdmFsaWRhdG9yID0gcmVxdWlyZSgnLi4vaGVscGVycy92YWxpZGF0b3InKTtcblxudmFyIHZhbGlkYXRvcnMgPSB2YWxpZGF0b3IudmFsaWRhdG9ycztcbi8qKlxuICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGluc3RhbmNlQ29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIEF4aW9zKGluc3RhbmNlQ29uZmlnKSB7XG4gIHRoaXMuZGVmYXVsdHMgPSBpbnN0YW5jZUNvbmZpZztcbiAgdGhpcy5pbnRlcmNlcHRvcnMgPSB7XG4gICAgcmVxdWVzdDogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpLFxuICAgIHJlc3BvbnNlOiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKClcbiAgfTtcbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcgc3BlY2lmaWMgZm9yIHRoaXMgcmVxdWVzdCAobWVyZ2VkIHdpdGggdGhpcy5kZWZhdWx0cylcbiAqL1xuQXhpb3MucHJvdG90eXBlLnJlcXVlc3QgPSBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZ09yVXJsLCBjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWdPclVybCA9PT0gJ3N0cmluZycpIHtcbiAgICBjb25maWcgPSBjb25maWcgfHwge307XG4gICAgY29uZmlnLnVybCA9IGNvbmZpZ09yVXJsO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZyA9IGNvbmZpZ09yVXJsIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbmFsID0gY29uZmlnLnRyYW5zaXRpb25hbDtcblxuICBpZiAodHJhbnNpdGlvbmFsICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YWxpZGF0b3IuYXNzZXJ0T3B0aW9ucyh0cmFuc2l0aW9uYWwsIHtcbiAgICAgIHNpbGVudEpTT05QYXJzaW5nOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4pLFxuICAgICAgZm9yY2VkSlNPTlBhcnNpbmc6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbiksXG4gICAgICBjbGFyaWZ5VGltZW91dEVycm9yOiB2YWxpZGF0b3JzLnRyYW5zaXRpb25hbCh2YWxpZGF0b3JzLmJvb2xlYW4pXG4gICAgfSwgZmFsc2UpO1xuICB9XG5cbiAgLy8gZmlsdGVyIG91dCBza2lwcGVkIGludGVyY2VwdG9yc1xuICB2YXIgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4gPSBbXTtcbiAgdmFyIHN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyA9IHRydWU7XG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlcXVlc3QuZm9yRWFjaChmdW5jdGlvbiB1bnNoaWZ0UmVxdWVzdEludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIGlmICh0eXBlb2YgaW50ZXJjZXB0b3IucnVuV2hlbiA9PT0gJ2Z1bmN0aW9uJyAmJiBpbnRlcmNlcHRvci5ydW5XaGVuKGNvbmZpZykgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzID0gc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzICYmIGludGVyY2VwdG9yLnN5bmNocm9ub3VzO1xuXG4gICAgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdmFyIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbiA9IFtdO1xuICB0aGlzLmludGVyY2VwdG9ycy5yZXNwb25zZS5mb3JFYWNoKGZ1bmN0aW9uIHB1c2hSZXNwb25zZUludGVyY2VwdG9ycyhpbnRlcmNlcHRvcikge1xuICAgIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB2YXIgcHJvbWlzZTtcblxuICBpZiAoIXN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycykge1xuICAgIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG5cbiAgICBBcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseShjaGFpbiwgcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4pO1xuICAgIGNoYWluID0gY2hhaW4uY29uY2F0KHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbik7XG5cbiAgICBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG4gICAgd2hpbGUgKGNoYWluLmxlbmd0aCkge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfVxuXG5cbiAgdmFyIG5ld0NvbmZpZyA9IGNvbmZpZztcbiAgd2hpbGUgKHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLmxlbmd0aCkge1xuICAgIHZhciBvbkZ1bGZpbGxlZCA9IHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCk7XG4gICAgdmFyIG9uUmVqZWN0ZWQgPSByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpO1xuICAgIHRyeSB7XG4gICAgICBuZXdDb25maWcgPSBvbkZ1bGZpbGxlZChuZXdDb25maWcpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBvblJlamVjdGVkKGVycm9yKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHRyeSB7XG4gICAgcHJvbWlzZSA9IGRpc3BhdGNoUmVxdWVzdChuZXdDb25maWcpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gIH1cblxuICB3aGlsZSAocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLmxlbmd0aCkge1xuICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4ocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCksIHJlc3BvbnNlSW50ZXJjZXB0b3JDaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsLFxuICAgICAgZGF0YTogKGNvbmZpZyB8fCB7fSkuZGF0YVxuICAgIH0pKTtcbiAgfTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiBkYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/Axios.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/InterceptorManager.js":
/*!********************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/InterceptorManager.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4REFBWTs7QUFFaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckI7QUFDQSxZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzP2FmZDgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIEludGVyY2VwdG9yTWFuYWdlcigpIHtcbiAgdGhpcy5oYW5kbGVycyA9IFtdO1xufVxuXG4vKipcbiAqIEFkZCBhIG5ldyBpbnRlcmNlcHRvciB0byB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3RlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGByZWplY3RgIGZvciBhIGBQcm9taXNlYFxuICpcbiAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS51c2UgPSBmdW5jdGlvbiB1c2UoZnVsZmlsbGVkLCByZWplY3RlZCwgb3B0aW9ucykge1xuICB0aGlzLmhhbmRsZXJzLnB1c2goe1xuICAgIGZ1bGZpbGxlZDogZnVsZmlsbGVkLFxuICAgIHJlamVjdGVkOiByZWplY3RlZCxcbiAgICBzeW5jaHJvbm91czogb3B0aW9ucyA/IG9wdGlvbnMuc3luY2hyb25vdXMgOiBmYWxzZSxcbiAgICBydW5XaGVuOiBvcHRpb25zID8gb3B0aW9ucy5ydW5XaGVuIDogbnVsbFxuICB9KTtcbiAgcmV0dXJuIHRoaXMuaGFuZGxlcnMubGVuZ3RoIC0gMTtcbn07XG5cbi8qKlxuICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IGlkIFRoZSBJRCB0aGF0IHdhcyByZXR1cm5lZCBieSBgdXNlYFxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmVqZWN0ID0gZnVuY3Rpb24gZWplY3QoaWQpIHtcbiAgaWYgKHRoaXMuaGFuZGxlcnNbaWRdKSB7XG4gICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICB9XG59O1xuXG4vKipcbiAqIEl0ZXJhdGUgb3ZlciBhbGwgdGhlIHJlZ2lzdGVyZWQgaW50ZXJjZXB0b3JzXG4gKlxuICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAqIGludGVyY2VwdG9ycyB0aGF0IG1heSBoYXZlIGJlY29tZSBgbnVsbGAgY2FsbGluZyBgZWplY3RgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgdXRpbHMuZm9yRWFjaCh0aGlzLmhhbmRsZXJzLCBmdW5jdGlvbiBmb3JFYWNoSGFuZGxlcihoKSB7XG4gICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgIGZuKGgpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEludGVyY2VwdG9yTWFuYWdlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/InterceptorManager.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/buildFullPath.js":
/*!***************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/buildFullPath.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./ohio-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./ohio-sdk/node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixvQkFBb0IsbUJBQU8sQ0FBQyw0RkFBMEI7QUFDdEQsa0JBQWtCLG1CQUFPLENBQUMsd0ZBQXdCOztBQUVsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvYnVpbGRGdWxsUGF0aC5qcz81OTMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGlzQWJzb2x1dGVVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwnKTtcbnZhciBjb21iaW5lVVJMcyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvY29tYmluZVVSTHMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIGJhc2VVUkwgd2l0aCB0aGUgcmVxdWVzdGVkVVJMLFxuICogb25seSB3aGVuIHRoZSByZXF1ZXN0ZWRVUkwgaXMgbm90IGFscmVhZHkgYW4gYWJzb2x1dGUgVVJMLlxuICogSWYgdGhlIHJlcXVlc3RVUkwgaXMgYWJzb2x1dGUsIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGUgcmVxdWVzdGVkVVJMIHVudG91Y2hlZC5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZXF1ZXN0ZWRVUkwgQWJzb2x1dGUgb3IgcmVsYXRpdmUgVVJMIHRvIGNvbWJpbmVcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBmdWxsIHBhdGhcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBidWlsZEZ1bGxQYXRoKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCkge1xuICBpZiAoYmFzZVVSTCAmJiAhaXNBYnNvbHV0ZVVSTChyZXF1ZXN0ZWRVUkwpKSB7XG4gICAgcmV0dXJuIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlcXVlc3RlZFVSTCk7XG4gIH1cbiAgcmV0dXJuIHJlcXVlc3RlZFVSTDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/buildFullPath.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/createError.js":
/*!*************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/createError.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./ohio-sdk/node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvY3JlYXRlRXJyb3IuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWdCOztBQUUzQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2NyZWF0ZUVycm9yLmpzPzQxNmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi9lbmhhbmNlRXJyb3InKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlRXJyb3IobWVzc2FnZSwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/createError.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/dispatchRequest.js":
/*!*****************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/dispatchRequest.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./ohio-sdk/node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./ohio-sdk/node_modules/axios/lib/defaults/index.js\");\nvar Cancel = __webpack_require__(/*! ../cancel/Cancel */ \"./ohio-sdk/node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4REFBWTtBQUNoQyxvQkFBb0IsbUJBQU8sQ0FBQyxnRkFBaUI7QUFDN0MsZUFBZSxtQkFBTyxDQUFDLGdGQUFvQjtBQUMzQyxlQUFlLG1CQUFPLENBQUMsd0VBQWE7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLDRFQUFrQjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLHVDQUF1QztBQUN2QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZGlzcGF0Y2hSZXF1ZXN0LmpzPzYwNjkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgdHJhbnNmb3JtRGF0YSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtRGF0YScpO1xudmFyIGlzQ2FuY2VsID0gcmVxdWlyZSgnLi4vY2FuY2VsL2lzQ2FuY2VsJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9DYW5jZWwnKTtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5mdW5jdGlvbiB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZykge1xuICBpZiAoY29uZmlnLmNhbmNlbFRva2VuKSB7XG4gICAgY29uZmlnLmNhbmNlbFRva2VuLnRocm93SWZSZXF1ZXN0ZWQoKTtcbiAgfVxuXG4gIGlmIChjb25maWcuc2lnbmFsICYmIGNvbmZpZy5zaWduYWwuYWJvcnRlZCkge1xuICAgIHRocm93IG5ldyBDYW5jZWwoJ2NhbmNlbGVkJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgIGNvbmZpZyxcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgY29uZmlnLFxuICAgICAgcmVzcG9uc2UuZGF0YSxcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICBjb25maWcudHJhbnNmb3JtUmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEsXG4gICAgICAgICAgcmVhc29uLnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlYXNvbik7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/dispatchRequest.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/enhanceError.js":
/*!**************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/enhanceError.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvZW5oYW5jZUVycm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2VuaGFuY2VFcnJvci5qcz82YjlmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIFN0YW5kYXJkXG4gICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAvLyBNaWNyb3NvZnRcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLFxuICAgICAgbnVtYmVyOiB0aGlzLm51bWJlcixcbiAgICAgIC8vIE1vemlsbGFcbiAgICAgIGZpbGVOYW1lOiB0aGlzLmZpbGVOYW1lLFxuICAgICAgbGluZU51bWJlcjogdGhpcy5saW5lTnVtYmVyLFxuICAgICAgY29sdW1uTnVtYmVyOiB0aGlzLmNvbHVtbk51bWJlcixcbiAgICAgIHN0YWNrOiB0aGlzLnN0YWNrLFxuICAgICAgLy8gQXhpb3NcbiAgICAgIGNvbmZpZzogdGhpcy5jb25maWcsXG4gICAgICBjb2RlOiB0aGlzLmNvZGUsXG4gICAgICBzdGF0dXM6IHRoaXMucmVzcG9uc2UgJiYgdGhpcy5yZXNwb25zZS5zdGF0dXMgPyB0aGlzLnJlc3BvbnNlLnN0YXR1cyA6IG51bGxcbiAgICB9O1xuICB9O1xuICByZXR1cm4gZXJyb3I7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/enhanceError.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/mergeConfig.js":
/*!*************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/mergeConfig.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDREQUFVOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLDJCQUEyQjtBQUMzQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzPzY4YTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG4vKipcbiAqIENvbmZpZy1zcGVjaWZpYyBtZXJnZS1mdW5jdGlvbiB3aGljaCBjcmVhdGVzIGEgbmV3IGNvbmZpZy1vYmplY3RcbiAqIGJ5IG1lcmdpbmcgdHdvIGNvbmZpZ3VyYXRpb24gb2JqZWN0cyB0b2dldGhlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMVxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzJcbiAqIEByZXR1cm5zIHtPYmplY3R9IE5ldyBvYmplY3QgcmVzdWx0aW5nIGZyb20gbWVyZ2luZyBjb25maWcyIHRvIGNvbmZpZzFcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZXJnZUNvbmZpZyhjb25maWcxLCBjb25maWcyKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBjb25maWcyID0gY29uZmlnMiB8fCB7fTtcbiAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGVlcFByb3BlcnRpZXMocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShjb25maWcxW3Byb3BdLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIHZhbHVlRnJvbUNvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzJbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBkZWZhdWx0VG9Db25maWcyKHByb3ApIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzJbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9IGVsc2UgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcxW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIG1lcmdlRGlyZWN0S2V5cyhwcm9wKSB7XG4gICAgaWYgKHByb3AgaW4gY29uZmlnMikge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbWVyZ2VNYXAgPSB7XG4gICAgJ3VybCc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ21ldGhvZCc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ2RhdGEnOiB2YWx1ZUZyb21Db25maWcyLFxuICAgICdiYXNlVVJMJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndHJhbnNmb3JtUmVxdWVzdCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zZm9ybVJlc3BvbnNlJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncGFyYW1zU2VyaWFsaXplcic6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RpbWVvdXQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0aW1lb3V0TWVzc2FnZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3dpdGhDcmVkZW50aWFscyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2FkYXB0ZXInOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdyZXNwb25zZVR5cGUnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd4c3JmQ29va2llTmFtZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3hzcmZIZWFkZXJOYW1lJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnb25VcGxvYWRQcm9ncmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ29uRG93bmxvYWRQcm9ncmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2RlY29tcHJlc3MnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdtYXhDb250ZW50TGVuZ3RoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnbWF4Qm9keUxlbmd0aCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RyYW5zcG9ydCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2h0dHBBZ2VudCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ2h0dHBzQWdlbnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdjYW5jZWxUb2tlbic6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3NvY2tldFBhdGgnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdyZXNwb25zZUVuY29kaW5nJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndmFsaWRhdGVTdGF0dXMnOiBtZXJnZURpcmVjdEtleXNcbiAgfTtcblxuICB1dGlscy5mb3JFYWNoKE9iamVjdC5rZXlzKGNvbmZpZzEpLmNvbmNhdChPYmplY3Qua2V5cyhjb25maWcyKSksIGZ1bmN0aW9uIGNvbXB1dGVDb25maWdWYWx1ZShwcm9wKSB7XG4gICAgdmFyIG1lcmdlID0gbWVyZ2VNYXBbcHJvcF0gfHwgbWVyZ2VEZWVwUHJvcGVydGllcztcbiAgICB2YXIgY29uZmlnVmFsdWUgPSBtZXJnZShwcm9wKTtcbiAgICAodXRpbHMuaXNVbmRlZmluZWQoY29uZmlnVmFsdWUpICYmIG1lcmdlICE9PSBtZXJnZURpcmVjdEtleXMpIHx8IChjb25maWdbcHJvcF0gPSBjb25maWdWYWx1ZSk7XG4gIH0pO1xuXG4gIHJldHVybiBjb25maWc7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/mergeConfig.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/settle.js":
/*!********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/settle.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./ohio-sdk/node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQixtQkFBTyxDQUFDLDRFQUFlOztBQUV6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLFVBQVU7QUFDckIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanM/NzM2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4vY3JlYXRlRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/settle.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/core/transformData.js":
/*!***************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/core/transformData.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./ohio-sdk/node_modules/axios/lib/defaults/index.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOERBQVk7QUFDaEMsZUFBZSxtQkFBTyxDQUFDLHdFQUFhOztBQUVwQztBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsZ0JBQWdCO0FBQzNCLGFBQWEsR0FBRztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcz9jNGE1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIGRhdGEgZm9yIGEgcmVxdWVzdCBvciBhIHJlc3BvbnNlXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBkYXRhIFRoZSBkYXRhIHRvIGJlIHRyYW5zZm9ybWVkXG4gKiBAcGFyYW0ge0FycmF5fSBoZWFkZXJzIFRoZSBoZWFkZXJzIGZvciB0aGUgcmVxdWVzdCBvciByZXNwb25zZVxuICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbn0gZm5zIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIEFycmF5IG9mIGZ1bmN0aW9uc1xuICogQHJldHVybnMgeyp9IFRoZSByZXN1bHRpbmcgdHJhbnNmb3JtZWQgZGF0YVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZGF0YSwgaGVhZGVycywgZm5zKSB7XG4gIHZhciBjb250ZXh0ID0gdGhpcyB8fCBkZWZhdWx0cztcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIHV0aWxzLmZvckVhY2goZm5zLCBmdW5jdGlvbiB0cmFuc2Zvcm0oZm4pIHtcbiAgICBkYXRhID0gZm4uY2FsbChjb250ZXh0LCBkYXRhLCBoZWFkZXJzKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGRhdGE7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/core/transformData.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/defaults/index.js":
/*!***********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/defaults/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ../helpers/normalizeHeaderName */ \"./ohio-sdk/node_modules/axios/lib/helpers/normalizeHeaderName.js\");\nvar enhanceError = __webpack_require__(/*! ../core/enhanceError */ \"./ohio-sdk/node_modules/axios/lib/core/enhanceError.js\");\nvar transitionalDefaults = __webpack_require__(/*! ./transitional */ \"./ohio-sdk/node_modules/axios/lib/defaults/transitional.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ../adapters/xhr */ \"./ohio-sdk/node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ../adapters/http */ \"./ohio-sdk/node_modules/axios/lib/adapters/http.js\");\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw0REFBVTtBQUM5QiwwQkFBMEIsbUJBQU8sQ0FBQyx3R0FBZ0M7QUFDbEUsbUJBQW1CLG1CQUFPLENBQUMsb0ZBQXNCO0FBQ2pELDJCQUEyQixtQkFBTyxDQUFDLGtGQUFnQjs7QUFFbkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1CQUFPLENBQUMsMEVBQWlCO0FBQ3ZDLElBQUk7QUFDSjtBQUNBLGNBQWMsbUJBQU8sQ0FBQyw0RUFBa0I7QUFDeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy9pbmRleC5qcz9jZmE3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi4vaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lJyk7XG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi4vY29yZS9lbmhhbmNlRXJyb3InKTtcbnZhciB0cmFuc2l0aW9uYWxEZWZhdWx0cyA9IHJlcXVpcmUoJy4vdHJhbnNpdGlvbmFsJyk7XG5cbnZhciBERUZBVUxUX0NPTlRFTlRfVFlQRSA9IHtcbiAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnXG59O1xuXG5mdW5jdGlvbiBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgdmFsdWUpIHtcbiAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzKSAmJiB1dGlscy5pc1VuZGVmaW5lZChoZWFkZXJzWydDb250ZW50LVR5cGUnXSkpIHtcbiAgICBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9IHZhbHVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldERlZmF1bHRBZGFwdGVyKCkge1xuICB2YXIgYWRhcHRlcjtcbiAgaWYgKHR5cGVvZiBYTUxIdHRwUmVxdWVzdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvLyBGb3IgYnJvd3NlcnMgdXNlIFhIUiBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4uL2FkYXB0ZXJzL3hocicpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwocHJvY2VzcykgPT09ICdbb2JqZWN0IHByb2Nlc3NdJykge1xuICAgIC8vIEZvciBub2RlIHVzZSBIVFRQIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnlTYWZlbHkocmF3VmFsdWUsIHBhcnNlciwgZW5jb2Rlcikge1xuICBpZiAodXRpbHMuaXNTdHJpbmcocmF3VmFsdWUpKSB7XG4gICAgdHJ5IHtcbiAgICAgIChwYXJzZXIgfHwgSlNPTi5wYXJzZSkocmF3VmFsdWUpO1xuICAgICAgcmV0dXJuIHV0aWxzLnRyaW0ocmF3VmFsdWUpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlLm5hbWUgIT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gKGVuY29kZXIgfHwgSlNPTi5zdHJpbmdpZnkpKHJhd1ZhbHVlKTtcbn1cblxudmFyIGRlZmF1bHRzID0ge1xuXG4gIHRyYW5zaXRpb25hbDogdHJhbnNpdGlvbmFsRGVmYXVsdHMsXG5cbiAgYWRhcHRlcjogZ2V0RGVmYXVsdEFkYXB0ZXIoKSxcblxuICB0cmFuc2Zvcm1SZXF1ZXN0OiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVxdWVzdChkYXRhLCBoZWFkZXJzKSB7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQWNjZXB0Jyk7XG4gICAgbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCAnQ29udGVudC1UeXBlJyk7XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNBcnJheUJ1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzU3RyZWFtKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0ZpbGUoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQmxvYihkYXRhKVxuICAgICkge1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyVmlldyhkYXRhKSkge1xuICAgICAgcmV0dXJuIGRhdGEuYnVmZmVyO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMoZGF0YSkpIHtcbiAgICAgIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLTgnKTtcbiAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc09iamVjdChkYXRhKSB8fCAoaGVhZGVycyAmJiBoZWFkZXJzWydDb250ZW50LVR5cGUnXSA9PT0gJ2FwcGxpY2F0aW9uL2pzb24nKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gICAgICByZXR1cm4gc3RyaW5naWZ5U2FmZWx5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgdmFyIHRyYW5zaXRpb25hbCA9IHRoaXMudHJhbnNpdGlvbmFsIHx8IGRlZmF1bHRzLnRyYW5zaXRpb25hbDtcbiAgICB2YXIgc2lsZW50SlNPTlBhcnNpbmcgPSB0cmFuc2l0aW9uYWwgJiYgdHJhbnNpdGlvbmFsLnNpbGVudEpTT05QYXJzaW5nO1xuICAgIHZhciBmb3JjZWRKU09OUGFyc2luZyA9IHRyYW5zaXRpb25hbCAmJiB0cmFuc2l0aW9uYWwuZm9yY2VkSlNPTlBhcnNpbmc7XG4gICAgdmFyIHN0cmljdEpTT05QYXJzaW5nID0gIXNpbGVudEpTT05QYXJzaW5nICYmIHRoaXMucmVzcG9uc2VUeXBlID09PSAnanNvbic7XG5cbiAgICBpZiAoc3RyaWN0SlNPTlBhcnNpbmcgfHwgKGZvcmNlZEpTT05QYXJzaW5nICYmIHV0aWxzLmlzU3RyaW5nKGRhdGEpICYmIGRhdGEubGVuZ3RoKSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChzdHJpY3RKU09OUGFyc2luZykge1xuICAgICAgICAgIGlmIChlLm5hbWUgPT09ICdTeW50YXhFcnJvcicpIHtcbiAgICAgICAgICAgIHRocm93IGVuaGFuY2VFcnJvcihlLCB0aGlzLCAnRV9KU09OX1BBUlNFJyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgLyoqXG4gICAqIEEgdGltZW91dCBpbiBtaWxsaXNlY29uZHMgdG8gYWJvcnQgYSByZXF1ZXN0LiBJZiBzZXQgdG8gMCAoZGVmYXVsdCkgYVxuICAgKiB0aW1lb3V0IGlzIG5vdCBjcmVhdGVkLlxuICAgKi9cbiAgdGltZW91dDogMCxcblxuICB4c3JmQ29va2llTmFtZTogJ1hTUkYtVE9LRU4nLFxuICB4c3JmSGVhZGVyTmFtZTogJ1gtWFNSRi1UT0tFTicsXG5cbiAgbWF4Q29udGVudExlbmd0aDogLTEsXG4gIG1heEJvZHlMZW5ndGg6IC0xLFxuXG4gIHZhbGlkYXRlU3RhdHVzOiBmdW5jdGlvbiB2YWxpZGF0ZVN0YXR1cyhzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDA7XG4gIH0sXG5cbiAgaGVhZGVyczoge1xuICAgIGNvbW1vbjoge1xuICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gICAgfVxuICB9XG59O1xuXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2ROb0RhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHt9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIGRlZmF1bHRzLmhlYWRlcnNbbWV0aG9kXSA9IHV0aWxzLm1lcmdlKERFRkFVTFRfQ09OVEVOVF9UWVBFKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/defaults/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/defaults/transitional.js":
/*!******************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/defaults/transitional.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL3RyYW5zaXRpb25hbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy90cmFuc2l0aW9uYWwuanM/OTZkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzaWxlbnRKU09OUGFyc2luZzogdHJ1ZSxcbiAgZm9yY2VkSlNPTlBhcnNpbmc6IHRydWUsXG4gIGNsYXJpZnlUaW1lb3V0RXJyb3I6IGZhbHNlXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/defaults/transitional.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/env/data.js":
/*!*****************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/env/data.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("module.exports = {\n  \"version\": \"0.26.1\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZW52L2RhdGEuanM/NjljZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJ2ZXJzaW9uXCI6IFwiMC4yNi4xXCJcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/env/data.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/bind.js":
/*!*********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/bind.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYmluZC5qcz84MTQxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBiaW5kKGZuLCB0aGlzQXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKCkge1xuICAgIHZhciBhcmdzID0gbmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJnc1tpXSA9IGFyZ3VtZW50c1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/bind.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/buildURL.js":
/*!*************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/buildURL.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLDhEQUFZOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvYnVpbGRVUkwuanM/YThjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gZW5jb2RlKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdmFyIGhhc2htYXJrSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICAgIGlmIChoYXNobWFya0luZGV4ICE9PSAtMSkge1xuICAgICAgdXJsID0gdXJsLnNsaWNlKDAsIGhhc2htYXJrSW5kZXgpO1xuICAgIH1cblxuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/buildURL.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/combineURLs.js":
/*!****************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/combineURLs.js ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzPzBlZTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgc3BlY2lmaWVkIFVSTHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVSTCBUaGUgcmVsYXRpdmUgVVJMXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgVVJMXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVsYXRpdmVVUkwpIHtcbiAgcmV0dXJuIHJlbGF0aXZlVVJMXG4gICAgPyBiYXNlVVJMLnJlcGxhY2UoL1xcLyskLywgJycpICsgJy8nICsgcmVsYXRpdmVVUkwucmVwbGFjZSgvXlxcLysvLCAnJylcbiAgICA6IGJhc2VVUkw7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/combineURLs.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/cookies.js":
/*!************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/cookies.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsOERBQVk7O0FBRWhDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSwyQ0FBMkM7QUFDM0MsU0FBUzs7QUFFVDtBQUNBLDREQUE0RCx3QkFBd0I7QUFDcEY7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMsZ0NBQWdDLGNBQWM7QUFDOUM7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb29raWVzLmpzPzI4YzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgc3VwcG9ydCBkb2N1bWVudC5jb29raWVcbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKG5hbWUsIHZhbHVlLCBleHBpcmVzLCBwYXRoLCBkb21haW4sIHNlY3VyZSkge1xuICAgICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgICBjb29raWUucHVzaChuYW1lICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNOdW1iZXIoZXhwaXJlcykpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcocGF0aCkpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcoZG9tYWluKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2VjdXJlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llLmpvaW4oJzsgJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZChuYW1lKSB7XG4gICAgICAgICAgdmFyIG1hdGNoID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoJyhefDtcXFxccyopKCcgKyBuYW1lICsgJyk9KFteO10qKScpKTtcbiAgICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKG5hbWUpIHtcbiAgICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQoKSB7IHJldHVybiBudWxsOyB9LFxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/cookies.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!******************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanM/YjNlZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgVVJMIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0Fic29sdXRlVVJMKHVybCkge1xuICAvLyBBIFVSTCBpcyBjb25zaWRlcmVkIGFic29sdXRlIGlmIGl0IGJlZ2lucyB3aXRoIFwiPHNjaGVtZT46Ly9cIiBvciBcIi8vXCIgKHByb3RvY29sLXJlbGF0aXZlIFVSTCkuXG4gIC8vIFJGQyAzOTg2IGRlZmluZXMgc2NoZW1lIG5hbWUgYXMgYSBzZXF1ZW5jZSBvZiBjaGFyYWN0ZXJzIGJlZ2lubmluZyB3aXRoIGEgbGV0dGVyIGFuZCBmb2xsb3dlZFxuICAvLyBieSBhbnkgY29tYmluYXRpb24gb2YgbGV0dGVycywgZGlnaXRzLCBwbHVzLCBwZXJpb2QsIG9yIGh5cGhlbi5cbiAgcmV0dXJuIC9eKFthLXpdW2EtelxcZCtcXC0uXSo6KT9cXC9cXC8vaS50ZXN0KHVybCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/isAxiosError.js":
/*!*****************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/isAxiosError.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4REFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcz9jYzAwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3NcbiAqXG4gKiBAcGFyYW0geyp9IHBheWxvYWQgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBeGlvc0Vycm9yKHBheWxvYWQpIHtcbiAgcmV0dXJuIHV0aWxzLmlzT2JqZWN0KHBheWxvYWQpICYmIChwYXlsb2FkLmlzQXhpb3NFcnJvciA9PT0gdHJ1ZSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/isAxiosError.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!********************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4REFBWTs7QUFFaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzPzEwZjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!************************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLG1CQUFPLENBQUMsNERBQVU7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lLmpzPzQ2YWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgbm9ybWFsaXplZE5hbWUpIHtcbiAgdXRpbHMuZm9yRWFjaChoZWFkZXJzLCBmdW5jdGlvbiBwcm9jZXNzSGVhZGVyKHZhbHVlLCBuYW1lKSB7XG4gICAgaWYgKG5hbWUgIT09IG5vcm1hbGl6ZWROYW1lICYmIG5hbWUudG9VcHBlckNhc2UoKSA9PT0gbm9ybWFsaXplZE5hbWUudG9VcHBlckNhc2UoKSkge1xuICAgICAgaGVhZGVyc1tub3JtYWxpemVkTmFtZV0gPSB2YWx1ZTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfSk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/normalizeHeaderName.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/parseHeaders.js":
/*!*****************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/parseHeaders.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./ohio-sdk/node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VIZWFkZXJzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFlBQVksbUJBQU8sQ0FBQyw4REFBWTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanM/MGY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLy8gSGVhZGVycyB3aG9zZSBkdXBsaWNhdGVzIGFyZSBpZ25vcmVkIGJ5IG5vZGVcbi8vIGMuZi4gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9odHRwLmh0bWwjaHR0cF9tZXNzYWdlX2hlYWRlcnNcbnZhciBpZ25vcmVEdXBsaWNhdGVPZiA9IFtcbiAgJ2FnZScsICdhdXRob3JpemF0aW9uJywgJ2NvbnRlbnQtbGVuZ3RoJywgJ2NvbnRlbnQtdHlwZScsICdldGFnJyxcbiAgJ2V4cGlyZXMnLCAnZnJvbScsICdob3N0JywgJ2lmLW1vZGlmaWVkLXNpbmNlJywgJ2lmLXVubW9kaWZpZWQtc2luY2UnLFxuICAnbGFzdC1tb2RpZmllZCcsICdsb2NhdGlvbicsICdtYXgtZm9yd2FyZHMnLCAncHJveHktYXV0aG9yaXphdGlvbicsXG4gICdyZWZlcmVyJywgJ3JldHJ5LWFmdGVyJywgJ3VzZXItYWdlbnQnXG5dO1xuXG4vKipcbiAqIFBhcnNlIGhlYWRlcnMgaW50byBhbiBvYmplY3RcbiAqXG4gKiBgYGBcbiAqIERhdGU6IFdlZCwgMjcgQXVnIDIwMTQgMDg6NTg6NDkgR01UXG4gKiBDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiAqIENvbm5lY3Rpb246IGtlZXAtYWxpdmVcbiAqIFRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaGVhZGVycyBIZWFkZXJzIG5lZWRpbmcgdG8gYmUgcGFyc2VkXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBIZWFkZXJzIHBhcnNlZCBpbnRvIGFuIG9iamVjdFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNlSGVhZGVycyhoZWFkZXJzKSB7XG4gIHZhciBwYXJzZWQgPSB7fTtcbiAgdmFyIGtleTtcbiAgdmFyIHZhbDtcbiAgdmFyIGk7XG5cbiAgaWYgKCFoZWFkZXJzKSB7IHJldHVybiBwYXJzZWQ7IH1cblxuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMuc3BsaXQoJ1xcbicpLCBmdW5jdGlvbiBwYXJzZXIobGluZSkge1xuICAgIGkgPSBsaW5lLmluZGV4T2YoJzonKTtcbiAgICBrZXkgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKDAsIGkpKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoaSArIDEpKTtcblxuICAgIGlmIChrZXkpIHtcbiAgICAgIGlmIChwYXJzZWRba2V5XSAmJiBpZ25vcmVEdXBsaWNhdGVPZi5pbmRleE9mKGtleSkgPj0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSAocGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSA6IFtdKS5jb25jYXQoW3ZhbF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSBwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldICsgJywgJyArIHZhbCA6IHZhbDtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWQ7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/parseHeaders.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/spread.js":
/*!***********************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/spread.js ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcz8xMDRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTeW50YWN0aWMgc3VnYXIgZm9yIGludm9raW5nIGEgZnVuY3Rpb24gYW5kIGV4cGFuZGluZyBhbiBhcnJheSBmb3IgYXJndW1lbnRzLlxuICpcbiAqIENvbW1vbiB1c2UgY2FzZSB3b3VsZCBiZSB0byB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseWAuXG4gKlxuICogIGBgYGpzXG4gKiAgZnVuY3Rpb24gZih4LCB5LCB6KSB7fVxuICogIHZhciBhcmdzID0gWzEsIDIsIDNdO1xuICogIGYuYXBwbHkobnVsbCwgYXJncyk7XG4gKiAgYGBgXG4gKlxuICogV2l0aCBgc3ByZWFkYCB0aGlzIGV4YW1wbGUgY2FuIGJlIHJlLXdyaXR0ZW4uXG4gKlxuICogIGBgYGpzXG4gKiAgc3ByZWFkKGZ1bmN0aW9uKHgsIHksIHopIHt9KShbMSwgMiwgM10pO1xuICogIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/spread.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/helpers/validator.js":
/*!**************************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/helpers/validator.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar VERSION = (__webpack_require__(/*! ../env/data */ \"./ohio-sdk/node_modules/axios/lib/env/data.js\").version);\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsaUdBQThCOztBQUU1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzP2EwNGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2Vudi9kYXRhJykudmVyc2lvbjtcblxudmFyIHZhbGlkYXRvcnMgPSB7fTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblsnb2JqZWN0JywgJ2Jvb2xlYW4nLCAnbnVtYmVyJywgJ2Z1bmN0aW9uJywgJ3N0cmluZycsICdzeW1ib2wnXS5mb3JFYWNoKGZ1bmN0aW9uKHR5cGUsIGkpIHtcbiAgdmFsaWRhdG9yc1t0eXBlXSA9IGZ1bmN0aW9uIHZhbGlkYXRvcih0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgPT09IHR5cGUgfHwgJ2EnICsgKGkgPCAxID8gJ24gJyA6ICcgJykgKyB0eXBlO1xuICB9O1xufSk7XG5cbnZhciBkZXByZWNhdGVkV2FybmluZ3MgPSB7fTtcblxuLyoqXG4gKiBUcmFuc2l0aW9uYWwgb3B0aW9uIHZhbGlkYXRvclxuICogQHBhcmFtIHtmdW5jdGlvbnxib29sZWFuP30gdmFsaWRhdG9yIC0gc2V0IHRvIGZhbHNlIGlmIHRoZSB0cmFuc2l0aW9uYWwgb3B0aW9uIGhhcyBiZWVuIHJlbW92ZWRcbiAqIEBwYXJhbSB7c3RyaW5nP30gdmVyc2lvbiAtIGRlcHJlY2F0ZWQgdmVyc2lvbiAvIHJlbW92ZWQgc2luY2UgdmVyc2lvblxuICogQHBhcmFtIHtzdHJpbmc/fSBtZXNzYWdlIC0gc29tZSBtZXNzYWdlIHdpdGggYWRkaXRpb25hbCBpbmZvXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb259XG4gKi9cbnZhbGlkYXRvcnMudHJhbnNpdGlvbmFsID0gZnVuY3Rpb24gdHJhbnNpdGlvbmFsKHZhbGlkYXRvciwgdmVyc2lvbiwgbWVzc2FnZSkge1xuICBmdW5jdGlvbiBmb3JtYXRNZXNzYWdlKG9wdCwgZGVzYykge1xuICAgIHJldHVybiAnW0F4aW9zIHYnICsgVkVSU0lPTiArICddIFRyYW5zaXRpb25hbCBvcHRpb24gXFwnJyArIG9wdCArICdcXCcnICsgZGVzYyArIChtZXNzYWdlID8gJy4gJyArIG1lc3NhZ2UgOiAnJyk7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUsIG9wdCwgb3B0cykge1xuICAgIGlmICh2YWxpZGF0b3IgPT09IGZhbHNlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0TWVzc2FnZShvcHQsICcgaGFzIGJlZW4gcmVtb3ZlZCcgKyAodmVyc2lvbiA/ICcgaW4gJyArIHZlcnNpb24gOiAnJykpKTtcbiAgICB9XG5cbiAgICBpZiAodmVyc2lvbiAmJiAhZGVwcmVjYXRlZFdhcm5pbmdzW29wdF0pIHtcbiAgICAgIGRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdID0gdHJ1ZTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIGZvcm1hdE1lc3NhZ2UoXG4gICAgICAgICAgb3B0LFxuICAgICAgICAgICcgaGFzIGJlZW4gZGVwcmVjYXRlZCBzaW5jZSB2JyArIHZlcnNpb24gKyAnIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5lYXIgZnV0dXJlJ1xuICAgICAgICApXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB2YWxpZGF0b3IgPyB2YWxpZGF0b3IodmFsdWUsIG9wdCwgb3B0cykgOiB0cnVlO1xuICB9O1xufTtcblxuLyoqXG4gKiBBc3NlcnQgb2JqZWN0J3MgcHJvcGVydGllcyB0eXBlXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtvYmplY3R9IHNjaGVtYVxuICogQHBhcmFtIHtib29sZWFuP30gYWxsb3dVbmtub3duXG4gKi9cblxuZnVuY3Rpb24gYXNzZXJ0T3B0aW9ucyhvcHRpb25zLCBzY2hlbWEsIGFsbG93VW5rbm93bikge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9ucyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICB9XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob3B0aW9ucyk7XG4gIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gIHdoaWxlIChpLS0gPiAwKSB7XG4gICAgdmFyIG9wdCA9IGtleXNbaV07XG4gICAgdmFyIHZhbGlkYXRvciA9IHNjaGVtYVtvcHRdO1xuICAgIGlmICh2YWxpZGF0b3IpIHtcbiAgICAgIHZhciB2YWx1ZSA9IG9wdGlvbnNbb3B0XTtcbiAgICAgIHZhciByZXN1bHQgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRpb25zKTtcbiAgICAgIGlmIChyZXN1bHQgIT09IHRydWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uICcgKyBvcHQgKyAnIG11c3QgYmUgJyArIHJlc3VsdCk7XG4gICAgICB9XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGFsbG93VW5rbm93biAhPT0gdHJ1ZSkge1xuICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gb3B0aW9uICcgKyBvcHQpO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXNzZXJ0T3B0aW9uczogYXNzZXJ0T3B0aW9ucyxcbiAgdmFsaWRhdG9yczogdmFsaWRhdG9yc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/helpers/validator.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/axios/lib/utils.js":
/*!**************************************************!*\
  !*** ./ohio-sdk/node_modules/axios/lib/utils.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./ohio-sdk/node_modules/axios/lib/helpers/bind.js\");\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/axios/lib/utils.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/base64-js/index.js":
/*!**************************************************!*\
  !*** ./ohio-sdk/node_modules/base64-js/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvYmFzZTY0LWpzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFNBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9iYXNlNjQtanMvaW5kZXguanM/NDNhOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5ieXRlTGVuZ3RoID0gYnl0ZUxlbmd0aFxuZXhwb3J0cy50b0J5dGVBcnJheSA9IHRvQnl0ZUFycmF5XG5leHBvcnRzLmZyb21CeXRlQXJyYXkgPSBmcm9tQnl0ZUFycmF5XG5cbnZhciBsb29rdXAgPSBbXVxudmFyIHJldkxvb2t1cCA9IFtdXG52YXIgQXJyID0gdHlwZW9mIFVpbnQ4QXJyYXkgIT09ICd1bmRlZmluZWQnID8gVWludDhBcnJheSA6IEFycmF5XG5cbnZhciBjb2RlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldXG4gIHJldkxvb2t1cFtjb2RlLmNoYXJDb2RlQXQoaSldID0gaVxufVxuXG4vLyBTdXBwb3J0IGRlY29kaW5nIFVSTC1zYWZlIGJhc2U2NCBzdHJpbmdzLCBhcyBOb2RlLmpzIGRvZXMuXG4vLyBTZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCNVUkxfYXBwbGljYXRpb25zXG5yZXZMb29rdXBbJy0nLmNoYXJDb2RlQXQoMCldID0gNjJcbnJldkxvb2t1cFsnXycuY2hhckNvZGVBdCgwKV0gPSA2M1xuXG5mdW5jdGlvbiBnZXRMZW5zIChiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGhcblxuICBpZiAobGVuICUgNCA+IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQnKVxuICB9XG5cbiAgLy8gVHJpbSBvZmYgZXh0cmEgYnl0ZXMgYWZ0ZXIgcGxhY2Vob2xkZXIgYnl0ZXMgYXJlIGZvdW5kXG4gIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JlYXRnYW1taXQvYmFzZTY0LWpzL2lzc3Vlcy80MlxuICB2YXIgdmFsaWRMZW4gPSBiNjQuaW5kZXhPZignPScpXG4gIGlmICh2YWxpZExlbiA9PT0gLTEpIHZhbGlkTGVuID0gbGVuXG5cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW5cbiAgICA/IDBcbiAgICA6IDQgLSAodmFsaWRMZW4gJSA0KVxuXG4gIHJldHVybiBbdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbl1cbn1cblxuLy8gYmFzZTY0IGlzIDQvMyArIHVwIHRvIHR3byBjaGFyYWN0ZXJzIG9mIHRoZSBvcmlnaW5hbCBkYXRhXG5mdW5jdGlvbiBieXRlTGVuZ3RoIChiNjQpIHtcbiAgdmFyIGxlbnMgPSBnZXRMZW5zKGI2NClcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXVxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gX2J5dGVMZW5ndGggKGI2NCwgdmFsaWRMZW4sIHBsYWNlSG9sZGVyc0xlbikge1xuICByZXR1cm4gKCh2YWxpZExlbiArIHBsYWNlSG9sZGVyc0xlbikgKiAzIC8gNCkgLSBwbGFjZUhvbGRlcnNMZW5cbn1cblxuZnVuY3Rpb24gdG9CeXRlQXJyYXkgKGI2NCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV1cblxuICB2YXIgYXJyID0gbmV3IEFycihfYnl0ZUxlbmd0aChiNjQsIHZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW4pKVxuXG4gIHZhciBjdXJCeXRlID0gMFxuXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDBcbiAgICA/IHZhbGlkTGVuIC0gNFxuICAgIDogdmFsaWRMZW5cblxuICB2YXIgaVxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICB0bXAgPVxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcbiAgICAgIHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMyldXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDE2KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gOCkgJiAweEZGXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweEZGXG4gIH1cblxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XG4gICAgdG1wID1cbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0KVxuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMHhGRlxuICB9XG5cbiAgaWYgKHBsYWNlSG9sZGVyc0xlbiA9PT0gMSkge1xuICAgIHRtcCA9XG4gICAgICAocmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxuICAgICAgKHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcbiAgICAgIChyZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxuICAgIGFycltjdXJCeXRlKytdID0gKHRtcCA+PiA4KSAmIDB4RkZcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4RkZcbiAgfVxuXG4gIHJldHVybiBhcnJcbn1cblxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0IChudW0pIHtcbiAgcmV0dXJuIGxvb2t1cFtudW0gPj4gMTggJiAweDNGXSArXG4gICAgbG9va3VwW251bSA+PiAxMiAmIDB4M0ZdICtcbiAgICBsb29rdXBbbnVtID4+IDYgJiAweDNGXSArXG4gICAgbG9va3VwW251bSAmIDB4M0ZdXG59XG5cbmZ1bmN0aW9uIGVuY29kZUNodW5rICh1aW50OCwgc3RhcnQsIGVuZCkge1xuICB2YXIgdG1wXG4gIHZhciBvdXRwdXQgPSBbXVxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9XG4gICAgICAoKHVpbnQ4W2ldIDw8IDE2KSAmIDB4RkYwMDAwKSArXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4RkYwMCkgK1xuICAgICAgKHVpbnQ4W2kgKyAyXSAmIDB4RkYpXG4gICAgb3V0cHV0LnB1c2godHJpcGxldFRvQmFzZTY0KHRtcCkpXG4gIH1cbiAgcmV0dXJuIG91dHB1dC5qb2luKCcnKVxufVxuXG5mdW5jdGlvbiBmcm9tQnl0ZUFycmF5ICh1aW50OCkge1xuICB2YXIgdG1wXG4gIHZhciBsZW4gPSB1aW50OC5sZW5ndGhcbiAgdmFyIGV4dHJhQnl0ZXMgPSBsZW4gJSAzIC8vIGlmIHdlIGhhdmUgMSBieXRlIGxlZnQsIHBhZCAyIGJ5dGVzXG4gIHZhciBwYXJ0cyA9IFtdXG4gIHZhciBtYXhDaHVua0xlbmd0aCA9IDE2MzgzIC8vIG11c3QgYmUgbXVsdGlwbGUgb2YgM1xuXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goZW5jb2RlQ2h1bmsodWludDgsIGksIChpICsgbWF4Q2h1bmtMZW5ndGgpID4gbGVuMiA/IGxlbjIgOiAoaSArIG1heENodW5rTGVuZ3RoKSkpXG4gIH1cblxuICAvLyBwYWQgdGhlIGVuZCB3aXRoIHplcm9zLCBidXQgbWFrZSBzdXJlIHRvIG5vdCBmb3JnZXQgdGhlIGV4dHJhIGJ5dGVzXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XG4gICAgdG1wID0gdWludDhbbGVuIC0gMV1cbiAgICBwYXJ0cy5wdXNoKFxuICAgICAgbG9va3VwW3RtcCA+PiAyXSArXG4gICAgICBsb29rdXBbKHRtcCA8PCA0KSAmIDB4M0ZdICtcbiAgICAgICc9PSdcbiAgICApXG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdXG4gICAgcGFydHMucHVzaChcbiAgICAgIGxvb2t1cFt0bXAgPj4gMTBdICtcbiAgICAgIGxvb2t1cFsodG1wID4+IDQpICYgMHgzRl0gK1xuICAgICAgbG9va3VwWyh0bXAgPDwgMikgJiAweDNGXSArXG4gICAgICAnPSdcbiAgICApXG4gIH1cblxuICByZXR1cm4gcGFydHMuam9pbignJylcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/base64-js/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/buffer/index.js":
/*!***********************************************!*\
  !*** ./ohio-sdk/node_modules/buffer/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"./ohio-sdk/node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"./ohio-sdk/node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/buffer/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/debug/src/browser.js":
/*!****************************************************!*\
  !*** ./ohio-sdk/node_modules/debug/src/browser.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./ohio-sdk/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/debug/src/browser.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/debug/src/common.js":
/*!***************************************************!*\
  !*** ./ohio-sdk/node_modules/debug/src/common.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./ohio-sdk/node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/debug/src/common.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/debug/src/index.js":
/*!**************************************************!*\
  !*** ./ohio-sdk/node_modules/debug/src/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || false === true || process.__nwjs) {\n\tmodule.exports = __webpack_require__(/*! ./browser.js */ \"./ohio-sdk/node_modules/debug/src/browser.js\");\n} else {\n\tmodule.exports = __webpack_require__(/*! ./node.js */ \"./ohio-sdk/node_modules/debug/src/node.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvZGVidWcvc3JjL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHFFQUFxRSxLQUFlO0FBQ3BGLENBQUMsd0dBQXdDO0FBQ3pDLEVBQUU7QUFDRixDQUFDLGtHQUFxQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9kZWJ1Zy9zcmMvaW5kZXguanM/MTg2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERldGVjdCBFbGVjdHJvbiByZW5kZXJlciAvIG53anMgcHJvY2Vzcywgd2hpY2ggaXMgbm9kZSwgYnV0IHdlIHNob3VsZFxuICogdHJlYXQgYXMgYSBicm93c2VyLlxuICovXG5cbmlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ3VuZGVmaW5lZCcgfHwgcHJvY2Vzcy50eXBlID09PSAncmVuZGVyZXInIHx8IHByb2Nlc3MuYnJvd3NlciA9PT0gdHJ1ZSB8fCBwcm9jZXNzLl9fbndqcykge1xuXHRtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vYnJvd3Nlci5qcycpO1xufSBlbHNlIHtcblx0bW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL25vZGUuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/debug/src/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/debug/src/node.js":
/*!*************************************************!*\
  !*** ./ohio-sdk/node_modules/debug/src/node.js ***!
  \*************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * Module dependencies.\n */\n\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst util = __webpack_require__(/*! util */ \"util\");\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = __webpack_require__(/*! supports-color */ \"./ohio-sdk/node_modules/supports-color/index.js\");\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./ohio-sdk/node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/debug/src/node.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/follow-redirects/debug.js":
/*!*********************************************************!*\
  !*** ./ohio-sdk/node_modules/follow-redirects/debug.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = __webpack_require__(/*! debug */ \"./ohio-sdk/node_modules/debug/src/index.js\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvZm9sbG93LXJlZGlyZWN0cy9kZWJ1Zy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsbUJBQU8sQ0FBQyx5REFBTztBQUM3QjtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ludGVyYWN0LWFwcC8uL29oaW8tc2RrL25vZGVfbW9kdWxlcy9mb2xsb3ctcmVkaXJlY3RzL2RlYnVnLmpzPzY0ZWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRlYnVnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKCFkZWJ1Zykge1xuICAgIHRyeSB7XG4gICAgICAvKiBlc2xpbnQgZ2xvYmFsLXJlcXVpcmU6IG9mZiAqL1xuICAgICAgZGVidWcgPSByZXF1aXJlKFwiZGVidWdcIikoXCJmb2xsb3ctcmVkaXJlY3RzXCIpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgLyogKi8gfVxuICAgIGlmICh0eXBlb2YgZGVidWcgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgZGVidWcgPSBmdW5jdGlvbiAoKSB7IC8qICovIH07XG4gICAgfVxuICB9XG4gIGRlYnVnLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/follow-redirects/debug.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/follow-redirects/index.js":
/*!*********************************************************!*\
  !*** ./ohio-sdk/node_modules/follow-redirects/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var url = __webpack_require__(/*! url */ \"url\");\nvar URL = url.URL;\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar Writable = (__webpack_require__(/*! stream */ \"stream\").Writable);\nvar assert = __webpack_require__(/*! assert */ \"assert\");\nvar debug = __webpack_require__(/*! ./debug */ \"./ohio-sdk/node_modules/follow-redirects/debug.js\");\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._currentUrl = this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  abortRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    this.emit(\"error\", new TooManyRedirectsError());\n    return;\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = url.parse(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Determine the URL of the redirection\n  var redirectUrl;\n  try {\n    redirectUrl = url.resolve(currentUrl, location);\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n    return;\n  }\n\n  // Create the redirected request\n  debug(\"redirecting to\", redirectUrl);\n  this._isRedirect = true;\n  var redirectUrlParts = url.parse(redirectUrl);\n  Object.assign(this._options, redirectUrlParts);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrlParts.protocol !== currentUrlParts.protocol &&\n     redirectUrlParts.protocol !== \"https:\" ||\n     redirectUrlParts.host !== currentHost &&\n     !isSubdomain(redirectUrlParts.host, currentHost)) {\n    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (typeof beforeRedirect === \"function\") {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    try {\n      beforeRedirect(this._options, responseDetails, requestDetails);\n    }\n    catch (err) {\n      this.emit(\"error\", err);\n      return;\n    }\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  try {\n    this._performRequest();\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(cause) {\n    Error.captureStackTrace(this, this.constructor);\n    if (!cause) {\n      this.message = defaultMessage;\n    }\n    else {\n      this.message = defaultMessage + \": \" + cause.message;\n      this.cause = cause;\n    }\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.abort();\n}\n\nfunction isSubdomain(subdomain, domain) {\n  const dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/follow-redirects/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/has-flag/index.js":
/*!*************************************************!*\
  !*** ./ohio-sdk/node_modules/has-flag/index.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvaGFzLWZsYWcvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vb2hpby1zZGsvbm9kZV9tb2R1bGVzL2hhcy1mbGFnL2luZGV4LmpzPzBhNWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChmbGFnLCBhcmd2ID0gcHJvY2Vzcy5hcmd2KSA9PiB7XG5cdGNvbnN0IHByZWZpeCA9IGZsYWcuc3RhcnRzV2l0aCgnLScpID8gJycgOiAoZmxhZy5sZW5ndGggPT09IDEgPyAnLScgOiAnLS0nKTtcblx0Y29uc3QgcG9zaXRpb24gPSBhcmd2LmluZGV4T2YocHJlZml4ICsgZmxhZyk7XG5cdGNvbnN0IHRlcm1pbmF0b3JQb3NpdGlvbiA9IGFyZ3YuaW5kZXhPZignLS0nKTtcblx0cmV0dXJuIHBvc2l0aW9uICE9PSAtMSAmJiAodGVybWluYXRvclBvc2l0aW9uID09PSAtMSB8fCBwb3NpdGlvbiA8IHRlcm1pbmF0b3JQb3NpdGlvbik7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/has-flag/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/ieee754/index.js":
/*!************************************************!*\
  !*** ./ohio-sdk/node_modules/ieee754/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsV0FBVzs7QUFFcEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxXQUFXOztBQUVwQjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTLFdBQVc7O0FBRXBCO0FBQ0E7QUFDQSxTQUFTLFVBQVU7O0FBRW5CO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvaWVlZTc1NC9pbmRleC5qcz84MDZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG5leHBvcnRzLnJlYWQgPSBmdW5jdGlvbiAoYnVmZmVyLCBvZmZzZXQsIGlzTEUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZSwgbVxuICB2YXIgZUxlbiA9IChuQnl0ZXMgKiA4KSAtIG1MZW4gLSAxXG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxXG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMVxuICB2YXIgbkJpdHMgPSAtN1xuICB2YXIgaSA9IGlzTEUgPyAobkJ5dGVzIC0gMSkgOiAwXG4gIHZhciBkID0gaXNMRSA/IC0xIDogMVxuICB2YXIgcyA9IGJ1ZmZlcltvZmZzZXQgKyBpXVxuXG4gIGkgKz0gZFxuXG4gIGUgPSBzICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIHMgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IGVMZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IChlICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIG0gPSBlICYgKCgxIDw8ICgtbkJpdHMpKSAtIDEpXG4gIGUgPj49ICgtbkJpdHMpXG4gIG5CaXRzICs9IG1MZW5cbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IChtICogMjU2KSArIGJ1ZmZlcltvZmZzZXQgKyBpXSwgaSArPSBkLCBuQml0cyAtPSA4KSB7fVxuXG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhc1xuICB9IGVsc2UgaWYgKGUgPT09IGVNYXgpIHtcbiAgICByZXR1cm4gbSA/IE5hTiA6ICgocyA/IC0xIDogMSkgKiBJbmZpbml0eSlcbiAgfSBlbHNlIHtcbiAgICBtID0gbSArIE1hdGgucG93KDIsIG1MZW4pXG4gICAgZSA9IGUgLSBlQmlhc1xuICB9XG4gIHJldHVybiAocyA/IC0xIDogMSkgKiBtICogTWF0aC5wb3coMiwgZSAtIG1MZW4pXG59XG5cbmV4cG9ydHMud3JpdGUgPSBmdW5jdGlvbiAoYnVmZmVyLCB2YWx1ZSwgb2Zmc2V0LCBpc0xFLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGUsIG0sIGNcbiAgdmFyIGVMZW4gPSAobkJ5dGVzICogOCkgLSBtTGVuIC0gMVxuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMVxuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDFcbiAgdmFyIHJ0ID0gKG1MZW4gPT09IDIzID8gTWF0aC5wb3coMiwgLTI0KSAtIE1hdGgucG93KDIsIC03NykgOiAwKVxuICB2YXIgaSA9IGlzTEUgPyAwIDogKG5CeXRlcyAtIDEpXG4gIHZhciBkID0gaXNMRSA/IDEgOiAtMVxuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCAodmFsdWUgPT09IDAgJiYgMSAvIHZhbHVlIDwgMCkgPyAxIDogMFxuXG4gIHZhbHVlID0gTWF0aC5hYnModmFsdWUpXG5cbiAgaWYgKGlzTmFOKHZhbHVlKSB8fCB2YWx1ZSA9PT0gSW5maW5pdHkpIHtcbiAgICBtID0gaXNOYU4odmFsdWUpID8gMSA6IDBcbiAgICBlID0gZU1heFxuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLmZsb29yKE1hdGgubG9nKHZhbHVlKSAvIE1hdGguTE4yKVxuICAgIGlmICh2YWx1ZSAqIChjID0gTWF0aC5wb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLVxuICAgICAgYyAqPSAyXG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgdmFsdWUgKz0gcnQgLyBjXG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogTWF0aC5wb3coMiwgMSAtIGVCaWFzKVxuICAgIH1cbiAgICBpZiAodmFsdWUgKiBjID49IDIpIHtcbiAgICAgIGUrK1xuICAgICAgYyAvPSAyXG4gICAgfVxuXG4gICAgaWYgKGUgKyBlQmlhcyA+PSBlTWF4KSB7XG4gICAgICBtID0gMFxuICAgICAgZSA9IGVNYXhcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKCh2YWx1ZSAqIGMpIC0gMSkgKiBNYXRoLnBvdygyLCBtTGVuKVxuICAgICAgZSA9IGUgKyBlQmlhc1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gdmFsdWUgKiBNYXRoLnBvdygyLCBlQmlhcyAtIDEpICogTWF0aC5wb3coMiwgbUxlbilcbiAgICAgIGUgPSAwXG4gICAgfVxuICB9XG5cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW29mZnNldCArIGldID0gbSAmIDB4ZmYsIGkgKz0gZCwgbSAvPSAyNTYsIG1MZW4gLT0gOCkge31cblxuICBlID0gKGUgPDwgbUxlbikgfCBtXG4gIGVMZW4gKz0gbUxlblxuICBmb3IgKDsgZUxlbiA+IDA7IGJ1ZmZlcltvZmZzZXQgKyBpXSA9IGUgJiAweGZmLCBpICs9IGQsIGUgLz0gMjU2LCBlTGVuIC09IDgpIHt9XG5cbiAgYnVmZmVyW29mZnNldCArIGkgLSBkXSB8PSBzICogMTI4XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/ieee754/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/js-sha3/src/sha3.js":
/*!***************************************************!*\
  !*** ./ohio-sdk/node_modules/js-sha3/src/sha3.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return methods;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/js-sha3/src/sha3.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/ms/index.js":
/*!*******************************************!*\
  !*** ./ohio-sdk/node_modules/ms/index.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvbXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixXQUFXLFFBQVE7QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvbXMvaW5kZXguanM/MzA4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEhlbHBlcnMuXG4gKi9cblxudmFyIHMgPSAxMDAwO1xudmFyIG0gPSBzICogNjA7XG52YXIgaCA9IG0gKiA2MDtcbnZhciBkID0gaCAqIDI0O1xudmFyIHcgPSBkICogNztcbnZhciB5ID0gZCAqIDM2NS4yNTtcblxuLyoqXG4gKiBQYXJzZSBvciBmb3JtYXQgdGhlIGdpdmVuIGB2YWxgLlxuICpcbiAqIE9wdGlvbnM6XG4gKlxuICogIC0gYGxvbmdgIHZlcmJvc2UgZm9ybWF0dGluZyBbZmFsc2VdXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8TnVtYmVyfSB2YWxcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEB0aHJvd3Mge0Vycm9yfSB0aHJvdyBhbiBlcnJvciBpZiB2YWwgaXMgbm90IGEgbm9uLWVtcHR5IHN0cmluZyBvciBhIG51bWJlclxuICogQHJldHVybiB7U3RyaW5nfE51bWJlcn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih2YWwsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbDtcbiAgaWYgKHR5cGUgPT09ICdzdHJpbmcnICYmIHZhbC5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIHBhcnNlKHZhbCk7XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gJ251bWJlcicgJiYgaXNGaW5pdGUodmFsKSkge1xuICAgIHJldHVybiBvcHRpb25zLmxvbmcgPyBmbXRMb25nKHZhbCkgOiBmbXRTaG9ydCh2YWwpO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAndmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSB2YWxpZCBudW1iZXIuIHZhbD0nICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KHZhbClcbiAgKTtcbn07XG5cbi8qKlxuICogUGFyc2UgdGhlIGdpdmVuIGBzdHJgIGFuZCByZXR1cm4gbWlsbGlzZWNvbmRzLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge051bWJlcn1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIHBhcnNlKHN0cikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHN0ci5sZW5ndGggPiAxMDApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG1hdGNoID0gL14oLT8oPzpcXGQrKT9cXC4/XFxkKykgKihtaWxsaXNlY29uZHM/fG1zZWNzP3xtc3xzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHdlZWtzP3x3fHllYXJzP3x5cnM/fHkpPyQvaS5leGVjKFxuICAgIHN0clxuICApO1xuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBuID0gcGFyc2VGbG9hdChtYXRjaFsxXSk7XG4gIHZhciB0eXBlID0gKG1hdGNoWzJdIHx8ICdtcycpLnRvTG93ZXJDYXNlKCk7XG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ3llYXJzJzpcbiAgICBjYXNlICd5ZWFyJzpcbiAgICBjYXNlICd5cnMnOlxuICAgIGNhc2UgJ3lyJzpcbiAgICBjYXNlICd5JzpcbiAgICAgIHJldHVybiBuICogeTtcbiAgICBjYXNlICd3ZWVrcyc6XG4gICAgY2FzZSAnd2Vlayc6XG4gICAgY2FzZSAndyc6XG4gICAgICByZXR1cm4gbiAqIHc7XG4gICAgY2FzZSAnZGF5cyc6XG4gICAgY2FzZSAnZGF5JzpcbiAgICBjYXNlICdkJzpcbiAgICAgIHJldHVybiBuICogZDtcbiAgICBjYXNlICdob3Vycyc6XG4gICAgY2FzZSAnaG91cic6XG4gICAgY2FzZSAnaHJzJzpcbiAgICBjYXNlICdocic6XG4gICAgY2FzZSAnaCc6XG4gICAgICByZXR1cm4gbiAqIGg7XG4gICAgY2FzZSAnbWludXRlcyc6XG4gICAgY2FzZSAnbWludXRlJzpcbiAgICBjYXNlICdtaW5zJzpcbiAgICBjYXNlICdtaW4nOlxuICAgIGNhc2UgJ20nOlxuICAgICAgcmV0dXJuIG4gKiBtO1xuICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgY2FzZSAnc2Vjcyc6XG4gICAgY2FzZSAnc2VjJzpcbiAgICBjYXNlICdzJzpcbiAgICAgIHJldHVybiBuICogcztcbiAgICBjYXNlICdtaWxsaXNlY29uZHMnOlxuICAgIGNhc2UgJ21pbGxpc2Vjb25kJzpcbiAgICBjYXNlICdtc2Vjcyc6XG4gICAgY2FzZSAnbXNlYyc6XG4gICAgY2FzZSAnbXMnOlxuICAgICAgcmV0dXJuIG47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydCBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRTaG9ydChtcykge1xuICB2YXIgbXNBYnMgPSBNYXRoLmFicyhtcyk7XG4gIGlmIChtc0FicyA+PSBkKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBkKSArICdkJztcbiAgfVxuICBpZiAobXNBYnMgPj0gaCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gaCkgKyAnaCc7XG4gIH1cbiAgaWYgKG1zQWJzID49IG0pIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG0pICsgJ20nO1xuICB9XG4gIGlmIChtc0FicyA+PSBzKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBzKSArICdzJztcbiAgfVxuICByZXR1cm4gbXMgKyAnbXMnO1xufVxuXG4vKipcbiAqIExvbmcgZm9ybWF0IGZvciBgbXNgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZm10TG9uZyhtcykge1xuICB2YXIgbXNBYnMgPSBNYXRoLmFicyhtcyk7XG4gIGlmIChtc0FicyA+PSBkKSB7XG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIGQsICdkYXknKTtcbiAgfVxuICBpZiAobXNBYnMgPj0gaCkge1xuICAgIHJldHVybiBwbHVyYWwobXMsIG1zQWJzLCBoLCAnaG91cicpO1xuICB9XG4gIGlmIChtc0FicyA+PSBtKSB7XG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIG0sICdtaW51dGUnKTtcbiAgfVxuICBpZiAobXNBYnMgPj0gcykge1xuICAgIHJldHVybiBwbHVyYWwobXMsIG1zQWJzLCBzLCAnc2Vjb25kJyk7XG4gIH1cbiAgcmV0dXJuIG1zICsgJyBtcyc7XG59XG5cbi8qKlxuICogUGx1cmFsaXphdGlvbiBoZWxwZXIuXG4gKi9cblxuZnVuY3Rpb24gcGx1cmFsKG1zLCBtc0FicywgbiwgbmFtZSkge1xuICB2YXIgaXNQbHVyYWwgPSBtc0FicyA+PSBuICogMS41O1xuICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIG4pICsgJyAnICsgbmFtZSArIChpc1BsdXJhbCA/ICdzJyA6ICcnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/ms/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/supports-color/index.js":
/*!*******************************************************!*\
  !*** ./ohio-sdk/node_modules/supports-color/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst os = __webpack_require__(/*! os */ \"os\");\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"./ohio-sdk/node_modules/has-flag/index.js\");\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvc3VwcG9ydHMtY29sb3IvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixXQUFXLG1CQUFPLENBQUMsY0FBSTtBQUN2QixZQUFZLG1CQUFPLENBQUMsZ0JBQUs7QUFDekIsZ0JBQWdCLG1CQUFPLENBQUMsMkRBQVU7O0FBRWxDLE9BQU8sS0FBSzs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUNBQWlDLEdBQUc7QUFDcEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnRlcmFjdC1hcHAvLi9vaGlvLXNkay9ub2RlX21vZHVsZXMvc3VwcG9ydHMtY29sb3IvaW5kZXguanM/MzExNiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBvcyA9IHJlcXVpcmUoJ29zJyk7XG5jb25zdCB0dHkgPSByZXF1aXJlKCd0dHknKTtcbmNvbnN0IGhhc0ZsYWcgPSByZXF1aXJlKCdoYXMtZmxhZycpO1xuXG5jb25zdCB7ZW52fSA9IHByb2Nlc3M7XG5cbmxldCBmb3JjZUNvbG9yO1xuaWYgKGhhc0ZsYWcoJ25vLWNvbG9yJykgfHxcblx0aGFzRmxhZygnbm8tY29sb3JzJykgfHxcblx0aGFzRmxhZygnY29sb3I9ZmFsc2UnKSB8fFxuXHRoYXNGbGFnKCdjb2xvcj1uZXZlcicpKSB7XG5cdGZvcmNlQ29sb3IgPSAwO1xufSBlbHNlIGlmIChoYXNGbGFnKCdjb2xvcicpIHx8XG5cdGhhc0ZsYWcoJ2NvbG9ycycpIHx8XG5cdGhhc0ZsYWcoJ2NvbG9yPXRydWUnKSB8fFxuXHRoYXNGbGFnKCdjb2xvcj1hbHdheXMnKSkge1xuXHRmb3JjZUNvbG9yID0gMTtcbn1cblxuaWYgKCdGT1JDRV9DT0xPUicgaW4gZW52KSB7XG5cdGlmIChlbnYuRk9SQ0VfQ09MT1IgPT09ICd0cnVlJykge1xuXHRcdGZvcmNlQ29sb3IgPSAxO1xuXHR9IGVsc2UgaWYgKGVudi5GT1JDRV9DT0xPUiA9PT0gJ2ZhbHNlJykge1xuXHRcdGZvcmNlQ29sb3IgPSAwO1xuXHR9IGVsc2Uge1xuXHRcdGZvcmNlQ29sb3IgPSBlbnYuRk9SQ0VfQ09MT1IubGVuZ3RoID09PSAwID8gMSA6IE1hdGgubWluKHBhcnNlSW50KGVudi5GT1JDRV9DT0xPUiwgMTApLCAzKTtcblx0fVxufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGVMZXZlbChsZXZlbCkge1xuXHRpZiAobGV2ZWwgPT09IDApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRyZXR1cm4ge1xuXHRcdGxldmVsLFxuXHRcdGhhc0Jhc2ljOiB0cnVlLFxuXHRcdGhhczI1NjogbGV2ZWwgPj0gMixcblx0XHRoYXMxNm06IGxldmVsID49IDNcblx0fTtcbn1cblxuZnVuY3Rpb24gc3VwcG9ydHNDb2xvcihoYXZlU3RyZWFtLCBzdHJlYW1Jc1RUWSkge1xuXHRpZiAoZm9yY2VDb2xvciA9PT0gMCkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0aWYgKGhhc0ZsYWcoJ2NvbG9yPTE2bScpIHx8XG5cdFx0aGFzRmxhZygnY29sb3I9ZnVsbCcpIHx8XG5cdFx0aGFzRmxhZygnY29sb3I9dHJ1ZWNvbG9yJykpIHtcblx0XHRyZXR1cm4gMztcblx0fVxuXG5cdGlmIChoYXNGbGFnKCdjb2xvcj0yNTYnKSkge1xuXHRcdHJldHVybiAyO1xuXHR9XG5cblx0aWYgKGhhdmVTdHJlYW0gJiYgIXN0cmVhbUlzVFRZICYmIGZvcmNlQ29sb3IgPT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Y29uc3QgbWluID0gZm9yY2VDb2xvciB8fCAwO1xuXG5cdGlmIChlbnYuVEVSTSA9PT0gJ2R1bWInKSB7XG5cdFx0cmV0dXJuIG1pbjtcblx0fVxuXG5cdGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInKSB7XG5cdFx0Ly8gV2luZG93cyAxMCBidWlsZCAxMDU4NiBpcyB0aGUgZmlyc3QgV2luZG93cyByZWxlYXNlIHRoYXQgc3VwcG9ydHMgMjU2IGNvbG9ycy5cblx0XHQvLyBXaW5kb3dzIDEwIGJ1aWxkIDE0OTMxIGlzIHRoZSBmaXJzdCByZWxlYXNlIHRoYXQgc3VwcG9ydHMgMTZtL1RydWVDb2xvci5cblx0XHRjb25zdCBvc1JlbGVhc2UgPSBvcy5yZWxlYXNlKCkuc3BsaXQoJy4nKTtcblx0XHRpZiAoXG5cdFx0XHROdW1iZXIob3NSZWxlYXNlWzBdKSA+PSAxMCAmJlxuXHRcdFx0TnVtYmVyKG9zUmVsZWFzZVsyXSkgPj0gMTA1ODZcblx0XHQpIHtcblx0XHRcdHJldHVybiBOdW1iZXIob3NSZWxlYXNlWzJdKSA+PSAxNDkzMSA/IDMgOiAyO1xuXHRcdH1cblxuXHRcdHJldHVybiAxO1xuXHR9XG5cblx0aWYgKCdDSScgaW4gZW52KSB7XG5cdFx0aWYgKFsnVFJBVklTJywgJ0NJUkNMRUNJJywgJ0FQUFZFWU9SJywgJ0dJVExBQl9DSScsICdHSVRIVUJfQUNUSU9OUycsICdCVUlMREtJVEUnXS5zb21lKHNpZ24gPT4gc2lnbiBpbiBlbnYpIHx8IGVudi5DSV9OQU1FID09PSAnY29kZXNoaXAnKSB7XG5cdFx0XHRyZXR1cm4gMTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWluO1xuXHR9XG5cblx0aWYgKCdURUFNQ0lUWV9WRVJTSU9OJyBpbiBlbnYpIHtcblx0XHRyZXR1cm4gL14oOVxcLigwKlsxLTldXFxkKilcXC58XFxkezIsfVxcLikvLnRlc3QoZW52LlRFQU1DSVRZX1ZFUlNJT04pID8gMSA6IDA7XG5cdH1cblxuXHRpZiAoZW52LkNPTE9SVEVSTSA9PT0gJ3RydWVjb2xvcicpIHtcblx0XHRyZXR1cm4gMztcblx0fVxuXG5cdGlmICgnVEVSTV9QUk9HUkFNJyBpbiBlbnYpIHtcblx0XHRjb25zdCB2ZXJzaW9uID0gcGFyc2VJbnQoKGVudi5URVJNX1BST0dSQU1fVkVSU0lPTiB8fCAnJykuc3BsaXQoJy4nKVswXSwgMTApO1xuXG5cdFx0c3dpdGNoIChlbnYuVEVSTV9QUk9HUkFNKSB7XG5cdFx0XHRjYXNlICdpVGVybS5hcHAnOlxuXHRcdFx0XHRyZXR1cm4gdmVyc2lvbiA+PSAzID8gMyA6IDI7XG5cdFx0XHRjYXNlICdBcHBsZV9UZXJtaW5hbCc6XG5cdFx0XHRcdHJldHVybiAyO1xuXHRcdFx0Ly8gTm8gZGVmYXVsdFxuXHRcdH1cblx0fVxuXG5cdGlmICgvLTI1Nihjb2xvcik/JC9pLnRlc3QoZW52LlRFUk0pKSB7XG5cdFx0cmV0dXJuIDI7XG5cdH1cblxuXHRpZiAoL15zY3JlZW58Xnh0ZXJtfF52dDEwMHxednQyMjB8XnJ4dnR8Y29sb3J8YW5zaXxjeWd3aW58bGludXgvaS50ZXN0KGVudi5URVJNKSkge1xuXHRcdHJldHVybiAxO1xuXHR9XG5cblx0aWYgKCdDT0xPUlRFUk0nIGluIGVudikge1xuXHRcdHJldHVybiAxO1xuXHR9XG5cblx0cmV0dXJuIG1pbjtcbn1cblxuZnVuY3Rpb24gZ2V0U3VwcG9ydExldmVsKHN0cmVhbSkge1xuXHRjb25zdCBsZXZlbCA9IHN1cHBvcnRzQ29sb3Ioc3RyZWFtLCBzdHJlYW0gJiYgc3RyZWFtLmlzVFRZKTtcblx0cmV0dXJuIHRyYW5zbGF0ZUxldmVsKGxldmVsKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdHN1cHBvcnRzQ29sb3I6IGdldFN1cHBvcnRMZXZlbCxcblx0c3Rkb3V0OiB0cmFuc2xhdGVMZXZlbChzdXBwb3J0c0NvbG9yKHRydWUsIHR0eS5pc2F0dHkoMSkpKSxcblx0c3RkZXJyOiB0cmFuc2xhdGVMZXZlbChzdXBwb3J0c0NvbG9yKHRydWUsIHR0eS5pc2F0dHkoMikpKVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/supports-color/index.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/tweetnacl/nacl-fast.js":
/*!******************************************************!*\
  !*** ./ohio-sdk/node_modules/tweetnacl/nacl-fast.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"crypto\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/tweetnacl/nacl-fast.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/typescript-memoize/dist/memoize-decorator.js":
/*!****************************************************************************!*\
  !*** ./ohio-sdk/node_modules/typescript-memoize/dist/memoize-decorator.js ***!
  \****************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n    if ( true && typeof module.exports === \"object\") {\n        var v = factory(__webpack_require__(\"./ohio-sdk/node_modules/typescript-memoize/dist sync recursive\"), exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n})(function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.clear = exports.MemoizeExpiring = exports.Memoize = void 0;\n    function Memoize(args) {\n        var hashFunction;\n        var duration;\n        var tags;\n        if (typeof args === 'object') {\n            hashFunction = args.hashFunction;\n            duration = args.expiring;\n            tags = args.tags;\n        }\n        else {\n            hashFunction = args;\n        }\n        return function (target, propertyKey, descriptor) {\n            if (descriptor.value != null) {\n                descriptor.value = getNewFunction(descriptor.value, hashFunction, duration, tags);\n            }\n            else if (descriptor.get != null) {\n                descriptor.get = getNewFunction(descriptor.get, hashFunction, duration, tags);\n            }\n            else {\n                throw 'Only put a Memoize() decorator on a method or get accessor.';\n            }\n        };\n    }\n    exports.Memoize = Memoize;\n    function MemoizeExpiring(expiring, hashFunction) {\n        return Memoize({\n            expiring: expiring,\n            hashFunction: hashFunction\n        });\n    }\n    exports.MemoizeExpiring = MemoizeExpiring;\n    var clearCacheTagsMap = new Map();\n    function clear(tags) {\n        var cleared = new Set();\n        for (var _i = 0, tags_1 = tags; _i < tags_1.length; _i++) {\n            var tag = tags_1[_i];\n            var maps = clearCacheTagsMap.get(tag);\n            if (maps) {\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var mp = maps_1[_a];\n                    if (!cleared.has(mp)) {\n                        mp.clear();\n                        cleared.add(mp);\n                    }\n                }\n            }\n        }\n        return cleared.size;\n    }\n    exports.clear = clear;\n    function getNewFunction(originalMethod, hashFunction, duration, tags) {\n        if (duration === void 0) { duration = 0; }\n        var propMapName = Symbol(\"__memoized_map__\");\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var returnedValue;\n            if (!this.hasOwnProperty(propMapName)) {\n                Object.defineProperty(this, propMapName, {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: new Map()\n                });\n            }\n            var myMap = this[propMapName];\n            if (Array.isArray(tags)) {\n                for (var _a = 0, tags_2 = tags; _a < tags_2.length; _a++) {\n                    var tag = tags_2[_a];\n                    if (clearCacheTagsMap.has(tag)) {\n                        clearCacheTagsMap.get(tag).push(myMap);\n                    }\n                    else {\n                        clearCacheTagsMap.set(tag, [myMap]);\n                    }\n                }\n            }\n            if (hashFunction || args.length > 0 || duration > 0) {\n                var hashKey = void 0;\n                if (hashFunction === true) {\n                    hashKey = args.map(function (a) { return a.toString(); }).join('!');\n                }\n                else if (hashFunction) {\n                    hashKey = hashFunction.apply(this, args);\n                }\n                else {\n                    hashKey = args[0];\n                }\n                var timestampKey = hashKey + \"__timestamp\";\n                var isExpired = false;\n                if (duration > 0) {\n                    if (!myMap.has(timestampKey)) {\n                        isExpired = true;\n                    }\n                    else {\n                        var timestamp = myMap.get(timestampKey);\n                        isExpired = (Date.now() - timestamp) > duration;\n                    }\n                }\n                if (myMap.has(hashKey) && !isExpired) {\n                    returnedValue = myMap.get(hashKey);\n                }\n                else {\n                    returnedValue = originalMethod.apply(this, args);\n                    myMap.set(hashKey, returnedValue);\n                    if (duration > 0) {\n                        myMap.set(timestampKey, Date.now());\n                    }\n                }\n            }\n            else {\n                var hashKey = this;\n                if (myMap.has(hashKey)) {\n                    returnedValue = myMap.get(hashKey);\n                }\n                else {\n                    returnedValue = originalMethod.apply(this, args);\n                    myMap.set(hashKey, returnedValue);\n                }\n            }\n            return returnedValue;\n        };\n    }\n});\n//# sourceMappingURL=memoize-decorator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./ohio-sdk/node_modules/typescript-memoize/dist/memoize-decorator.js\n");

/***/ }),

/***/ "./ohio-sdk/node_modules/typescript-memoize/dist sync recursive":
/*!*************************************************************!*\
  !*** ./ohio-sdk/node_modules/typescript-memoize/dist/ sync ***!
  \*************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "./ohio-sdk/node_modules/typescript-memoize/dist sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "@chakra-ui/icons":
/*!***********************************!*\
  !*** external "@chakra-ui/icons" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@chakra-ui/icons");

/***/ }),

/***/ "@chakra-ui/react":
/*!***********************************!*\
  !*** external "@chakra-ui/react" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@chakra-ui/react");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-icons/bi":
/*!*********************************!*\
  !*** external "react-icons/bi" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-icons/bi");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "tslib":
/*!************************!*\
  !*** external "tslib" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = import("tslib");;

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_ts_decorate.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_ts_decorate.mjs ***!
  \********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ tslib__WEBPACK_IMPORTED_MODULE_0__.__decorate)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"tslib\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([tslib__WEBPACK_IMPORTED_MODULE_0__]);\ntslib__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdHNfZGVjb3JhdGUubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW50ZXJhY3QtYXBwLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX3RzX2RlY29yYXRlLm1qcz9hNTc0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IF9fZGVjb3JhdGUgYXMgZGVmYXVsdCB9IGZyb20gJ3RzbGliJ1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_ts_decorate.mjs\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();